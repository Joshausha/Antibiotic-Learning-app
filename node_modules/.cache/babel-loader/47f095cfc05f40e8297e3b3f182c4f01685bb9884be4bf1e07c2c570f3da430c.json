{"ast":null,"code":"/**\n * useResponsive Hook\n * Custom hook to handle responsive design logic\n * Detects screen size changes and returns whether the current screen is mobile\n * \n * Returns:\n * - isMobile: boolean - true if screen width is less than 768px\n */import{useState,useEffect}from'react';const useResponsive=()=>{const[isMobile,setIsMobile]=useState(false);useEffect(()=>{// Function to check if screen is mobile size\nconst checkMobile=()=>{setIsMobile(window.innerWidth<768);};// Check on initial load\ncheckMobile();// Add event listener for window resize\nwindow.addEventListener('resize',checkMobile);// Cleanup event listener on component unmount\nreturn()=>window.removeEventListener('resize',checkMobile);},[]);return isMobile;};export default useResponsive;","map":{"version":3,"names":["useState","useEffect","useResponsive","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/hooks/useResponsive.js"],"sourcesContent":["/**\n * useResponsive Hook\n * Custom hook to handle responsive design logic\n * Detects screen size changes and returns whether the current screen is mobile\n * \n * Returns:\n * - isMobile: boolean - true if screen width is less than 768px\n */\n\nimport { useState, useEffect } from 'react';\n\nconst useResponsive = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    // Function to check if screen is mobile size\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    // Check on initial load\n    checkMobile();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkMobile);\n\n    // Cleanup event listener on component unmount\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  return isMobile;\n};\n\nexport default useResponsive;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxBD,WAAW,CAACE,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CACtC,CAAC,CAED;AACAF,WAAW,CAAC,CAAC,CAEb;AACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,WAAW,CAAC,CAE9C;AACA,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,WAAW,CAAC,CAChE,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}