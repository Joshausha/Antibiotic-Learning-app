{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import useResponsive from'../hooks/useResponsive';import useSearch from'../hooks/useSearch';import useQuizProgress from'../hooks/useQuizProgress';import useBookmarks from'../hooks/useBookmarks';import usePathogenData from'../hooks/usePathogenData';import useAntibioticData from'../hooks/useAntibioticData';import useErrorHandler from'../hooks/useErrorHandler';import medicalConditions from'../data/medicalConditions';/**\n * AppContext - Centralized application state management\n * Reduces prop drilling by providing app-wide state through Context API\n */import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext();/**\n * AppProvider Component\n * Provides application state and data to all child components\n */export const AppProvider=_ref=>{let{children}=_ref;// Core app state\nconst[activeTab,setActiveTab]=useState('home');const[selectedCondition,setSelectedCondition]=useState(null);const[showMobileMenu,setShowMobileMenu]=useState(false);// Initialize error handler\nconst{withErrorHandling,fallbacks}=useErrorHandler();// Initialize all hooks with error handling\nconst isMobile=withErrorHandling(()=>useResponsive(),false,'useResponsive');const quizProgress=withErrorHandling(()=>useQuizProgress(),fallbacks.quizProgress,'useQuizProgress');const bookmarks=withErrorHandling(()=>useBookmarks(),fallbacks.bookmarks,'useBookmarks');const pathogenData=withErrorHandling(()=>usePathogenData(medicalConditions),fallbacks.pathogenData,'usePathogenData');const antibioticData=withErrorHandling(()=>useAntibioticData(medicalConditions),fallbacks.antibioticData,'useAntibioticData');// Search functionality for conditions\nconst searchFields=['name','category','commonPathogens','description'];const searchData=withErrorHandling(()=>useSearch(medicalConditions,searchFields),fallbacks.searchData(medicalConditions),'useSearch');// Context value object\nconst contextValue={// Core state\nactiveTab,setActiveTab,selectedCondition,setSelectedCondition,showMobileMenu,setShowMobileMenu,// Device state\nisMobile,// Data and functionality\nquizProgress,bookmarks,pathogenData,antibioticData,searchData,// Static data\nmedicalConditions};return/*#__PURE__*/_jsx(AppContext.Provider,{value:contextValue,children:children});};/**\n * useAppContext Hook\n * Custom hook to access the application context\n * Provides easy access to app state and functions\n */export const useAppContext=()=>{const context=useContext(AppContext);if(!context){throw new Error('useAppContext must be used within an AppProvider');}return context;};export default AppContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useResponsive","useSearch","useQuizProgress","useBookmarks","usePathogenData","useAntibioticData","useErrorHandler","medicalConditions","jsx","_jsx","AppContext","AppProvider","_ref","children","activeTab","setActiveTab","selectedCondition","setSelectedCondition","showMobileMenu","setShowMobileMenu","withErrorHandling","fallbacks","isMobile","quizProgress","bookmarks","pathogenData","antibioticData","searchFields","searchData","contextValue","Provider","value","useAppContext","context","Error"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport useResponsive from '../hooks/useResponsive';\nimport useSearch from '../hooks/useSearch';\nimport useQuizProgress from '../hooks/useQuizProgress';\nimport useBookmarks from '../hooks/useBookmarks';\nimport usePathogenData from '../hooks/usePathogenData';\nimport useAntibioticData from '../hooks/useAntibioticData';\nimport useErrorHandler from '../hooks/useErrorHandler';\nimport medicalConditions from '../data/medicalConditions';\n\n/**\n * AppContext - Centralized application state management\n * Reduces prop drilling by providing app-wide state through Context API\n */\nconst AppContext = createContext();\n\n/**\n * AppProvider Component\n * Provides application state and data to all child components\n */\nexport const AppProvider = ({ children }) => {\n  // Core app state\n  const [activeTab, setActiveTab] = useState('home');\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n\n  // Initialize error handler\n  const { withErrorHandling, fallbacks } = useErrorHandler();\n\n  // Initialize all hooks with error handling\n  const isMobile = withErrorHandling(\n    () => useResponsive(),\n    false,\n    'useResponsive'\n  );\n\n  const quizProgress = withErrorHandling(\n    () => useQuizProgress(),\n    fallbacks.quizProgress,\n    'useQuizProgress'\n  );\n\n  const bookmarks = withErrorHandling(\n    () => useBookmarks(),\n    fallbacks.bookmarks,\n    'useBookmarks'\n  );\n\n  const pathogenData = withErrorHandling(\n    () => usePathogenData(medicalConditions),\n    fallbacks.pathogenData,\n    'usePathogenData'\n  );\n\n  const antibioticData = withErrorHandling(\n    () => useAntibioticData(medicalConditions),\n    fallbacks.antibioticData,\n    'useAntibioticData'\n  );\n\n  // Search functionality for conditions\n  const searchFields = ['name', 'category', 'commonPathogens', 'description'];\n  const searchData = withErrorHandling(\n    () => useSearch(medicalConditions, searchFields),\n    fallbacks.searchData(medicalConditions),\n    'useSearch'\n  );\n\n  // Context value object\n  const contextValue = {\n    // Core state\n    activeTab,\n    setActiveTab,\n    selectedCondition,\n    setSelectedCondition,\n    showMobileMenu,\n    setShowMobileMenu,\n    \n    // Device state\n    isMobile,\n    \n    // Data and functionality\n    quizProgress,\n    bookmarks,\n    pathogenData,\n    antibioticData,\n    searchData,\n    \n    // Static data\n    medicalConditions,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n/**\n * useAppContext Hook\n * Custom hook to access the application context\n * Provides easy access to app state and functions\n */\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  \n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  \n  return context;\n};\n\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}