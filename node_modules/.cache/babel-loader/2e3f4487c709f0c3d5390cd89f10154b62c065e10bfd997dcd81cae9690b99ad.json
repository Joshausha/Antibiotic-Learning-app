{"ast":null,"code":"var _jsxFileName = \"/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Test data imports\nimport medicalConditions from './data/medicalConditions';\nimport quizQuestions from './data/quizQuestions';\n\n// Test buildIndexes function\nimport { buildIndexes } from './utils/dataIndexer';\n\n// Test basic hooks\nimport useResponsive from './hooks/useResponsive';\nimport useSearch from './hooks/useSearch';\n\n// Test problematic hooks\nimport usePathogenData from './hooks/usePathogenData';\nimport useAntibioticData from './hooks/useAntibioticData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log('App component rendering...');\n  console.log('Medical conditions loaded:', medicalConditions === null || medicalConditions === void 0 ? void 0 : medicalConditions.length);\n  console.log('Quiz questions loaded:', quizQuestions === null || quizQuestions === void 0 ? void 0 : quizQuestions.length);\n\n  // Test React state\n  const [testState] = useState('React state working');\n\n  // Test buildIndexes\n  let indexesResult = 'not tested';\n  try {\n    var _indexes$pathogens, _indexes$antibiotics;\n    const indexes = buildIndexes(medicalConditions);\n    indexesResult = `Success - ${((_indexes$pathogens = indexes.pathogens) === null || _indexes$pathogens === void 0 ? void 0 : _indexes$pathogens.length) || 0} pathogens, ${((_indexes$antibiotics = indexes.antibiotics) === null || _indexes$antibiotics === void 0 ? void 0 : _indexes$antibiotics.length) || 0} antibiotics`;\n    console.log('Indexes built successfully:', indexes);\n  } catch (error) {\n    indexesResult = `Error: ${error.message}`;\n    console.error('buildIndexes failed:', error);\n  }\n\n  // Test basic hooks\n  let hooksResult = 'not tested';\n  try {\n    const isMobile = useResponsive();\n    const searchFields = ['name', 'category'];\n    const {\n      searchTerm,\n      setSearchTerm,\n      filteredItems\n    } = useSearch(medicalConditions, searchFields);\n    hooksResult = `Success - Mobile: ${isMobile}, Search items: ${(filteredItems === null || filteredItems === void 0 ? void 0 : filteredItems.length) || 0}`;\n    console.log('Basic hooks working:', {\n      isMobile,\n      searchItemsCount: filteredItems === null || filteredItems === void 0 ? void 0 : filteredItems.length\n    });\n  } catch (error) {\n    hooksResult = `Error: ${error.message}`;\n    console.error('Basic hooks failed:', error);\n  }\n\n  // Test problematic hooks\n  let pathogenHooksResult = 'not tested';\n  try {\n    var _pathogenData$pathoge, _antibioticData$antib, _pathogenData$pathoge2, _antibioticData$antib2;\n    const pathogenData = usePathogenData(medicalConditions);\n    const antibioticData = useAntibioticData(medicalConditions);\n    pathogenHooksResult = `Success - Pathogens: ${((_pathogenData$pathoge = pathogenData.pathogens) === null || _pathogenData$pathoge === void 0 ? void 0 : _pathogenData$pathoge.length) || 0}, Antibiotics: ${((_antibioticData$antib = antibioticData.antibiotics) === null || _antibioticData$antib === void 0 ? void 0 : _antibioticData$antib.length) || 0}`;\n    console.log('Pathogen hooks working:', {\n      pathogenCount: (_pathogenData$pathoge2 = pathogenData.pathogens) === null || _pathogenData$pathoge2 === void 0 ? void 0 : _pathogenData$pathoge2.length,\n      antibioticCount: (_antibioticData$antib2 = antibioticData.antibiotics) === null || _antibioticData$antib2 === void 0 ? void 0 : _antibioticData$antib2.length\n    });\n  } catch (error) {\n    pathogenHooksResult = `Error: ${error.message}`;\n    console.error('Pathogen hooks failed:', error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-slate-50 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center py-16\",\n      children: \"Hello World - App is Working!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"Medical Conditions: \", (medicalConditions === null || medicalConditions === void 0 ? void 0 : medicalConditions.length) || 0, \" loaded\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"Quiz Questions: \", (quizQuestions === null || quizQuestions === void 0 ? void 0 : quizQuestions.length) || 0, \" loaded\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"BuildIndexes: \", indexesResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"Basic Hooks: \", hooksResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"Pathogen Hooks: \", pathogenHooksResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: [\"Test State: \", testState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jkUh0+AmCRShbrkq8yUSLMHaJ4w=\", false, function () {\n  return [useResponsive, useSearch, usePathogenData, useAntibioticData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","medicalConditions","quizQuestions","buildIndexes","useResponsive","useSearch","usePathogenData","useAntibioticData","jsxDEV","_jsxDEV","App","_s","console","log","length","testState","indexesResult","_indexes$pathogens","_indexes$antibiotics","indexes","pathogens","antibiotics","error","message","hooksResult","isMobile","searchFields","searchTerm","setSearchTerm","filteredItems","searchItemsCount","pathogenHooksResult","_pathogenData$pathoge","_antibioticData$antib","_pathogenData$pathoge2","_antibioticData$antib2","pathogenData","antibioticData","pathogenCount","antibioticCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Test data imports\nimport medicalConditions from './data/medicalConditions';\nimport quizQuestions from './data/quizQuestions';\n\n// Test buildIndexes function\nimport { buildIndexes } from './utils/dataIndexer';\n\n// Test basic hooks\nimport useResponsive from './hooks/useResponsive';\nimport useSearch from './hooks/useSearch';\n\n// Test problematic hooks\nimport usePathogenData from './hooks/usePathogenData';\nimport useAntibioticData from './hooks/useAntibioticData';\n\nfunction App() {\n  console.log('App component rendering...');\n  console.log('Medical conditions loaded:', medicalConditions?.length);\n  console.log('Quiz questions loaded:', quizQuestions?.length);\n  \n  // Test React state\n  const [testState] = useState('React state working');\n  \n  // Test buildIndexes\n  let indexesResult = 'not tested';\n  try {\n    const indexes = buildIndexes(medicalConditions);\n    indexesResult = `Success - ${indexes.pathogens?.length || 0} pathogens, ${indexes.antibiotics?.length || 0} antibiotics`;\n    console.log('Indexes built successfully:', indexes);\n  } catch (error) {\n    indexesResult = `Error: ${error.message}`;\n    console.error('buildIndexes failed:', error);\n  }\n  \n  // Test basic hooks\n  let hooksResult = 'not tested';\n  try {\n    const isMobile = useResponsive();\n    const searchFields = ['name', 'category'];\n    const { searchTerm, setSearchTerm, filteredItems } = useSearch(medicalConditions, searchFields);\n    hooksResult = `Success - Mobile: ${isMobile}, Search items: ${filteredItems?.length || 0}`;\n    console.log('Basic hooks working:', { isMobile, searchItemsCount: filteredItems?.length });\n  } catch (error) {\n    hooksResult = `Error: ${error.message}`;\n    console.error('Basic hooks failed:', error);\n  }\n  \n  // Test problematic hooks\n  let pathogenHooksResult = 'not tested';\n  try {\n    const pathogenData = usePathogenData(medicalConditions);\n    const antibioticData = useAntibioticData(medicalConditions);\n    pathogenHooksResult = `Success - Pathogens: ${pathogenData.pathogens?.length || 0}, Antibiotics: ${antibioticData.antibiotics?.length || 0}`;\n    console.log('Pathogen hooks working:', { \n      pathogenCount: pathogenData.pathogens?.length, \n      antibioticCount: antibioticData.antibiotics?.length \n    });\n  } catch (error) {\n    pathogenHooksResult = `Error: ${error.message}`;\n    console.error('Pathogen hooks failed:', error);\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-slate-50 font-sans\">\n      <h1 className=\"text-4xl font-bold text-center py-16\">\n        Hello World - App is Working!\n      </h1>\n      <p className=\"text-center text-gray-600\">\n        Medical Conditions: {medicalConditions?.length || 0} loaded\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Quiz Questions: {quizQuestions?.length || 0} loaded\n      </p>\n      <p className=\"text-center text-gray-600\">\n        BuildIndexes: {indexesResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Basic Hooks: {hooksResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Pathogen Hooks: {pathogenHooksResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Test State: {testState}\n      </p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}