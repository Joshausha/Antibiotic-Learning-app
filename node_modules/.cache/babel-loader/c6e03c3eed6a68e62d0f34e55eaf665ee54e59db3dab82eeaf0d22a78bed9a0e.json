{"ast":null,"code":"import{useCallback}from'react';/**\n * Custom hook for centralized error handling\n * Provides consistent error handling patterns across the application\n */const useErrorHandler=()=>{/**\n   * Safely executes a function and returns either the result or a fallback value\n   * @param {Function} fn - Function to execute\n   * @param {*} fallback - Fallback value if function fails\n   * @param {string} context - Context information for logging\n   * @returns {*} Function result or fallback value\n   */const safeExecute=useCallback(function(fn,fallback){let context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'unknown';try{const result=fn();console.log(\"\\u2705 \".concat(context,\" hook success\"));return result;}catch(error){console.error(\"\\u274C \".concat(context,\" hook failed:\"),error);return fallback;}},[]);/**\n   * Creates a safe version of a hook with error handling\n   * @param {Function} hook - Hook function to wrap\n   * @param {*} fallback - Fallback value if hook fails\n   * @param {string} hookName - Name of the hook for logging\n   * @returns {*} Hook result or fallback value\n   */const withErrorHandling=useCallback((hook,fallback,hookName)=>{return safeExecute(hook,fallback,hookName);},[safeExecute]);/**\n   * Default fallback objects for common hook patterns\n   */const fallbacks={quizProgress:{stats:{totalQuizzes:0,averageScore:0,improvementTrend:'insufficient',strongestCategory:'None',weakestCategory:'None',streakLength:0},recentQuizzes:[],clearHistory:()=>{},submitQuiz:()=>{},getDetailedStats:()=>({})},bookmarks:{bookmarkedConditions:[],isBookmarked:()=>false,toggleBookmark:()=>{}},pathogenData:{pathogens:[],selectedPathogen:null,selectedPathogenConditions:[],selectedPathogenAntibiotics:[],pathogenStats:null,filteredStats:null,searchQuery:'',gramFilter:'all',typeFilter:'all',sortBy:'name',searchPathogens:()=>{},filterByGramStatus:()=>{},filterByType:()=>{},setSortOrder:()=>{},selectPathogen:()=>{},clearSelection:()=>{},clearFilters:()=>{},findSimilarPathogens:()=>[],isLoading:false},antibioticData:{antibiotics:[],selectedAntibiotic:null,selectedAntibioticConditions:[],drugClassStats:[],availableDrugClasses:[],antibioticStats:null,filteredStats:null,searchQuery:'',drugClassFilter:'all',sortBy:'name',searchAntibiotics:()=>{},filterByDrugClass:()=>{},setSortOrder:()=>{},selectAntibiotic:()=>{},clearSelection:()=>{},clearFilters:()=>{},getAntibioticByName:()=>null,findAlternativeAntibiotics:()=>[],findCombinationTherapies:()=>[],getResistanceInfo:()=>null,isLoading:false},searchData:function(){let items=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return{searchTerm:'',setSearchTerm:()=>{},filteredItems:items};}};return{safeExecute,withErrorHandling,fallbacks};};export default useErrorHandler;","map":{"version":3,"names":["useCallback","useErrorHandler","safeExecute","fn","fallback","context","arguments","length","undefined","result","console","log","concat","error","withErrorHandling","hook","hookName","fallbacks","quizProgress","stats","totalQuizzes","averageScore","improvementTrend","strongestCategory","weakestCategory","streakLength","recentQuizzes","clearHistory","submitQuiz","getDetailedStats","bookmarks","bookmarkedConditions","isBookmarked","toggleBookmark","pathogenData","pathogens","selectedPathogen","selectedPathogenConditions","selectedPathogenAntibiotics","pathogenStats","filteredStats","searchQuery","gramFilter","typeFilter","sortBy","searchPathogens","filterByGramStatus","filterByType","setSortOrder","selectPathogen","clearSelection","clearFilters","findSimilarPathogens","isLoading","antibioticData","antibiotics","selectedAntibiotic","selectedAntibioticConditions","drugClassStats","availableDrugClasses","antibioticStats","drugClassFilter","searchAntibiotics","filterByDrugClass","selectAntibiotic","getAntibioticByName","findAlternativeAntibiotics","findCombinationTherapies","getResistanceInfo","searchData","items","searchTerm","setSearchTerm","filteredItems"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/hooks/useErrorHandler.js"],"sourcesContent":["import { useCallback } from 'react';\n\n/**\n * Custom hook for centralized error handling\n * Provides consistent error handling patterns across the application\n */\nconst useErrorHandler = () => {\n  /**\n   * Safely executes a function and returns either the result or a fallback value\n   * @param {Function} fn - Function to execute\n   * @param {*} fallback - Fallback value if function fails\n   * @param {string} context - Context information for logging\n   * @returns {*} Function result or fallback value\n   */\n  const safeExecute = useCallback((fn, fallback, context = 'unknown') => {\n    try {\n      const result = fn();\n      console.log(`✅ ${context} hook success`);\n      return result;\n    } catch (error) {\n      console.error(`❌ ${context} hook failed:`, error);\n      return fallback;\n    }\n  }, []);\n\n  /**\n   * Creates a safe version of a hook with error handling\n   * @param {Function} hook - Hook function to wrap\n   * @param {*} fallback - Fallback value if hook fails\n   * @param {string} hookName - Name of the hook for logging\n   * @returns {*} Hook result or fallback value\n   */\n  const withErrorHandling = useCallback((hook, fallback, hookName) => {\n    return safeExecute(hook, fallback, hookName);\n  }, [safeExecute]);\n\n  /**\n   * Default fallback objects for common hook patterns\n   */\n  const fallbacks = {\n    quizProgress: {\n      stats: {\n        totalQuizzes: 0,\n        averageScore: 0,\n        improvementTrend: 'insufficient',\n        strongestCategory: 'None',\n        weakestCategory: 'None',\n        streakLength: 0\n      },\n      recentQuizzes: [],\n      clearHistory: () => {},\n      submitQuiz: () => {},\n      getDetailedStats: () => ({})\n    },\n    \n    bookmarks: {\n      bookmarkedConditions: [],\n      isBookmarked: () => false,\n      toggleBookmark: () => {}\n    },\n    \n    pathogenData: {\n      pathogens: [],\n      selectedPathogen: null,\n      selectedPathogenConditions: [],\n      selectedPathogenAntibiotics: [],\n      pathogenStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      gramFilter: 'all',\n      typeFilter: 'all',\n      sortBy: 'name',\n      searchPathogens: () => {},\n      filterByGramStatus: () => {},\n      filterByType: () => {},\n      setSortOrder: () => {},\n      selectPathogen: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      findSimilarPathogens: () => [],\n      isLoading: false\n    },\n    \n    antibioticData: {\n      antibiotics: [],\n      selectedAntibiotic: null,\n      selectedAntibioticConditions: [],\n      drugClassStats: [],\n      availableDrugClasses: [],\n      antibioticStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      drugClassFilter: 'all',\n      sortBy: 'name',\n      searchAntibiotics: () => {},\n      filterByDrugClass: () => {},\n      setSortOrder: () => {},\n      selectAntibiotic: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      getAntibioticByName: () => null,\n      findAlternativeAntibiotics: () => [],\n      findCombinationTherapies: () => [],\n      getResistanceInfo: () => null,\n      isLoading: false\n    },\n    \n    searchData: (items = []) => ({\n      searchTerm: '',\n      setSearchTerm: () => {},\n      filteredItems: items\n    })\n  };\n\n  return {\n    safeExecute,\n    withErrorHandling,\n    fallbacks\n  };\n};\n\nexport default useErrorHandler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}