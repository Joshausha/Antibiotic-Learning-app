{"ast":null,"code":"/**\n * SimpleNetworkView Component\n * Basic SVG network visualization for pathogen-antibiotic relationships\n * Sophomore-level React component using simple SVG graphics\n */import React,{useState,useMemo}from'react';import{Network,ZoomIn,ZoomOut,RotateCcw,Info}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SimpleNetworkView=_ref=>{let{pathogens,selectedPathogen,onSelectPathogen,relationships}=_ref;const[zoom,setZoom]=useState(1);const[showLabels,setShowLabels]=useState(true);const[hoveredNode,setHoveredNode]=useState(null);// Network dimensions\nconst width=600;const height=400;const centerX=width/2;const centerY=height/2;// Calculate node positions in a circle\nconst nodePositions=useMemo(()=>{if(!pathogens||pathogens.length===0)return{};const positions={};const radius=Math.min(width,height)*0.3;pathogens.forEach((pathogen,index)=>{const angle=index/pathogens.length*2*Math.PI;positions[pathogen.id]={x:centerX+radius*Math.cos(angle),y:centerY+radius*Math.sin(angle)};});return positions;},[pathogens]);// Calculate connections based on shared antibiotics\nconst connections=useMemo(()=>{if(!pathogens||!relationships)return[];const conn=[];for(let i=0;i<pathogens.length;i++){for(let j=i+1;j<pathogens.length;j++){var _relationships$pathog,_relationships$pathog2;const pathogen1=pathogens[i];const pathogen2=pathogens[j];const antibiotics1=((_relationships$pathog=relationships[pathogen1.id])===null||_relationships$pathog===void 0?void 0:_relationships$pathog.antibiotics)||[];const antibiotics2=((_relationships$pathog2=relationships[pathogen2.id])===null||_relationships$pathog2===void 0?void 0:_relationships$pathog2.antibiotics)||[];// Find shared effective antibiotics\nconst shared=antibiotics1.filter(ab1=>ab1.effectiveness==='high'&&antibiotics2.some(ab2=>ab2.antibioticId===ab1.antibioticId&&ab2.effectiveness==='high'));if(shared.length>0){conn.push({source:pathogen1.id,target:pathogen2.id,weight:shared.length,sharedAntibiotics:shared.length});}}}return conn;},[pathogens,relationships]);// Get node color based on gram status\nconst getNodeColor=pathogen=>{if((selectedPathogen===null||selectedPathogen===void 0?void 0:selectedPathogen.id)===pathogen.id){return'#2563eb';// blue for selected\n}switch(pathogen.gramStatus){case'positive':return'#9333ea';// purple\ncase'negative':return'#dc2626';// red\ndefault:return'#6b7280';// gray\n}};// Get node radius based on severity\nconst getNodeRadius=pathogen=>{const baseRadius=8;switch(pathogen.severity){case'high':return baseRadius+4;case'medium':return baseRadius+2;case'low':return baseRadius;default:return baseRadius;}};// Handle node click\nconst handleNodeClick=pathogen=>{if(onSelectPathogen){onSelectPathogen(pathogen);}};// Handle zoom controls\nconst handleZoomIn=()=>setZoom(prev=>Math.min(prev+0.2,2));const handleZoomOut=()=>setZoom(prev=>Math.max(prev-0.2,0.5));const handleResetZoom=()=>setZoom(1);if(!pathogens||pathogens.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border p-6 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(Network,{className:\"w-12 h-12 mx-auto mb-3 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No pathogen data available\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-blue-100 rounded-lg\",children:/*#__PURE__*/_jsx(Network,{className:\"w-6 h-6 text-blue-600\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900\",children:\"Pathogen Network\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[pathogens.length,\" pathogens, \",connections.length,\" connections\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLabels(!showLabels),className:\"p-2 rounded text-xs \".concat(showLabels?'bg-blue-100 text-blue-600':'bg-gray-100 text-gray-600'),children:\"Labels\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomOut,className:\"p-2 bg-gray-100 hover:bg-gray-200 rounded\",children:/*#__PURE__*/_jsx(ZoomOut,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500 min-w-[3rem] text-center\",children:[Math.round(zoom*100),\"%\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomIn,className:\"p-2 bg-gray-100 hover:bg-gray-200 rounded\",children:/*#__PURE__*/_jsx(ZoomIn,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetZoom,className:\"p-2 bg-gray-100 hover:bg-gray-200 rounded\",children:/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 mt-3 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-purple-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Positive\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Negative\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-blue-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Selected\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-0.5 bg-gray-400\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Shared antibiotics\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg overflow-hidden bg-gray-50\",children:/*#__PURE__*/_jsxs(\"svg\",{width:width,height:height,style:{transform:\"scale(\".concat(zoom,\")\"),transformOrigin:'center'},children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"20\",height:\"20\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 20 0 L 0 0 0 20\",fill:\"none\",stroke:\"#e5e7eb\",strokeWidth:\"0.5\"})})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),connections.map((connection,index)=>{const sourcePos=nodePositions[connection.source];const targetPos=nodePositions[connection.target];if(!sourcePos||!targetPos)return null;return/*#__PURE__*/_jsx(\"line\",{x1:sourcePos.x,y1:sourcePos.y,x2:targetPos.x,y2:targetPos.y,stroke:\"#9ca3af\",strokeWidth:Math.max(1,connection.weight),opacity:0.6},index);}),pathogens.map(pathogen=>{const position=nodePositions[pathogen.id];if(!position)return null;const radius=getNodeRadius(pathogen);const color=getNodeColor(pathogen);const isHovered=(hoveredNode===null||hoveredNode===void 0?void 0:hoveredNode.id)===pathogen.id;const isSelected=(selectedPathogen===null||selectedPathogen===void 0?void 0:selectedPathogen.id)===pathogen.id;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:position.x,cy:position.y,r:radius,fill:color,stroke:isSelected?'#1f2937':'#ffffff',strokeWidth:isSelected?3:2,opacity:isHovered?0.9:0.8,style:{cursor:'pointer'},onClick:()=>handleNodeClick(pathogen),onMouseEnter:()=>setHoveredNode(pathogen),onMouseLeave:()=>setHoveredNode(null)}),showLabels&&/*#__PURE__*/_jsx(\"text\",{x:position.x,y:position.y+radius+15,textAnchor:\"middle\",fontSize:\"10\",fill:\"#374151\",style:{cursor:'pointer'},onClick:()=>handleNodeClick(pathogen),children:pathogen.commonName})]},pathogen.id);})]})}),hoveredNode&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(Info,{className:\"w-4 h-4 text-blue-600 mt-0.5\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-blue-900\",children:hoveredNode.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-blue-700\",children:hoveredNode.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-blue-600 mt-1\",children:[hoveredNode.gramStatus==='positive'?'Gram Positive':'Gram Negative',\" \\u2022\",hoveredNode.severity,\" severity \\u2022\",hoveredNode.shape]})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-3 bg-gray-50 border-t rounded-b-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 text-center\",children:\"Click nodes to explore pathogen details \\u2022 Lines show shared antibiotic coverage\"})})]});};export default SimpleNetworkView;","map":{"version":3,"names":["React","useState","useMemo","Network","ZoomIn","ZoomOut","RotateCcw","Info","jsx","_jsx","jsxs","_jsxs","SimpleNetworkView","_ref","pathogens","selectedPathogen","onSelectPathogen","relationships","zoom","setZoom","showLabels","setShowLabels","hoveredNode","setHoveredNode","width","height","centerX","centerY","nodePositions","length","positions","radius","Math","min","forEach","pathogen","index","angle","PI","id","x","cos","y","sin","connections","conn","i","j","_relationships$pathog","_relationships$pathog2","pathogen1","pathogen2","antibiotics1","antibiotics","antibiotics2","shared","filter","ab1","effectiveness","some","ab2","antibioticId","push","source","target","weight","sharedAntibiotics","getNodeColor","gramStatus","getNodeRadius","baseRadius","severity","handleNodeClick","handleZoomIn","prev","handleZoomOut","max","handleResetZoom","className","children","onClick","concat","round","style","transform","transformOrigin","patternUnits","d","fill","stroke","strokeWidth","map","connection","sourcePos","targetPos","x1","y1","x2","y2","opacity","position","color","isHovered","isSelected","cx","cy","r","cursor","onMouseEnter","onMouseLeave","textAnchor","fontSize","commonName","name","description","shape"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/SimpleNetworkView.js"],"sourcesContent":["/**\n * SimpleNetworkView Component\n * Basic SVG network visualization for pathogen-antibiotic relationships\n * Sophomore-level React component using simple SVG graphics\n */\n\nimport React, { useState, useMemo } from 'react';\nimport { Network, ZoomIn, ZoomOut, RotateCcw, Info } from 'lucide-react';\n\nconst SimpleNetworkView = ({ \n  pathogens, \n  selectedPathogen, \n  onSelectPathogen,\n  relationships \n}) => {\n  const [zoom, setZoom] = useState(1);\n  const [showLabels, setShowLabels] = useState(true);\n  const [hoveredNode, setHoveredNode] = useState(null);\n\n  // Network dimensions\n  const width = 600;\n  const height = 400;\n  const centerX = width / 2;\n  const centerY = height / 2;\n\n  // Calculate node positions in a circle\n  const nodePositions = useMemo(() => {\n    if (!pathogens || pathogens.length === 0) return {};\n    \n    const positions = {};\n    const radius = Math.min(width, height) * 0.3;\n    \n    pathogens.forEach((pathogen, index) => {\n      const angle = (index / pathogens.length) * 2 * Math.PI;\n      positions[pathogen.id] = {\n        x: centerX + radius * Math.cos(angle),\n        y: centerY + radius * Math.sin(angle)\n      };\n    });\n    \n    return positions;\n  }, [pathogens]);\n\n  // Calculate connections based on shared antibiotics\n  const connections = useMemo(() => {\n    if (!pathogens || !relationships) return [];\n    \n    const conn = [];\n    \n    for (let i = 0; i < pathogens.length; i++) {\n      for (let j = i + 1; j < pathogens.length; j++) {\n        const pathogen1 = pathogens[i];\n        const pathogen2 = pathogens[j];\n        \n        const antibiotics1 = relationships[pathogen1.id]?.antibiotics || [];\n        const antibiotics2 = relationships[pathogen2.id]?.antibiotics || [];\n        \n        // Find shared effective antibiotics\n        const shared = antibiotics1.filter(ab1 => \n          ab1.effectiveness === 'high' &&\n          antibiotics2.some(ab2 => \n            ab2.antibioticId === ab1.antibioticId && ab2.effectiveness === 'high'\n          )\n        );\n        \n        if (shared.length > 0) {\n          conn.push({\n            source: pathogen1.id,\n            target: pathogen2.id,\n            weight: shared.length,\n            sharedAntibiotics: shared.length\n          });\n        }\n      }\n    }\n    \n    return conn;\n  }, [pathogens, relationships]);\n\n  // Get node color based on gram status\n  const getNodeColor = (pathogen) => {\n    if (selectedPathogen?.id === pathogen.id) {\n      return '#2563eb'; // blue for selected\n    }\n    \n    switch (pathogen.gramStatus) {\n      case 'positive':\n        return '#9333ea'; // purple\n      case 'negative':\n        return '#dc2626'; // red\n      default:\n        return '#6b7280'; // gray\n    }\n  };\n\n  // Get node radius based on severity\n  const getNodeRadius = (pathogen) => {\n    const baseRadius = 8;\n    switch (pathogen.severity) {\n      case 'high':\n        return baseRadius + 4;\n      case 'medium':\n        return baseRadius + 2;\n      case 'low':\n        return baseRadius;\n      default:\n        return baseRadius;\n    }\n  };\n\n  // Handle node click\n  const handleNodeClick = (pathogen) => {\n    if (onSelectPathogen) {\n      onSelectPathogen(pathogen);\n    }\n  };\n\n  // Handle zoom controls\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\n  const handleResetZoom = () => setZoom(1);\n\n  if (!pathogens || pathogens.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center text-gray-500\">\n        <Network className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n        <p>No pathogen data available</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border\">\n      {/* Header */}\n      <div className=\"p-4 border-b bg-gray-50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Network className=\"w-6 h-6 text-blue-600\" />\n            </div>\n            <div>\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                Pathogen Network\n              </h2>\n              <p className=\"text-sm text-gray-600\">\n                {pathogens.length} pathogens, {connections.length} connections\n              </p>\n            </div>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setShowLabels(!showLabels)}\n              className={`p-2 rounded text-xs ${showLabels ? 'bg-blue-100 text-blue-600' : 'bg-gray-100 text-gray-600'}`}\n            >\n              Labels\n            </button>\n            <button\n              onClick={handleZoomOut}\n              className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded\"\n            >\n              <ZoomOut className=\"w-4 h-4\" />\n            </button>\n            <span className=\"text-xs text-gray-500 min-w-[3rem] text-center\">\n              {Math.round(zoom * 100)}%\n            </span>\n            <button\n              onClick={handleZoomIn}\n              className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded\"\n            >\n              <ZoomIn className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={handleResetZoom}\n              className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded\"\n            >\n              <RotateCcw className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex flex-wrap gap-4 mt-3 text-xs\">\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n            <span>Gram Positive</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n            <span>Gram Negative</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n            <span>Selected</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-8 h-0.5 bg-gray-400\"></div>\n            <span>Shared antibiotics</span>\n          </div>\n        </div>\n      </div>\n\n      {/* SVG Network */}\n      <div className=\"p-4\">\n        <div className=\"border rounded-lg overflow-hidden bg-gray-50\">\n          <svg \n            width={width} \n            height={height}\n            style={{ transform: `scale(${zoom})`, transformOrigin: 'center' }}\n          >\n            {/* Grid background */}\n            <defs>\n              <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#e5e7eb\" strokeWidth=\"0.5\"/>\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n            {/* Connections */}\n            {connections.map((connection, index) => {\n              const sourcePos = nodePositions[connection.source];\n              const targetPos = nodePositions[connection.target];\n              \n              if (!sourcePos || !targetPos) return null;\n              \n              return (\n                <line\n                  key={index}\n                  x1={sourcePos.x}\n                  y1={sourcePos.y}\n                  x2={targetPos.x}\n                  y2={targetPos.y}\n                  stroke=\"#9ca3af\"\n                  strokeWidth={Math.max(1, connection.weight)}\n                  opacity={0.6}\n                />\n              );\n            })}\n\n            {/* Nodes */}\n            {pathogens.map((pathogen) => {\n              const position = nodePositions[pathogen.id];\n              if (!position) return null;\n              \n              const radius = getNodeRadius(pathogen);\n              const color = getNodeColor(pathogen);\n              const isHovered = hoveredNode?.id === pathogen.id;\n              const isSelected = selectedPathogen?.id === pathogen.id;\n              \n              return (\n                <g key={pathogen.id}>\n                  {/* Node circle */}\n                  <circle\n                    cx={position.x}\n                    cy={position.y}\n                    r={radius}\n                    fill={color}\n                    stroke={isSelected ? '#1f2937' : '#ffffff'}\n                    strokeWidth={isSelected ? 3 : 2}\n                    opacity={isHovered ? 0.9 : 0.8}\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => handleNodeClick(pathogen)}\n                    onMouseEnter={() => setHoveredNode(pathogen)}\n                    onMouseLeave={() => setHoveredNode(null)}\n                  />\n                  \n                  {/* Node label */}\n                  {showLabels && (\n                    <text\n                      x={position.x}\n                      y={position.y + radius + 15}\n                      textAnchor=\"middle\"\n                      fontSize=\"10\"\n                      fill=\"#374151\"\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => handleNodeClick(pathogen)}\n                    >\n                      {pathogen.commonName}\n                    </text>\n                  )}\n                </g>\n              );\n            })}\n          </svg>\n        </div>\n\n        {/* Hover info */}\n        {hoveredNode && (\n          <div className=\"mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-start gap-2\">\n              <Info className=\"w-4 h-4 text-blue-600 mt-0.5\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-blue-900\">\n                  {hoveredNode.name}\n                </h4>\n                <p className=\"text-xs text-blue-700\">\n                  {hoveredNode.description}\n                </p>\n                <p className=\"text-xs text-blue-600 mt-1\">\n                  {hoveredNode.gramStatus === 'positive' ? 'Gram Positive' : 'Gram Negative'} • \n                  {hoveredNode.severity} severity • \n                  {hoveredNode.shape}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"px-4 py-3 bg-gray-50 border-t rounded-b-lg\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Click nodes to explore pathogen details • Lines show shared antibiotic coverage\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleNetworkView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}