{"ast":null,"code":"/**\n * Animation Utilities\n * Provides smooth animations and transitions for tactile interactions\n * Enhances the pathogen exploration experience with visual feedback\n */\n\n// CSS animation classes for dynamic injection\nexport const animationClasses = {\n  // Pulse animations for highlights\n  pulseBlue: `\n    @keyframes pulse-blue {\n      0%, 100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7); }\n      50% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }\n    }\n    .pulse-blue { animation: pulse-blue 2s infinite; }\n  `,\n  // Bounce animation for selections\n  bounceIn: `\n    @keyframes bounce-in {\n      0% { transform: scale(0.3); opacity: 0; }\n      50% { transform: scale(1.1); opacity: 0.8; }\n      70% { transform: scale(0.9); opacity: 0.9; }\n      100% { transform: scale(1); opacity: 1; }\n    }\n    .bounce-in { animation: bounce-in 0.5s ease-out; }\n  `,\n  // Slide animations for panels\n  slideInRight: `\n    @keyframes slide-in-right {\n      0% { transform: translateX(100%); opacity: 0; }\n      100% { transform: translateX(0); opacity: 1; }\n    }\n    .slide-in-right { animation: slide-in-right 0.3s ease-out; }\n  `,\n  slideInLeft: `\n    @keyframes slide-in-left {\n      0% { transform: translateX(-100%); opacity: 0; }\n      100% { transform: translateX(0); opacity: 1; }\n    }\n    .slide-in-left { animation: slide-in-left 0.3s ease-out; }\n  `,\n  // Fade animations\n  fadeIn: `\n    @keyframes fade-in {\n      0% { opacity: 0; transform: translateY(20px); }\n      100% { opacity: 1; transform: translateY(0); }\n    }\n    .fade-in { animation: fade-in 0.4s ease-out; }\n  `,\n  // Scale animations for network nodes\n  scaleIn: `\n    @keyframes scale-in {\n      0% { transform: scale(0) rotate(180deg); opacity: 0; }\n      100% { transform: scale(1) rotate(0deg); opacity: 1; }\n    }\n    .scale-in { animation: scale-in 0.3s ease-out; }\n  `,\n  // Ripple effect for button interactions\n  ripple: `\n    @keyframes ripple {\n      0% { transform: scale(0); opacity: 1; }\n      100% { transform: scale(4); opacity: 0; }\n    }\n    .ripple-effect { \n      position: relative; \n      overflow: hidden; \n    }\n    .ripple-effect::before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 0;\n      height: 0;\n      border-radius: 50%;\n      background: rgba(255, 255, 255, 0.6);\n      transform: translate(-50%, -50%);\n      transition: width 0.6s, height 0.6s;\n    }\n    .ripple-effect:active::before {\n      width: 300px;\n      height: 300px;\n    }\n  `,\n  // Connection line drawing animation\n  drawLine: `\n    @keyframes draw-line {\n      0% { stroke-dashoffset: 100%; }\n      100% { stroke-dashoffset: 0%; }\n    }\n    .draw-line { \n      stroke-dasharray: 100%;\n      animation: draw-line 1s ease-in-out;\n    }\n  `,\n  // Glow effect for active elements\n  glow: `\n    @keyframes glow {\n      0%, 100% { box-shadow: 0 0 5px rgba(59, 130, 246, 0.5); }\n      50% { box-shadow: 0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.6); }\n    }\n    .glow { animation: glow 2s ease-in-out infinite; }\n  `,\n  // Shake animation for errors or attention\n  shake: `\n    @keyframes shake {\n      0%, 100% { transform: translateX(0); }\n      25% { transform: translateX(-5px); }\n      75% { transform: translateX(5px); }\n    }\n    .shake { animation: shake 0.5s ease-in-out; }\n  `\n};\n\n// Inject animation styles into the document\nexport const injectAnimationStyles = () => {\n  const styleId = 'pathogen-explorer-animations';\n\n  // Remove existing styles if they exist\n  const existingStyle = document.getElementById(styleId);\n  if (existingStyle) {\n    existingStyle.remove();\n  }\n\n  // Create and inject new style element\n  const style = document.createElement('style');\n  style.id = styleId;\n  style.textContent = Object.values(animationClasses).join('\\n');\n  document.head.appendChild(style);\n};\n\n// Animation controller class for managing complex animations\nexport class AnimationController {\n  constructor() {\n    this.activeAnimations = new Map();\n    this.animationQueue = [];\n    this.isProcessing = false;\n  }\n\n  // Add animation to an element with cleanup\n  animate(element, animationClass, duration = 300, cleanup = true) {\n    return new Promise(resolve => {\n      if (!element) {\n        resolve();\n        return;\n      }\n\n      // Clean up previous animation if exists\n      if (this.activeAnimations.has(element)) {\n        this.stopAnimation(element);\n      }\n\n      // Apply animation class\n      element.classList.add(animationClass);\n\n      // Set up cleanup\n      const animationHandler = () => {\n        if (cleanup) {\n          element.classList.remove(animationClass);\n        }\n        element.removeEventListener('animationend', animationHandler);\n        this.activeAnimations.delete(element);\n        resolve();\n      };\n      element.addEventListener('animationend', animationHandler);\n      this.activeAnimations.set(element, {\n        animationClass,\n        handler: animationHandler\n      });\n\n      // Fallback timeout in case animationend doesn't fire\n      setTimeout(() => {\n        if (this.activeAnimations.has(element)) {\n          animationHandler();\n        }\n      }, duration + 100);\n    });\n  }\n\n  // Stop animation on element\n  stopAnimation(element) {\n    const animation = this.activeAnimations.get(element);\n    if (animation) {\n      element.classList.remove(animation.animationClass);\n      element.removeEventListener('animationend', animation.handler);\n      this.activeAnimations.delete(element);\n    }\n  }\n\n  // Animate multiple elements in sequence\n  async animateSequence(animations) {\n    for (const {\n      element,\n      animationClass,\n      duration,\n      delay = 0\n    } of animations) {\n      if (delay > 0) {\n        await this.delay(delay);\n      }\n      await this.animate(element, animationClass, duration);\n    }\n  }\n\n  // Animate multiple elements in parallel\n  async animateParallel(animations) {\n    const promises = animations.map(({\n      element,\n      animationClass,\n      duration,\n      delay = 0\n    }) => {\n      return new Promise(async resolve => {\n        if (delay > 0) {\n          await this.delay(delay);\n        }\n        await this.animate(element, animationClass, duration);\n        resolve();\n      });\n    });\n    await Promise.all(promises);\n  }\n\n  // Staggered animation for lists\n  async animateStagger(elements, animationClass, staggerDelay = 100, duration = 300) {\n    const animations = Array.from(elements).map((element, index) => ({\n      element,\n      animationClass,\n      duration,\n      delay: index * staggerDelay\n    }));\n    await this.animateParallel(animations);\n  }\n\n  // Utility delay function\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  // Create ripple effect on click\n  createRipple(element, event) {\n    const ripple = document.createElement('div');\n    const rect = element.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n    ripple.style.cssText = `\n      position: absolute;\n      width: ${size}px;\n      height: ${size}px;\n      left: ${x}px;\n      top: ${y}px;\n      background: radial-gradient(circle, rgba(255,255,255,0.6) 0%, transparent 70%);\n      border-radius: 50%;\n      pointer-events: none;\n      animation: ripple 0.6s ease-out;\n      z-index: 1000;\n    `;\n    element.style.position = 'relative';\n    element.appendChild(ripple);\n    setTimeout(() => {\n      if (ripple.parentNode) {\n        ripple.parentNode.removeChild(ripple);\n      }\n    }, 600);\n  }\n\n  // Cleanup all animations\n  cleanup() {\n    this.activeAnimations.forEach((animation, element) => {\n      this.stopAnimation(element);\n    });\n    this.activeAnimations.clear();\n  }\n}\n\n// Intersection Observer for scroll-triggered animations\nexport class ScrollAnimationController {\n  constructor(options = {}) {\n    this.options = {\n      threshold: 0.1,\n      rootMargin: '0px 0px -10% 0px',\n      ...options\n    };\n    this.observer = new IntersectionObserver(this.handleIntersection.bind(this), this.options);\n    this.animatedElements = new Set();\n  }\n  handleIntersection(entries) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting && !this.animatedElements.has(entry.target)) {\n        const animationClass = entry.target.dataset.scrollAnimation || 'fade-in';\n        entry.target.classList.add(animationClass);\n        this.animatedElements.add(entry.target);\n\n        // Optional: stop observing after animation\n        if (entry.target.dataset.animateOnce !== 'false') {\n          this.observer.unobserve(entry.target);\n        }\n      }\n    });\n  }\n  observe(element, animationClass = 'fade-in') {\n    element.dataset.scrollAnimation = animationClass;\n    this.observer.observe(element);\n  }\n  unobserve(element) {\n    this.observer.unobserve(element);\n    this.animatedElements.delete(element);\n  }\n  disconnect() {\n    this.observer.disconnect();\n    this.animatedElements.clear();\n  }\n}\n\n// Hook for using animations in React components  \n// Note: This requires React to be imported in the component that uses it\nexport const useAnimations = () => {\n  const animationController = new AnimationController();\n\n  // This would be used in a React component with proper useEffect import\n  // React.useEffect(() => {\n  //   injectAnimationStyles();\n  //   \n  //   return () => {\n  //     animationController.cleanup();\n  //   };\n  // }, []);\n\n  return animationController;\n};\n\n// Default animation controller instance\nexport const defaultAnimationController = new AnimationController();\n\n// Initialize animations when module loads\nif (typeof document !== 'undefined') {\n  injectAnimationStyles();\n}","map":{"version":3,"names":["animationClasses","pulseBlue","bounceIn","slideInRight","slideInLeft","fadeIn","scaleIn","ripple","drawLine","glow","shake","injectAnimationStyles","styleId","existingStyle","document","getElementById","remove","style","createElement","id","textContent","Object","values","join","head","appendChild","AnimationController","constructor","activeAnimations","Map","animationQueue","isProcessing","animate","element","animationClass","duration","cleanup","Promise","resolve","has","stopAnimation","classList","add","animationHandler","removeEventListener","delete","addEventListener","set","handler","setTimeout","animation","get","animateSequence","animations","delay","animateParallel","promises","map","all","animateStagger","elements","staggerDelay","Array","from","index","ms","createRipple","event","rect","getBoundingClientRect","size","Math","max","width","height","x","clientX","left","y","clientY","top","cssText","position","parentNode","removeChild","forEach","clear","ScrollAnimationController","options","threshold","rootMargin","observer","IntersectionObserver","handleIntersection","bind","animatedElements","Set","entries","entry","isIntersecting","target","dataset","scrollAnimation","animateOnce","unobserve","observe","disconnect","useAnimations","animationController","defaultAnimationController"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/utils/animations.js"],"sourcesContent":["/**\n * Animation Utilities\n * Provides smooth animations and transitions for tactile interactions\n * Enhances the pathogen exploration experience with visual feedback\n */\n\n// CSS animation classes for dynamic injection\nexport const animationClasses = {\n  // Pulse animations for highlights\n  pulseBlue: `\n    @keyframes pulse-blue {\n      0%, 100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7); }\n      50% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }\n    }\n    .pulse-blue { animation: pulse-blue 2s infinite; }\n  `,\n  \n  // Bounce animation for selections\n  bounceIn: `\n    @keyframes bounce-in {\n      0% { transform: scale(0.3); opacity: 0; }\n      50% { transform: scale(1.1); opacity: 0.8; }\n      70% { transform: scale(0.9); opacity: 0.9; }\n      100% { transform: scale(1); opacity: 1; }\n    }\n    .bounce-in { animation: bounce-in 0.5s ease-out; }\n  `,\n  \n  // Slide animations for panels\n  slideInRight: `\n    @keyframes slide-in-right {\n      0% { transform: translateX(100%); opacity: 0; }\n      100% { transform: translateX(0); opacity: 1; }\n    }\n    .slide-in-right { animation: slide-in-right 0.3s ease-out; }\n  `,\n  \n  slideInLeft: `\n    @keyframes slide-in-left {\n      0% { transform: translateX(-100%); opacity: 0; }\n      100% { transform: translateX(0); opacity: 1; }\n    }\n    .slide-in-left { animation: slide-in-left 0.3s ease-out; }\n  `,\n  \n  // Fade animations\n  fadeIn: `\n    @keyframes fade-in {\n      0% { opacity: 0; transform: translateY(20px); }\n      100% { opacity: 1; transform: translateY(0); }\n    }\n    .fade-in { animation: fade-in 0.4s ease-out; }\n  `,\n  \n  // Scale animations for network nodes\n  scaleIn: `\n    @keyframes scale-in {\n      0% { transform: scale(0) rotate(180deg); opacity: 0; }\n      100% { transform: scale(1) rotate(0deg); opacity: 1; }\n    }\n    .scale-in { animation: scale-in 0.3s ease-out; }\n  `,\n  \n  // Ripple effect for button interactions\n  ripple: `\n    @keyframes ripple {\n      0% { transform: scale(0); opacity: 1; }\n      100% { transform: scale(4); opacity: 0; }\n    }\n    .ripple-effect { \n      position: relative; \n      overflow: hidden; \n    }\n    .ripple-effect::before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 0;\n      height: 0;\n      border-radius: 50%;\n      background: rgba(255, 255, 255, 0.6);\n      transform: translate(-50%, -50%);\n      transition: width 0.6s, height 0.6s;\n    }\n    .ripple-effect:active::before {\n      width: 300px;\n      height: 300px;\n    }\n  `,\n  \n  // Connection line drawing animation\n  drawLine: `\n    @keyframes draw-line {\n      0% { stroke-dashoffset: 100%; }\n      100% { stroke-dashoffset: 0%; }\n    }\n    .draw-line { \n      stroke-dasharray: 100%;\n      animation: draw-line 1s ease-in-out;\n    }\n  `,\n  \n  // Glow effect for active elements\n  glow: `\n    @keyframes glow {\n      0%, 100% { box-shadow: 0 0 5px rgba(59, 130, 246, 0.5); }\n      50% { box-shadow: 0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.6); }\n    }\n    .glow { animation: glow 2s ease-in-out infinite; }\n  `,\n  \n  // Shake animation for errors or attention\n  shake: `\n    @keyframes shake {\n      0%, 100% { transform: translateX(0); }\n      25% { transform: translateX(-5px); }\n      75% { transform: translateX(5px); }\n    }\n    .shake { animation: shake 0.5s ease-in-out; }\n  `\n};\n\n// Inject animation styles into the document\nexport const injectAnimationStyles = () => {\n  const styleId = 'pathogen-explorer-animations';\n  \n  // Remove existing styles if they exist\n  const existingStyle = document.getElementById(styleId);\n  if (existingStyle) {\n    existingStyle.remove();\n  }\n  \n  // Create and inject new style element\n  const style = document.createElement('style');\n  style.id = styleId;\n  style.textContent = Object.values(animationClasses).join('\\n');\n  document.head.appendChild(style);\n};\n\n// Animation controller class for managing complex animations\nexport class AnimationController {\n  constructor() {\n    this.activeAnimations = new Map();\n    this.animationQueue = [];\n    this.isProcessing = false;\n  }\n  \n  // Add animation to an element with cleanup\n  animate(element, animationClass, duration = 300, cleanup = true) {\n    return new Promise((resolve) => {\n      if (!element) {\n        resolve();\n        return;\n      }\n      \n      // Clean up previous animation if exists\n      if (this.activeAnimations.has(element)) {\n        this.stopAnimation(element);\n      }\n      \n      // Apply animation class\n      element.classList.add(animationClass);\n      \n      // Set up cleanup\n      const animationHandler = () => {\n        if (cleanup) {\n          element.classList.remove(animationClass);\n        }\n        element.removeEventListener('animationend', animationHandler);\n        this.activeAnimations.delete(element);\n        resolve();\n      };\n      \n      element.addEventListener('animationend', animationHandler);\n      this.activeAnimations.set(element, { animationClass, handler: animationHandler });\n      \n      // Fallback timeout in case animationend doesn't fire\n      setTimeout(() => {\n        if (this.activeAnimations.has(element)) {\n          animationHandler();\n        }\n      }, duration + 100);\n    });\n  }\n  \n  // Stop animation on element\n  stopAnimation(element) {\n    const animation = this.activeAnimations.get(element);\n    if (animation) {\n      element.classList.remove(animation.animationClass);\n      element.removeEventListener('animationend', animation.handler);\n      this.activeAnimations.delete(element);\n    }\n  }\n  \n  // Animate multiple elements in sequence\n  async animateSequence(animations) {\n    for (const { element, animationClass, duration, delay = 0 } of animations) {\n      if (delay > 0) {\n        await this.delay(delay);\n      }\n      await this.animate(element, animationClass, duration);\n    }\n  }\n  \n  // Animate multiple elements in parallel\n  async animateParallel(animations) {\n    const promises = animations.map(({ element, animationClass, duration, delay = 0 }) => {\n      return new Promise(async (resolve) => {\n        if (delay > 0) {\n          await this.delay(delay);\n        }\n        await this.animate(element, animationClass, duration);\n        resolve();\n      });\n    });\n    \n    await Promise.all(promises);\n  }\n  \n  // Staggered animation for lists\n  async animateStagger(elements, animationClass, staggerDelay = 100, duration = 300) {\n    const animations = Array.from(elements).map((element, index) => ({\n      element,\n      animationClass,\n      duration,\n      delay: index * staggerDelay\n    }));\n    \n    await this.animateParallel(animations);\n  }\n  \n  // Utility delay function\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  \n  // Create ripple effect on click\n  createRipple(element, event) {\n    const ripple = document.createElement('div');\n    const rect = element.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n    \n    ripple.style.cssText = `\n      position: absolute;\n      width: ${size}px;\n      height: ${size}px;\n      left: ${x}px;\n      top: ${y}px;\n      background: radial-gradient(circle, rgba(255,255,255,0.6) 0%, transparent 70%);\n      border-radius: 50%;\n      pointer-events: none;\n      animation: ripple 0.6s ease-out;\n      z-index: 1000;\n    `;\n    \n    element.style.position = 'relative';\n    element.appendChild(ripple);\n    \n    setTimeout(() => {\n      if (ripple.parentNode) {\n        ripple.parentNode.removeChild(ripple);\n      }\n    }, 600);\n  }\n  \n  // Cleanup all animations\n  cleanup() {\n    this.activeAnimations.forEach((animation, element) => {\n      this.stopAnimation(element);\n    });\n    this.activeAnimations.clear();\n  }\n}\n\n// Intersection Observer for scroll-triggered animations\nexport class ScrollAnimationController {\n  constructor(options = {}) {\n    this.options = {\n      threshold: 0.1,\n      rootMargin: '0px 0px -10% 0px',\n      ...options\n    };\n    \n    this.observer = new IntersectionObserver(\n      this.handleIntersection.bind(this),\n      this.options\n    );\n    \n    this.animatedElements = new Set();\n  }\n  \n  handleIntersection(entries) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting && !this.animatedElements.has(entry.target)) {\n        const animationClass = entry.target.dataset.scrollAnimation || 'fade-in';\n        entry.target.classList.add(animationClass);\n        this.animatedElements.add(entry.target);\n        \n        // Optional: stop observing after animation\n        if (entry.target.dataset.animateOnce !== 'false') {\n          this.observer.unobserve(entry.target);\n        }\n      }\n    });\n  }\n  \n  observe(element, animationClass = 'fade-in') {\n    element.dataset.scrollAnimation = animationClass;\n    this.observer.observe(element);\n  }\n  \n  unobserve(element) {\n    this.observer.unobserve(element);\n    this.animatedElements.delete(element);\n  }\n  \n  disconnect() {\n    this.observer.disconnect();\n    this.animatedElements.clear();\n  }\n}\n\n// Hook for using animations in React components  \n// Note: This requires React to be imported in the component that uses it\nexport const useAnimations = () => {\n  const animationController = new AnimationController();\n  \n  // This would be used in a React component with proper useEffect import\n  // React.useEffect(() => {\n  //   injectAnimationStyles();\n  //   \n  //   return () => {\n  //     animationController.cleanup();\n  //   };\n  // }, []);\n  \n  return animationController;\n};\n\n// Default animation controller instance\nexport const defaultAnimationController = new AnimationController();\n\n// Initialize animations when module loads\nif (typeof document !== 'undefined') {\n  injectAnimationStyles();\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,gBAAgB,GAAG;EAC9B;EACAC,SAAS,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,QAAQ,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,YAAY,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;EAEDC,WAAW,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,MAAM,EAAE;AACV;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,OAAO,EAAE;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,MAAM,EAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,QAAQ,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,IAAI,EAAE;AACR;AACA;AACA;AACA;AACA;AACA,GAAG;EAED;EACAC,KAAK,EAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACzC,MAAMC,OAAO,GAAG,8BAA8B;;EAE9C;EACA,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAACH,OAAO,CAAC;EACtD,IAAIC,aAAa,EAAE;IACjBA,aAAa,CAACG,MAAM,CAAC,CAAC;EACxB;;EAEA;EACA,MAAMC,KAAK,GAAGH,QAAQ,CAACI,aAAa,CAAC,OAAO,CAAC;EAC7CD,KAAK,CAACE,EAAE,GAAGP,OAAO;EAClBK,KAAK,CAACG,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACtB,gBAAgB,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;EAC9DT,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACR,KAAK,CAAC;AAClC,CAAC;;AAED;AACA,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}