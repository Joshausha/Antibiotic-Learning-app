{"ast":null,"code":"/**\n * PathogenNetworkVisualization Component\n * Interactive network visualization showing pathogen relationships and connections\n * Provides tactile exploration of pathogen data through clickable nodes and edges\n */import React,{useState,useEffect,useRef,useCallback}from'react';import{Microscope,Target,Info,Zap,Network,Filter,RotateCcw}from'lucide-react';import{defaultAnimationController}from'../utils/animations';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PathogenNetworkVisualization=_ref=>{var _network$edges,_nodePositions$get,_nodePositions$get2;let{network,selectedPathogen,onSelectPathogen,onShowPathDetails,className=''}=_ref;const svgRef=useRef(null);const[dimensions,setDimensions]=useState({width:800,height:600});const[hoveredNode,setHoveredNode]=useState(null);const[hoveredEdge,setHoveredEdge]=useState(null);const[nodePositions,setNodePositions]=useState(new Map());const[isAnimating,setIsAnimating]=useState(false);const[connectionFilter,setConnectionFilter]=useState('all');// 'all', 'strong', 'medium'\nconst[showLabels,setShowLabels]=useState(true);const[highlightedPath,setHighlightedPath]=useState([]);// Initialize node positions using force-directed layout simulation\nconst initializePositions=useCallback(()=>{if(!network||!network.nodes)return;const{width,height}=dimensions;const centerX=width/2;const centerY=height/2;const positions=new Map();// Place nodes in clusters based on gram status\nconst clusters={positive:{x:centerX-200,y:centerY-100,nodes:[]},negative:{x:centerX+200,y:centerY-100,nodes:[]},unknown:{x:centerX,y:centerY+150,nodes:[]}};// Group nodes by gram status\nnetwork.nodes.forEach(node=>{const gramStatus=node.clusterData.gramStatus;if(clusters[gramStatus]){clusters[gramStatus].nodes.push(node);}else{clusters.unknown.nodes.push(node);}});// Position nodes within their clusters\nObject.entries(clusters).forEach(_ref2=>{let[status,cluster]=_ref2;const{nodes}=cluster;const radius=Math.min(150,Math.max(50,nodes.length*8));nodes.forEach((node,index)=>{const angle=index/nodes.length*2*Math.PI;const jitter=(Math.random()-0.5)*40;// Add some randomness\npositions.set(node.id,{x:cluster.x+Math.cos(angle)*radius+jitter,y:cluster.y+Math.sin(angle)*radius+jitter,vx:0,vy:0});});});setNodePositions(positions);},[network,dimensions]);// Simple force simulation for better positioning\nconst runForceSimulation=useCallback(()=>{if(!network||nodePositions.size===0)return;setIsAnimating(true);const positions=new Map(nodePositions);const iterations=50;for(let i=0;i<iterations;i++){// Apply repulsion between nodes\npositions.forEach((pos1,id1)=>{positions.forEach((pos2,id2)=>{if(id1!==id2){const dx=pos1.x-pos2.x;const dy=pos1.y-pos2.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance<80&&distance>0){const repulsion=2000/(distance*distance);const fx=dx/distance*repulsion;const fy=dy/distance*repulsion;pos1.vx+=fx*0.1;pos1.vy+=fy*0.1;}}});});// Apply attraction along edges\nnetwork.edges.forEach(edge=>{const pos1=positions.get(edge.source);const pos2=positions.get(edge.target);if(pos1&&pos2){const dx=pos2.x-pos1.x;const dy=pos2.y-pos1.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance>100){const attraction=edge.weight*50;const fx=dx/distance*attraction;const fy=dy/distance*attraction;pos1.vx+=fx*0.01;pos1.vy+=fy*0.01;pos2.vx-=fx*0.01;pos2.vy-=fy*0.01;}}});// Update positions and apply damping\npositions.forEach(pos=>{pos.x+=pos.vx;pos.y+=pos.vy;pos.vx*=0.9;pos.vy*=0.9;// Keep nodes within bounds\npos.x=Math.max(30,Math.min(dimensions.width-30,pos.x));pos.y=Math.max(30,Math.min(dimensions.height-30,pos.y));});}setNodePositions(positions);setIsAnimating(false);},[network,nodePositions,dimensions]);// Initialize positions when network changes\nuseEffect(()=>{initializePositions();},[initializePositions]);// Handle window resize\nuseEffect(()=>{const handleResize=()=>{if(svgRef.current){const rect=svgRef.current.parentElement.getBoundingClientRect();setDimensions({width:Math.max(600,rect.width-40),height:Math.max(400,rect.height-40)});}};window.addEventListener('resize',handleResize);handleResize();return()=>window.removeEventListener('resize',handleResize);},[]);// Filter edges based on connection strength\nconst filteredEdges=(network===null||network===void 0?void 0:(_network$edges=network.edges)===null||_network$edges===void 0?void 0:_network$edges.filter(edge=>{if(connectionFilter==='all')return true;return edge.type===connectionFilter;}))||[];// Get node styling based on state\nconst getNodeStyle=node=>{const isSelected=(selectedPathogen===null||selectedPathogen===void 0?void 0:selectedPathogen.name)===node.id;const isHovered=(hoveredNode===null||hoveredNode===void 0?void 0:hoveredNode.id)===node.id;const isHighlighted=highlightedPath.includes(node.id);const isConnectedToSelected=selectedPathogen&&filteredEdges.some(e=>e.source===selectedPathogen.name&&e.target===node.id||e.target===selectedPathogen.name&&e.source===node.id);let fill='#e5e7eb';// default gray\nlet stroke='#9ca3af';let strokeWidth=2;// Color by gram status\nif(node.clusterData.gramStatus==='positive'){fill=isSelected?'#7c3aed':'#a855f7';}else if(node.clusterData.gramStatus==='negative'){fill=isSelected?'#dc2626':'#ef4444';}else{fill=isSelected?'#059669':'#10b981';}if(isHovered){strokeWidth=4;stroke='#1f2937';}else if(isConnectedToSelected){strokeWidth=3;stroke='#3b82f6';}else if(isHighlighted){strokeWidth=3;stroke='#f59e0b';}return{fill:isSelected?fill:fill+'dd',stroke,strokeWidth,opacity:selectedPathogen&&!isSelected&&!isConnectedToSelected?0.4:1};};// Get edge styling\nconst getEdgeStyle=edge=>{const isSelected=selectedPathogen&&(edge.source===selectedPathogen.name||edge.target===selectedPathogen.name);const isHovered=hoveredEdge===edge;const isInPath=highlightedPath.includes(edge.source)&&highlightedPath.includes(edge.target);let stroke='#9ca3af';let strokeWidth=edge.weight*4;let opacity=0.6;if(edge.type==='strong'){stroke='#059669';}else if(edge.type==='medium'){stroke='#3b82f6';}else{stroke='#6b7280';}if(isHovered){strokeWidth=Math.max(strokeWidth*1.5,3);opacity=1;}else if(isSelected){opacity=0.8;}else if(isInPath){stroke='#f59e0b';strokeWidth=Math.max(strokeWidth,3);opacity=0.9;}else if(selectedPathogen){opacity=isSelected?0.8:0.2;}return{stroke,strokeWidth,opacity};};// Handle node click with animation\nconst handleNodeClick=(node,event)=>{// Create ripple effect\nif(event&&event.target){defaultAnimationController.createRipple(event.target.parentElement,event);}onSelectPathogen(node.pathogen);setHighlightedPath([]);// Animate connected nodes\nsetTimeout(()=>{const connectedEdges=filteredEdges.filter(edge=>edge.source===node.id||edge.target===node.id);connectedEdges.forEach((edge,index)=>{setTimeout(()=>{setHighlightedPath(prev=>[...prev,edge.source,edge.target]);},index*100);});},200);};// Handle edge hover to show connection details\nconst handleEdgeHover=edge=>{setHoveredEdge(edge);if(onShowPathDetails){onShowPathDetails(edge.similarity);}};// Get node radius based on centrality\nconst getNodeRadius=node=>{const baseRadius=8;const centralityBonus=node.centralityScore*10;return Math.max(baseRadius,Math.min(20,baseRadius+centralityBonus));};if(!network||!network.nodes){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64 \".concat(className),children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:\"Loading network visualization...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Network,{className:\"text-blue-600\",size:20}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold\",children:\"Pathogen Network\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",network.nodes.length,\" pathogens, \",filteredEdges.length,\" connections)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:runForceSimulation,disabled:isAnimating,className:\"p-2 rounded-lg border hover:bg-gray-50 transition-colors disabled:opacity-50\",title:\"Reorganize layout\",children:/*#__PURE__*/_jsx(RotateCcw,{size:16,className:isAnimating?'animate-spin':''})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Filter,{size:16,className:\"text-gray-600\"}),/*#__PURE__*/_jsxs(\"select\",{value:connectionFilter,onChange:e=>setConnectionFilter(e.target.value),className:\"border rounded px-2 py-1 text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Connections\"}),/*#__PURE__*/_jsx(\"option\",{value:\"strong\",children:\"Strong Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weak\",children:\"Weak Only\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showLabels,onChange:e=>setShowLabels(e.target.checked),className:\"rounded\"}),\"Show Labels\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",style:{height:dimensions.height+40},children:[/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,width:dimensions.width,height:dimensions.height,className:\"border rounded-lg bg-gray-50\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"20\",height:\"20\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 20 0 L 0 0 0 20\",fill:\"none\",stroke:\"#f3f4f6\",strokeWidth:\"1\"})})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),/*#__PURE__*/_jsx(\"g\",{className:\"edges\",children:filteredEdges.map((edge,index)=>{const sourcePos=nodePositions.get(edge.source);const targetPos=nodePositions.get(edge.target);if(!sourcePos||!targetPos)return null;const style=getEdgeStyle(edge);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:sourcePos.x,y1:sourcePos.y,x2:targetPos.x,y2:targetPos.y,stroke:style.stroke,strokeWidth:style.strokeWidth,opacity:style.opacity,className:\"cursor-pointer transition-all duration-200\",onMouseEnter:()=>handleEdgeHover(edge),onMouseLeave:()=>setHoveredEdge(null)}),edge.type==='strong'&&showLabels&&/*#__PURE__*/_jsxs(\"text\",{x:(sourcePos.x+targetPos.x)/2,y:(sourcePos.y+targetPos.y)/2,textAnchor:\"middle\",className:\"fill-gray-600 text-xs pointer-events-none\",dy:\"-2\",children:[(edge.weight*100).toFixed(0),\"%\"]})]},index);})}),/*#__PURE__*/_jsx(\"g\",{className:\"nodes\",children:network.nodes.map(node=>{const pos=nodePositions.get(node.id);if(!pos)return null;const style=getNodeStyle(node);const radius=getNodeRadius(node);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:pos.x,cy:pos.y,r:radius,fill:style.fill,stroke:style.stroke,strokeWidth:style.strokeWidth,opacity:style.opacity,className:\"cursor-pointer transition-all duration-200 hover:scale-110 \".concat(isSelected?'animate-pulse':'',\" \").concat(isHovered?'drop-shadow-lg':''),onClick:e=>handleNodeClick(node,e),onMouseEnter:()=>setHoveredNode(node),onMouseLeave:()=>setHoveredNode(null)}),showLabels&&/*#__PURE__*/_jsx(\"text\",{x:pos.x,y:pos.y+radius+12,textAnchor:\"middle\",className:\"fill-gray-700 text-xs font-medium pointer-events-none\",style:{fontSize:'10px'},children:node.pathogen.shortName||node.id.split(' ').slice(0,2).join(' ')}),node.connections>3&&/*#__PURE__*/_jsx(\"circle\",{cx:pos.x+radius-4,cy:pos.y-radius+4,r:\"6\",fill:\"#3b82f6\",className:\"pointer-events-none\"})]},node.id);})})]}),hoveredNode&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\",style:{left:Math.min(dimensions.width-200,(((_nodePositions$get=nodePositions.get(hoveredNode.id))===null||_nodePositions$get===void 0?void 0:_nodePositions$get.x)||0)+20),top:Math.max(20,(((_nodePositions$get2=nodePositions.get(hoveredNode.id))===null||_nodePositions$get2===void 0?void 0:_nodePositions$get2.y)||0)-60)},children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:hoveredNode.id}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Gram \",hoveredNode.clusterData.gramStatus,\" \\u2022 \",hoveredNode.connections,\" connections\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Centrality: \",(hoveredNode.centralityScore*100).toFixed(1),\"%\"]})]}),hoveredEdge&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\",style:{left:20,top:20},children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Connection Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[hoveredEdge.source,\" \\u2194 \",hoveredEdge.target]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Similarity: \",(hoveredEdge.weight*100).toFixed(1),\"% (\",hoveredEdge.type,\")\"]}),hoveredEdge.similarity.details.sharedConditionNames.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600 mt-1\",children:[\"Shared: \",hoveredEdge.similarity.details.sharedConditionNames.slice(0,2).join(', '),hoveredEdge.similarity.details.sharedConditionNames.length>2&&'...']})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-purple-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Positive\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-red-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Negative\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-green-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Unknown/Other\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-1 bg-green-600\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Strong (>60%)\"})]})]})})]});};export default PathogenNetworkVisualization;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Microscope","Target","Info","Zap","Network","Filter","RotateCcw","defaultAnimationController","jsx","_jsx","jsxs","_jsxs","PathogenNetworkVisualization","_ref","_network$edges","_nodePositions$get","_nodePositions$get2","network","selectedPathogen","onSelectPathogen","onShowPathDetails","className","svgRef","dimensions","setDimensions","width","height","hoveredNode","setHoveredNode","hoveredEdge","setHoveredEdge","nodePositions","setNodePositions","Map","isAnimating","setIsAnimating","connectionFilter","setConnectionFilter","showLabels","setShowLabels","highlightedPath","setHighlightedPath","initializePositions","nodes","centerX","centerY","positions","clusters","positive","x","y","negative","unknown","forEach","node","gramStatus","clusterData","push","Object","entries","_ref2","status","cluster","radius","Math","min","max","length","index","angle","PI","jitter","random","set","id","cos","sin","vx","vy","runForceSimulation","size","iterations","i","pos1","id1","pos2","id2","dx","dy","distance","sqrt","repulsion","fx","fy","edges","edge","get","source","target","attraction","weight","pos","handleResize","current","rect","parentElement","getBoundingClientRect","window","addEventListener","removeEventListener","filteredEdges","filter","type","getNodeStyle","isSelected","name","isHovered","isHighlighted","includes","isConnectedToSelected","some","e","fill","stroke","strokeWidth","opacity","getEdgeStyle","isInPath","handleNodeClick","event","createRipple","pathogen","setTimeout","connectedEdges","prev","handleEdgeHover","similarity","getNodeRadius","baseRadius","centralityBonus","centralityScore","concat","children","onClick","disabled","title","value","onChange","checked","style","ref","patternUnits","d","map","sourcePos","targetPos","x1","y1","x2","y2","onMouseEnter","onMouseLeave","textAnchor","toFixed","cx","cy","r","fontSize","shortName","split","slice","join","connections","left","top","details","sharedConditionNames"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/PathogenNetworkVisualization.js"],"sourcesContent":["/**\n * PathogenNetworkVisualization Component\n * Interactive network visualization showing pathogen relationships and connections\n * Provides tactile exploration of pathogen data through clickable nodes and edges\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Microscope, Target, Info, Zap, Network, Filter, RotateCcw } from 'lucide-react';\nimport { defaultAnimationController } from '../utils/animations';\n\nconst PathogenNetworkVisualization = ({\n  network,\n  selectedPathogen,\n  onSelectPathogen,\n  onShowPathDetails,\n  className = ''\n}) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredEdge, setHoveredEdge] = useState(null);\n  const [nodePositions, setNodePositions] = useState(new Map());\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [connectionFilter, setConnectionFilter] = useState('all'); // 'all', 'strong', 'medium'\n  const [showLabels, setShowLabels] = useState(true);\n  const [highlightedPath, setHighlightedPath] = useState([]);\n\n  // Initialize node positions using force-directed layout simulation\n  const initializePositions = useCallback(() => {\n    if (!network || !network.nodes) return;\n\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const positions = new Map();\n\n    // Place nodes in clusters based on gram status\n    const clusters = {\n      positive: { x: centerX - 200, y: centerY - 100, nodes: [] },\n      negative: { x: centerX + 200, y: centerY - 100, nodes: [] },\n      unknown: { x: centerX, y: centerY + 150, nodes: [] }\n    };\n\n    // Group nodes by gram status\n    network.nodes.forEach(node => {\n      const gramStatus = node.clusterData.gramStatus;\n      if (clusters[gramStatus]) {\n        clusters[gramStatus].nodes.push(node);\n      } else {\n        clusters.unknown.nodes.push(node);\n      }\n    });\n\n    // Position nodes within their clusters\n    Object.entries(clusters).forEach(([status, cluster]) => {\n      const { nodes } = cluster;\n      const radius = Math.min(150, Math.max(50, nodes.length * 8));\n      \n      nodes.forEach((node, index) => {\n        const angle = (index / nodes.length) * 2 * Math.PI;\n        const jitter = (Math.random() - 0.5) * 40; // Add some randomness\n        \n        positions.set(node.id, {\n          x: cluster.x + Math.cos(angle) * radius + jitter,\n          y: cluster.y + Math.sin(angle) * radius + jitter,\n          vx: 0,\n          vy: 0\n        });\n      });\n    });\n\n    setNodePositions(positions);\n  }, [network, dimensions]);\n\n  // Simple force simulation for better positioning\n  const runForceSimulation = useCallback(() => {\n    if (!network || nodePositions.size === 0) return;\n\n    setIsAnimating(true);\n    const positions = new Map(nodePositions);\n    const iterations = 50;\n    \n    for (let i = 0; i < iterations; i++) {\n      // Apply repulsion between nodes\n      positions.forEach((pos1, id1) => {\n        positions.forEach((pos2, id2) => {\n          if (id1 !== id2) {\n            const dx = pos1.x - pos2.x;\n            const dy = pos1.y - pos2.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            \n            if (distance < 80 && distance > 0) {\n              const repulsion = 2000 / (distance * distance);\n              const fx = (dx / distance) * repulsion;\n              const fy = (dy / distance) * repulsion;\n              \n              pos1.vx += fx * 0.1;\n              pos1.vy += fy * 0.1;\n            }\n          }\n        });\n      });\n\n      // Apply attraction along edges\n      network.edges.forEach(edge => {\n        const pos1 = positions.get(edge.source);\n        const pos2 = positions.get(edge.target);\n        \n        if (pos1 && pos2) {\n          const dx = pos2.x - pos1.x;\n          const dy = pos2.y - pos1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance > 100) {\n            const attraction = edge.weight * 50;\n            const fx = (dx / distance) * attraction;\n            const fy = (dy / distance) * attraction;\n            \n            pos1.vx += fx * 0.01;\n            pos1.vy += fy * 0.01;\n            pos2.vx -= fx * 0.01;\n            pos2.vy -= fy * 0.01;\n          }\n        }\n      });\n\n      // Update positions and apply damping\n      positions.forEach(pos => {\n        pos.x += pos.vx;\n        pos.y += pos.vy;\n        pos.vx *= 0.9;\n        pos.vy *= 0.9;\n\n        // Keep nodes within bounds\n        pos.x = Math.max(30, Math.min(dimensions.width - 30, pos.x));\n        pos.y = Math.max(30, Math.min(dimensions.height - 30, pos.y));\n      });\n    }\n\n    setNodePositions(positions);\n    setIsAnimating(false);\n  }, [network, nodePositions, dimensions]);\n\n  // Initialize positions when network changes\n  useEffect(() => {\n    initializePositions();\n  }, [initializePositions]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current) {\n        const rect = svgRef.current.parentElement.getBoundingClientRect();\n        setDimensions({\n          width: Math.max(600, rect.width - 40),\n          height: Math.max(400, rect.height - 40)\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Filter edges based on connection strength\n  const filteredEdges = network?.edges?.filter(edge => {\n    if (connectionFilter === 'all') return true;\n    return edge.type === connectionFilter;\n  }) || [];\n\n  // Get node styling based on state\n  const getNodeStyle = (node) => {\n    const isSelected = selectedPathogen?.name === node.id;\n    const isHovered = hoveredNode?.id === node.id;\n    const isHighlighted = highlightedPath.includes(node.id);\n    const isConnectedToSelected = selectedPathogen && \n      filteredEdges.some(e => \n        (e.source === selectedPathogen.name && e.target === node.id) ||\n        (e.target === selectedPathogen.name && e.source === node.id)\n      );\n\n    let fill = '#e5e7eb'; // default gray\n    let stroke = '#9ca3af';\n    let strokeWidth = 2;\n\n    // Color by gram status\n    if (node.clusterData.gramStatus === 'positive') {\n      fill = isSelected ? '#7c3aed' : '#a855f7';\n    } else if (node.clusterData.gramStatus === 'negative') {\n      fill = isSelected ? '#dc2626' : '#ef4444';\n    } else {\n      fill = isSelected ? '#059669' : '#10b981';\n    }\n\n    if (isHovered) {\n      strokeWidth = 4;\n      stroke = '#1f2937';\n    } else if (isConnectedToSelected) {\n      strokeWidth = 3;\n      stroke = '#3b82f6';\n    } else if (isHighlighted) {\n      strokeWidth = 3;\n      stroke = '#f59e0b';\n    }\n\n    return {\n      fill: isSelected ? fill : fill + 'dd',\n      stroke,\n      strokeWidth,\n      opacity: selectedPathogen && !isSelected && !isConnectedToSelected ? 0.4 : 1\n    };\n  };\n\n  // Get edge styling\n  const getEdgeStyle = (edge) => {\n    const isSelected = selectedPathogen && \n      (edge.source === selectedPathogen.name || edge.target === selectedPathogen.name);\n    const isHovered = hoveredEdge === edge;\n    const isInPath = highlightedPath.includes(edge.source) && highlightedPath.includes(edge.target);\n\n    let stroke = '#9ca3af';\n    let strokeWidth = edge.weight * 4;\n    let opacity = 0.6;\n\n    if (edge.type === 'strong') {\n      stroke = '#059669';\n    } else if (edge.type === 'medium') {\n      stroke = '#3b82f6';\n    } else {\n      stroke = '#6b7280';\n    }\n\n    if (isHovered) {\n      strokeWidth = Math.max(strokeWidth * 1.5, 3);\n      opacity = 1;\n    } else if (isSelected) {\n      opacity = 0.8;\n    } else if (isInPath) {\n      stroke = '#f59e0b';\n      strokeWidth = Math.max(strokeWidth, 3);\n      opacity = 0.9;\n    } else if (selectedPathogen) {\n      opacity = isSelected ? 0.8 : 0.2;\n    }\n\n    return { stroke, strokeWidth, opacity };\n  };\n\n  // Handle node click with animation\n  const handleNodeClick = (node, event) => {\n    // Create ripple effect\n    if (event && event.target) {\n      defaultAnimationController.createRipple(event.target.parentElement, event);\n    }\n    \n    onSelectPathogen(node.pathogen);\n    setHighlightedPath([]);\n    \n    // Animate connected nodes\n    setTimeout(() => {\n      const connectedEdges = filteredEdges.filter(edge => \n        edge.source === node.id || edge.target === node.id\n      );\n      \n      connectedEdges.forEach((edge, index) => {\n        setTimeout(() => {\n          setHighlightedPath(prev => [...prev, edge.source, edge.target]);\n        }, index * 100);\n      });\n    }, 200);\n  };\n\n  // Handle edge hover to show connection details\n  const handleEdgeHover = (edge) => {\n    setHoveredEdge(edge);\n    if (onShowPathDetails) {\n      onShowPathDetails(edge.similarity);\n    }\n  };\n\n  // Get node radius based on centrality\n  const getNodeRadius = (node) => {\n    const baseRadius = 8;\n    const centralityBonus = node.centralityScore * 10;\n    return Math.max(baseRadius, Math.min(20, baseRadius + centralityBonus));\n  };\n\n  if (!network || !network.nodes) {\n    return (\n      <div className={`flex items-center justify-center h-64 ${className}`}>\n        <div className=\"text-gray-500\">Loading network visualization...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-xl shadow-sm border ${className}`}>\n      {/* Header with controls */}\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Network className=\"text-blue-600\" size={20} />\n            <h3 className=\"text-lg font-semibold\">Pathogen Network</h3>\n            <span className=\"text-sm text-gray-500\">\n              ({network.nodes.length} pathogens, {filteredEdges.length} connections)\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={runForceSimulation}\n              disabled={isAnimating}\n              className=\"p-2 rounded-lg border hover:bg-gray-50 transition-colors disabled:opacity-50\"\n              title=\"Reorganize layout\"\n            >\n              <RotateCcw size={16} className={isAnimating ? 'animate-spin' : ''} />\n            </button>\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex items-center gap-4 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <Filter size={16} className=\"text-gray-600\" />\n            <select\n              value={connectionFilter}\n              onChange={(e) => setConnectionFilter(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm\"\n            >\n              <option value=\"all\">All Connections</option>\n              <option value=\"strong\">Strong Only</option>\n              <option value=\"medium\">Medium Only</option>\n              <option value=\"weak\">Weak Only</option>\n            </select>\n          </div>\n\n          <label className=\"flex items-center gap-1\">\n            <input\n              type=\"checkbox\"\n              checked={showLabels}\n              onChange={(e) => setShowLabels(e.target.checked)}\n              className=\"rounded\"\n            />\n            Show Labels\n          </label>\n        </div>\n      </div>\n\n      {/* Visualization */}\n      <div className=\"p-4\" style={{ height: dimensions.height + 40 }}>\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          className=\"border rounded-lg bg-gray-50\"\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"1\"/>\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n          {/* Edges */}\n          <g className=\"edges\">\n            {filteredEdges.map((edge, index) => {\n              const sourcePos = nodePositions.get(edge.source);\n              const targetPos = nodePositions.get(edge.target);\n              \n              if (!sourcePos || !targetPos) return null;\n\n              const style = getEdgeStyle(edge);\n              \n              return (\n                <g key={index}>\n                  <line\n                    x1={sourcePos.x}\n                    y1={sourcePos.y}\n                    x2={targetPos.x}\n                    y2={targetPos.y}\n                    stroke={style.stroke}\n                    strokeWidth={style.strokeWidth}\n                    opacity={style.opacity}\n                    className=\"cursor-pointer transition-all duration-200\"\n                    onMouseEnter={() => handleEdgeHover(edge)}\n                    onMouseLeave={() => setHoveredEdge(null)}\n                  />\n                  \n                  {/* Edge label for strong connections */}\n                  {edge.type === 'strong' && showLabels && (\n                    <text\n                      x={(sourcePos.x + targetPos.x) / 2}\n                      y={(sourcePos.y + targetPos.y) / 2}\n                      textAnchor=\"middle\"\n                      className=\"fill-gray-600 text-xs pointer-events-none\"\n                      dy=\"-2\"\n                    >\n                      {(edge.weight * 100).toFixed(0)}%\n                    </text>\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          {/* Nodes */}\n          <g className=\"nodes\">\n            {network.nodes.map((node) => {\n              const pos = nodePositions.get(node.id);\n              if (!pos) return null;\n\n              const style = getNodeStyle(node);\n              const radius = getNodeRadius(node);\n              \n              return (\n                <g key={node.id}>\n                  <circle\n                    cx={pos.x}\n                    cy={pos.y}\n                    r={radius}\n                    fill={style.fill}\n                    stroke={style.stroke}\n                    strokeWidth={style.strokeWidth}\n                    opacity={style.opacity}\n                    className={`cursor-pointer transition-all duration-200 hover:scale-110 ${\n                      isSelected ? 'animate-pulse' : ''\n                    } ${isHovered ? 'drop-shadow-lg' : ''}`}\n                    onClick={(e) => handleNodeClick(node, e)}\n                    onMouseEnter={() => setHoveredNode(node)}\n                    onMouseLeave={() => setHoveredNode(null)}\n                  />\n                  \n                  {/* Node labels */}\n                  {showLabels && (\n                    <text\n                      x={pos.x}\n                      y={pos.y + radius + 12}\n                      textAnchor=\"middle\"\n                      className=\"fill-gray-700 text-xs font-medium pointer-events-none\"\n                      style={{ fontSize: '10px' }}\n                    >\n                      {node.pathogen.shortName || node.id.split(' ').slice(0, 2).join(' ')}\n                    </text>\n                  )}\n\n                  {/* Connection count indicator */}\n                  {node.connections > 3 && (\n                    <circle\n                      cx={pos.x + radius - 4}\n                      cy={pos.y - radius + 4}\n                      r=\"6\"\n                      fill=\"#3b82f6\"\n                      className=\"pointer-events-none\"\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n\n        {/* Hover tooltip */}\n        {hoveredNode && (\n          <div className=\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\"\n               style={{\n                 left: Math.min(dimensions.width - 200, (nodePositions.get(hoveredNode.id)?.x || 0) + 20),\n                 top: Math.max(20, (nodePositions.get(hoveredNode.id)?.y || 0) - 60)\n               }}>\n            <div className=\"font-medium text-gray-900\">{hoveredNode.id}</div>\n            <div className=\"text-sm text-gray-600\">\n              Gram {hoveredNode.clusterData.gramStatus} • {hoveredNode.connections} connections\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Centrality: {(hoveredNode.centralityScore * 100).toFixed(1)}%\n            </div>\n          </div>\n        )}\n\n        {/* Edge tooltip */}\n        {hoveredEdge && (\n          <div className=\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\"\n               style={{ left: 20, top: 20 }}>\n            <div className=\"font-medium text-gray-900\">Connection Details</div>\n            <div className=\"text-sm text-gray-600\">\n              {hoveredEdge.source} ↔ {hoveredEdge.target}\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Similarity: {(hoveredEdge.weight * 100).toFixed(1)}% ({hoveredEdge.type})\n            </div>\n            {hoveredEdge.similarity.details.sharedConditionNames.length > 0 && (\n              <div className=\"text-xs text-blue-600 mt-1\">\n                Shared: {hoveredEdge.similarity.details.sharedConditionNames.slice(0, 2).join(', ')}\n                {hoveredEdge.similarity.details.sharedConditionNames.length > 2 && '...'}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      <div className=\"p-4 border-t bg-gray-50\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n            <span>Gram Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n            <span>Gram Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n            <span>Unknown/Other</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-1 bg-green-600\"></div>\n            <span>Strong (>60%)</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PathogenNetworkVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}