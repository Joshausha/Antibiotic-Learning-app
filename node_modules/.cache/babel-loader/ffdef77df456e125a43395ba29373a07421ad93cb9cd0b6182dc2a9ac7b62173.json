{"ast":null,"code":"import React,{useState}from'react';// Test data imports\nimport medicalConditions from'./data/medicalConditions';import quizQuestions from'./data/quizQuestions';// Test buildIndexes function\nimport{buildIndexes}from'./utils/dataIndexer';// Test basic hooks\nimport useResponsive from'./hooks/useResponsive';import useSearch from'./hooks/useSearch';// Test problematic hooks\nimport usePathogenData from'./hooks/usePathogenData';import useAntibioticData from'./hooks/useAntibioticData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){console.log('App component rendering...');console.log('Medical conditions loaded:',medicalConditions===null||medicalConditions===void 0?void 0:medicalConditions.length);console.log('Quiz questions loaded:',quizQuestions===null||quizQuestions===void 0?void 0:quizQuestions.length);// Test React state\nconst[testState]=useState('React state working');// Test buildIndexes\nlet indexesResult='not tested';try{var _indexes$pathogens,_indexes$antibiotics;const indexes=buildIndexes(medicalConditions);indexesResult=\"Success - \".concat(((_indexes$pathogens=indexes.pathogens)===null||_indexes$pathogens===void 0?void 0:_indexes$pathogens.length)||0,\" pathogens, \").concat(((_indexes$antibiotics=indexes.antibiotics)===null||_indexes$antibiotics===void 0?void 0:_indexes$antibiotics.length)||0,\" antibiotics\");console.log('Indexes built successfully:',indexes);}catch(error){indexesResult=\"Error: \".concat(error.message);console.error('buildIndexes failed:',error);}// Test basic hooks\nlet hooksResult='not tested';try{const isMobile=useResponsive();const searchFields=['name','category'];const{searchTerm,setSearchTerm,filteredItems}=useSearch(medicalConditions,searchFields);hooksResult=\"Success - Mobile: \".concat(isMobile,\", Search items: \").concat((filteredItems===null||filteredItems===void 0?void 0:filteredItems.length)||0);console.log('Basic hooks working:',{isMobile,searchItemsCount:filteredItems===null||filteredItems===void 0?void 0:filteredItems.length});}catch(error){hooksResult=\"Error: \".concat(error.message);console.error('Basic hooks failed:',error);}// Test problematic hooks\nlet pathogenHooksResult='not tested';try{var _pathogenData$pathoge,_antibioticData$antib,_pathogenData$pathoge2,_antibioticData$antib2;const pathogenData=usePathogenData(medicalConditions);const antibioticData=useAntibioticData(medicalConditions);pathogenHooksResult=\"Success - Pathogens: \".concat(((_pathogenData$pathoge=pathogenData.pathogens)===null||_pathogenData$pathoge===void 0?void 0:_pathogenData$pathoge.length)||0,\", Antibiotics: \").concat(((_antibioticData$antib=antibioticData.antibiotics)===null||_antibioticData$antib===void 0?void 0:_antibioticData$antib.length)||0);console.log('Pathogen hooks working:',{pathogenCount:(_pathogenData$pathoge2=pathogenData.pathogens)===null||_pathogenData$pathoge2===void 0?void 0:_pathogenData$pathoge2.length,antibioticCount:(_antibioticData$antib2=antibioticData.antibiotics)===null||_antibioticData$antib2===void 0?void 0:_antibioticData$antib2.length});}catch(error){pathogenHooksResult=\"Error: \".concat(error.message);console.error('Pathogen hooks failed:',error);}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-slate-50 font-sans\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-center py-16\",children:\"Hello World - App is Working!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"Medical Conditions: \",(medicalConditions===null||medicalConditions===void 0?void 0:medicalConditions.length)||0,\" loaded\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"Quiz Questions: \",(quizQuestions===null||quizQuestions===void 0?void 0:quizQuestions.length)||0,\" loaded\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"BuildIndexes: \",indexesResult]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"Basic Hooks: \",hooksResult]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"Pathogen Hooks: \",pathogenHooksResult]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center text-gray-600\",children:[\"Test State: \",testState]})]});}export default App;","map":{"version":3,"names":["React","useState","medicalConditions","quizQuestions","buildIndexes","useResponsive","useSearch","usePathogenData","useAntibioticData","jsx","_jsx","jsxs","_jsxs","App","console","log","length","testState","indexesResult","_indexes$pathogens","_indexes$antibiotics","indexes","concat","pathogens","antibiotics","error","message","hooksResult","isMobile","searchFields","searchTerm","setSearchTerm","filteredItems","searchItemsCount","pathogenHooksResult","_pathogenData$pathoge","_antibioticData$antib","_pathogenData$pathoge2","_antibioticData$antib2","pathogenData","antibioticData","pathogenCount","antibioticCount","className","children"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Test data imports\nimport medicalConditions from './data/medicalConditions';\nimport quizQuestions from './data/quizQuestions';\n\n// Test buildIndexes function\nimport { buildIndexes } from './utils/dataIndexer';\n\n// Test basic hooks\nimport useResponsive from './hooks/useResponsive';\nimport useSearch from './hooks/useSearch';\n\n// Test problematic hooks\nimport usePathogenData from './hooks/usePathogenData';\nimport useAntibioticData from './hooks/useAntibioticData';\n\nfunction App() {\n  console.log('App component rendering...');\n  console.log('Medical conditions loaded:', medicalConditions?.length);\n  console.log('Quiz questions loaded:', quizQuestions?.length);\n  \n  // Test React state\n  const [testState] = useState('React state working');\n  \n  // Test buildIndexes\n  let indexesResult = 'not tested';\n  try {\n    const indexes = buildIndexes(medicalConditions);\n    indexesResult = `Success - ${indexes.pathogens?.length || 0} pathogens, ${indexes.antibiotics?.length || 0} antibiotics`;\n    console.log('Indexes built successfully:', indexes);\n  } catch (error) {\n    indexesResult = `Error: ${error.message}`;\n    console.error('buildIndexes failed:', error);\n  }\n  \n  // Test basic hooks\n  let hooksResult = 'not tested';\n  try {\n    const isMobile = useResponsive();\n    const searchFields = ['name', 'category'];\n    const { searchTerm, setSearchTerm, filteredItems } = useSearch(medicalConditions, searchFields);\n    hooksResult = `Success - Mobile: ${isMobile}, Search items: ${filteredItems?.length || 0}`;\n    console.log('Basic hooks working:', { isMobile, searchItemsCount: filteredItems?.length });\n  } catch (error) {\n    hooksResult = `Error: ${error.message}`;\n    console.error('Basic hooks failed:', error);\n  }\n  \n  // Test problematic hooks\n  let pathogenHooksResult = 'not tested';\n  try {\n    const pathogenData = usePathogenData(medicalConditions);\n    const antibioticData = useAntibioticData(medicalConditions);\n    pathogenHooksResult = `Success - Pathogens: ${pathogenData.pathogens?.length || 0}, Antibiotics: ${antibioticData.antibiotics?.length || 0}`;\n    console.log('Pathogen hooks working:', { \n      pathogenCount: pathogenData.pathogens?.length, \n      antibioticCount: antibioticData.antibiotics?.length \n    });\n  } catch (error) {\n    pathogenHooksResult = `Error: ${error.message}`;\n    console.error('Pathogen hooks failed:', error);\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-slate-50 font-sans\">\n      <h1 className=\"text-4xl font-bold text-center py-16\">\n        Hello World - App is Working!\n      </h1>\n      <p className=\"text-center text-gray-600\">\n        Medical Conditions: {medicalConditions?.length || 0} loaded\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Quiz Questions: {quizQuestions?.length || 0} loaded\n      </p>\n      <p className=\"text-center text-gray-600\">\n        BuildIndexes: {indexesResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Basic Hooks: {hooksResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Pathogen Hooks: {pathogenHooksResult}\n      </p>\n      <p className=\"text-center text-gray-600\">\n        Test State: {testState}\n      </p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}