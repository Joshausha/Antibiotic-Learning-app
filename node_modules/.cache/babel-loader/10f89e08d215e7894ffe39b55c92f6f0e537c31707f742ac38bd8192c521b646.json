{"ast":null,"code":"/**\n * PathogenNetworkVisualization Component\n * Simplified version for Visualizations tab\n * Interactive network visualization showing pathogen relationships\n */import React,{useState,useRef,useEffect}from'react';import{Network,Filter,RotateCcw}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PathogenNetworkVisualization=_ref=>{let{network,selectedPathogen,onSelectPathogen,onShowPathDetails,className=''}=_ref;const svgRef=useRef(null);const[dimensions,setDimensions]=useState({width:800,height:600});const[hoveredNode,setHoveredNode]=useState(null);const[connectionFilter,setConnectionFilter]=useState('all');const[showLabels,setShowLabels]=useState(true);// Handle window resize\nuseEffect(()=>{const handleResize=()=>{if(svgRef.current){const rect=svgRef.current.getBoundingClientRect();setDimensions({width:Math.max(600,rect.width),height:Math.max(400,600)});}};window.addEventListener('resize',handleResize);handleResize();return()=>window.removeEventListener('resize',handleResize);},[]);// Generate mock network data if none provided\nconst networkData=network||{nodes:[{id:'S. aureus',gramStatus:'Positive',connections:5,centralityScore:0.8},{id:'E. coli',gramStatus:'Negative',connections:6,centralityScore:0.9},{id:'S. pneumoniae',gramStatus:'Positive',connections:4,centralityScore:0.7},{id:'P. aeruginosa',gramStatus:'Negative',connections:3,centralityScore:0.6},{id:'C. difficile',gramStatus:'Positive',connections:2,centralityScore:0.4}],edges:[{source:'S. aureus',target:'S. pneumoniae',weight:0.7,type:'strong'},{source:'E. coli',target:'P. aeruginosa',weight:0.6,type:'medium'},{source:'S. aureus',target:'E. coli',weight:0.3,type:'weak'}]};// Position nodes in a circle\nconst getNodePosition=(index,total)=>{const angle=index/total*2*Math.PI;const radius=Math.min(dimensions.width,dimensions.height)*0.3;const centerX=dimensions.width/2;const centerY=dimensions.height/2;return{x:centerX+radius*Math.cos(angle),y:centerY+radius*Math.sin(angle)};};// Get node style based on gram status\nconst getNodeStyle=node=>{const isSelected=selectedPathogen&&selectedPathogen.id===node.id;const isHovered=hoveredNode&&hoveredNode.id===node.id;const baseColors={'Positive':'#a855f7',// purple\n'Negative':'#ef4444',// red\n'Unknown':'#10b981'// green\n};return{fill:baseColors[node.gramStatus]||baseColors.Unknown,stroke:isSelected?'#1f2937':'#ffffff',strokeWidth:isSelected?3:2,opacity:isHovered?0.9:0.8};};// Get node radius based on connections\nconst getNodeRadius=node=>{return Math.max(8,Math.min(20,8+(node.connections||0)*2));};// Filter edges based on current filter\nconst getFilteredEdges=()=>{if(connectionFilter==='all')return networkData.edges;return networkData.edges.filter(edge=>edge.type===connectionFilter);};// Handle node click\nconst handleNodeClick=node=>{if(onSelectPathogen){onSelectPathogen(node);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Network,{className:\"text-blue-600\",size:20}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold\",children:\"Pathogen Network\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",networkData.nodes.length,\" pathogens, \",getFilteredEdges().length,\" connections)\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Filter,{size:16,className:\"text-gray-600\"}),/*#__PURE__*/_jsxs(\"select\",{value:connectionFilter,onChange:e=>setConnectionFilter(e.target.value),className:\"border rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Connections\"}),/*#__PURE__*/_jsx(\"option\",{value:\"strong\",children:\"Strong Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weak\",children:\"Weak Only\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showLabels,onChange:e=>setShowLabels(e.target.checked),className:\"rounded\"}),\"Show Labels\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,width:dimensions.width,height:dimensions.height,className:\"border rounded-lg bg-gray-50\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"20\",height:\"20\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 20 0 L 0 0 0 20\",fill:\"none\",stroke:\"#f3f4f6\",strokeWidth:\"1\"})})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),/*#__PURE__*/_jsx(\"g\",{className:\"edges\",children:getFilteredEdges().map((edge,index)=>{const sourceIndex=networkData.nodes.findIndex(n=>n.id===edge.source);const targetIndex=networkData.nodes.findIndex(n=>n.id===edge.target);if(sourceIndex===-1||targetIndex===-1)return null;const sourcePos=getNodePosition(sourceIndex,networkData.nodes.length);const targetPos=getNodePosition(targetIndex,networkData.nodes.length);const strokeColors={strong:'#059669',medium:'#f59e0b',weak:'#6b7280'};return/*#__PURE__*/_jsx(\"line\",{x1:sourcePos.x,y1:sourcePos.y,x2:targetPos.x,y2:targetPos.y,stroke:strokeColors[edge.type]||'#6b7280',strokeWidth:edge.type==='strong'?3:edge.type==='medium'?2:1,opacity:0.6,className:\"transition-all duration-200\"},index);})}),/*#__PURE__*/_jsx(\"g\",{className:\"nodes\",children:networkData.nodes.map((node,index)=>{const pos=getNodePosition(index,networkData.nodes.length);const style=getNodeStyle(node);const radius=getNodeRadius(node);const isSelected=selectedPathogen&&selectedPathogen.id===node.id;const isHovered=hoveredNode&&hoveredNode.id===node.id;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:pos.x,cy:pos.y,r:radius,fill:style.fill,stroke:style.stroke,strokeWidth:style.strokeWidth,opacity:style.opacity,className:\"cursor-pointer transition-all duration-200 hover:scale-110 \".concat(isSelected?'animate-pulse':''),onClick:()=>handleNodeClick(node),onMouseEnter:()=>setHoveredNode(node),onMouseLeave:()=>setHoveredNode(null)}),showLabels&&/*#__PURE__*/_jsx(\"text\",{x:pos.x,y:pos.y+radius+12,textAnchor:\"middle\",className:\"fill-gray-700 text-xs font-medium pointer-events-none\",style:{fontSize:'11px'},children:node.id}),node.connections>3&&/*#__PURE__*/_jsx(\"circle\",{cx:pos.x+radius-4,cy:pos.y-radius+4,r:\"6\",fill:\"#3b82f6\",className:\"pointer-events-none\"})]},node.id);})})]}),hoveredNode&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\",style:{left:20,top:20},children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:hoveredNode.id}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Gram \",hoveredNode.gramStatus,\" \\u2022 \",hoveredNode.connections,\" connections\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Centrality: \",((hoveredNode.centralityScore||0)*100).toFixed(1),\"%\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-purple-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Positive\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-red-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Gram Negative\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-green-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Unknown/Other\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-1 bg-green-600\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Strong (>60%)\"})]})]})})]});};export default PathogenNetworkVisualization;","map":{"version":3,"names":["React","useState","useRef","useEffect","Network","Filter","RotateCcw","jsx","_jsx","jsxs","_jsxs","PathogenNetworkVisualization","_ref","network","selectedPathogen","onSelectPathogen","onShowPathDetails","className","svgRef","dimensions","setDimensions","width","height","hoveredNode","setHoveredNode","connectionFilter","setConnectionFilter","showLabels","setShowLabels","handleResize","current","rect","getBoundingClientRect","Math","max","window","addEventListener","removeEventListener","networkData","nodes","id","gramStatus","connections","centralityScore","edges","source","target","weight","type","getNodePosition","index","total","angle","PI","radius","min","centerX","centerY","x","cos","y","sin","getNodeStyle","node","isSelected","isHovered","baseColors","fill","Unknown","stroke","strokeWidth","opacity","getNodeRadius","getFilteredEdges","filter","edge","handleNodeClick","concat","children","size","length","value","onChange","e","checked","ref","patternUnits","d","map","sourceIndex","findIndex","n","targetIndex","sourcePos","targetPos","strokeColors","strong","medium","weak","x1","y1","x2","y2","pos","style","cx","cy","r","onClick","onMouseEnter","onMouseLeave","textAnchor","fontSize","left","top","toFixed"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/PathogenNetworkVisualization.js"],"sourcesContent":["/**\n * PathogenNetworkVisualization Component\n * Simplified version for Visualizations tab\n * Interactive network visualization showing pathogen relationships\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Network, Filter, RotateCcw } from 'lucide-react';\n\nconst PathogenNetworkVisualization = ({\n  network,\n  selectedPathogen,\n  onSelectPathogen,\n  onShowPathDetails,\n  className = ''\n}) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [connectionFilter, setConnectionFilter] = useState('all');\n  const [showLabels, setShowLabels] = useState(true);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current) {\n        const rect = svgRef.current.getBoundingClientRect();\n        setDimensions({\n          width: Math.max(600, rect.width),\n          height: Math.max(400, 600)\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Generate mock network data if none provided\n  const networkData = network || {\n    nodes: [\n      { id: 'S. aureus', gramStatus: 'Positive', connections: 5, centralityScore: 0.8 },\n      { id: 'E. coli', gramStatus: 'Negative', connections: 6, centralityScore: 0.9 },\n      { id: 'S. pneumoniae', gramStatus: 'Positive', connections: 4, centralityScore: 0.7 },\n      { id: 'P. aeruginosa', gramStatus: 'Negative', connections: 3, centralityScore: 0.6 },\n      { id: 'C. difficile', gramStatus: 'Positive', connections: 2, centralityScore: 0.4 }\n    ],\n    edges: [\n      { source: 'S. aureus', target: 'S. pneumoniae', weight: 0.7, type: 'strong' },\n      { source: 'E. coli', target: 'P. aeruginosa', weight: 0.6, type: 'medium' },\n      { source: 'S. aureus', target: 'E. coli', weight: 0.3, type: 'weak' }\n    ]\n  };\n\n  // Position nodes in a circle\n  const getNodePosition = (index, total) => {\n    const angle = (index / total) * 2 * Math.PI;\n    const radius = Math.min(dimensions.width, dimensions.height) * 0.3;\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    return {\n      x: centerX + radius * Math.cos(angle),\n      y: centerY + radius * Math.sin(angle)\n    };\n  };\n\n  // Get node style based on gram status\n  const getNodeStyle = (node) => {\n    const isSelected = selectedPathogen && selectedPathogen.id === node.id;\n    const isHovered = hoveredNode && hoveredNode.id === node.id;\n    \n    const baseColors = {\n      'Positive': '#a855f7', // purple\n      'Negative': '#ef4444', // red\n      'Unknown': '#10b981'   // green\n    };\n    \n    return {\n      fill: baseColors[node.gramStatus] || baseColors.Unknown,\n      stroke: isSelected ? '#1f2937' : '#ffffff',\n      strokeWidth: isSelected ? 3 : 2,\n      opacity: isHovered ? 0.9 : 0.8\n    };\n  };\n\n  // Get node radius based on connections\n  const getNodeRadius = (node) => {\n    return Math.max(8, Math.min(20, 8 + (node.connections || 0) * 2));\n  };\n\n  // Filter edges based on current filter\n  const getFilteredEdges = () => {\n    if (connectionFilter === 'all') return networkData.edges;\n    return networkData.edges.filter(edge => edge.type === connectionFilter);\n  };\n\n  // Handle node click\n  const handleNodeClick = (node) => {\n    if (onSelectPathogen) {\n      onSelectPathogen(node);\n    }\n  };\n\n  return (\n    <div className={`bg-white rounded-xl shadow-sm border ${className}`}>\n      {/* Header with controls */}\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Network className=\"text-blue-600\" size={20} />\n            <h3 className=\"text-lg font-semibold\">Pathogen Network</h3>\n            <span className=\"text-sm text-gray-500\">\n              ({networkData.nodes.length} pathogens, {getFilteredEdges().length} connections)\n            </span>\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex items-center gap-4 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <Filter size={16} className=\"text-gray-600\" />\n            <select\n              value={connectionFilter}\n              onChange={(e) => setConnectionFilter(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Connections</option>\n              <option value=\"strong\">Strong Only</option>\n              <option value=\"medium\">Medium Only</option>\n              <option value=\"weak\">Weak Only</option>\n            </select>\n          </div>\n\n          <label className=\"flex items-center gap-1\">\n            <input\n              type=\"checkbox\"\n              checked={showLabels}\n              onChange={(e) => setShowLabels(e.target.checked)}\n              className=\"rounded\"\n            />\n            Show Labels\n          </label>\n        </div>\n      </div>\n\n      {/* Visualization */}\n      <div className=\"p-4\">\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          className=\"border rounded-lg bg-gray-50\"\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"1\"/>\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n          {/* Edges */}\n          <g className=\"edges\">\n            {getFilteredEdges().map((edge, index) => {\n              const sourceIndex = networkData.nodes.findIndex(n => n.id === edge.source);\n              const targetIndex = networkData.nodes.findIndex(n => n.id === edge.target);\n              \n              if (sourceIndex === -1 || targetIndex === -1) return null;\n              \n              const sourcePos = getNodePosition(sourceIndex, networkData.nodes.length);\n              const targetPos = getNodePosition(targetIndex, networkData.nodes.length);\n              \n              const strokeColors = {\n                strong: '#059669',\n                medium: '#f59e0b', \n                weak: '#6b7280'\n              };\n              \n              return (\n                <line\n                  key={index}\n                  x1={sourcePos.x}\n                  y1={sourcePos.y}\n                  x2={targetPos.x}\n                  y2={targetPos.y}\n                  stroke={strokeColors[edge.type] || '#6b7280'}\n                  strokeWidth={edge.type === 'strong' ? 3 : edge.type === 'medium' ? 2 : 1}\n                  opacity={0.6}\n                  className=\"transition-all duration-200\"\n                />\n              );\n            })}\n          </g>\n\n          {/* Nodes */}\n          <g className=\"nodes\">\n            {networkData.nodes.map((node, index) => {\n              const pos = getNodePosition(index, networkData.nodes.length);\n              const style = getNodeStyle(node);\n              const radius = getNodeRadius(node);\n              const isSelected = selectedPathogen && selectedPathogen.id === node.id;\n              const isHovered = hoveredNode && hoveredNode.id === node.id;\n              \n              return (\n                <g key={node.id}>\n                  <circle\n                    cx={pos.x}\n                    cy={pos.y}\n                    r={radius}\n                    fill={style.fill}\n                    stroke={style.stroke}\n                    strokeWidth={style.strokeWidth}\n                    opacity={style.opacity}\n                    className={`cursor-pointer transition-all duration-200 hover:scale-110 ${\n                      isSelected ? 'animate-pulse' : ''\n                    }`}\n                    onClick={() => handleNodeClick(node)}\n                    onMouseEnter={() => setHoveredNode(node)}\n                    onMouseLeave={() => setHoveredNode(null)}\n                  />\n                  \n                  {/* Node labels */}\n                  {showLabels && (\n                    <text\n                      x={pos.x}\n                      y={pos.y + radius + 12}\n                      textAnchor=\"middle\"\n                      className=\"fill-gray-700 text-xs font-medium pointer-events-none\"\n                      style={{ fontSize: '11px' }}\n                    >\n                      {node.id}\n                    </text>\n                  )}\n\n                  {/* Connection count indicator */}\n                  {node.connections > 3 && (\n                    <circle\n                      cx={pos.x + radius - 4}\n                      cy={pos.y - radius + 4}\n                      r=\"6\"\n                      fill=\"#3b82f6\"\n                      className=\"pointer-events-none\"\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n\n        {/* Hover tooltip */}\n        {hoveredNode && (\n          <div className=\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\"\n               style={{\n                 left: 20,\n                 top: 20\n               }}>\n            <div className=\"font-medium text-gray-900\">{hoveredNode.id}</div>\n            <div className=\"text-sm text-gray-600\">\n              Gram {hoveredNode.gramStatus} • {hoveredNode.connections} connections\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Centrality: {((hoveredNode.centralityScore || 0) * 100).toFixed(1)}%\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      <div className=\"p-4 border-t bg-gray-50\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n            <span>Gram Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n            <span>Gram Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n            <span>Unknown/Other</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-1 bg-green-600\"></div>\n            <span>Strong (>60%)</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PathogenNetworkVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}