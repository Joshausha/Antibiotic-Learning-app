{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\n\n/**\n * Custom hook for centralized error handling\n * Provides consistent error handling patterns across the application\n */\nconst useErrorHandler = () => {\n  _s();\n  /**\n   * Safely executes a function and returns either the result or a fallback value\n   * @param {Function} fn - Function to execute\n   * @param {*} fallback - Fallback value if function fails\n   * @param {string} context - Context information for logging\n   * @returns {*} Function result or fallback value\n   */\n  const safeExecute = useCallback((fn, fallback, context = 'unknown') => {\n    try {\n      const result = fn();\n      console.log(`✅ ${context} hook success`);\n      return result;\n    } catch (error) {\n      console.error(`❌ ${context} hook failed:`, error);\n      return fallback;\n    }\n  }, []);\n\n  /**\n   * Creates a safe version of a hook with error handling\n   * @param {Function} hook - Hook function to wrap\n   * @param {*} fallback - Fallback value if hook fails\n   * @param {string} hookName - Name of the hook for logging\n   * @returns {*} Hook result or fallback value\n   */\n  const withErrorHandling = useCallback((hook, fallback, hookName) => {\n    return safeExecute(hook, fallback, hookName);\n  }, [safeExecute]);\n\n  /**\n   * Default fallback objects for common hook patterns\n   */\n  const fallbacks = {\n    quizProgress: {\n      stats: {\n        totalQuizzes: 0,\n        averageScore: 0,\n        improvementTrend: 'insufficient',\n        strongestCategory: 'None',\n        weakestCategory: 'None',\n        streakLength: 0\n      },\n      recentQuizzes: [],\n      clearHistory: () => {},\n      submitQuiz: () => {},\n      getDetailedStats: () => ({})\n    },\n    bookmarks: {\n      bookmarkedConditions: [],\n      isBookmarked: () => false,\n      toggleBookmark: () => {}\n    },\n    pathogenData: {\n      pathogens: [],\n      selectedPathogen: null,\n      selectedPathogenConditions: [],\n      selectedPathogenAntibiotics: [],\n      pathogenStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      gramFilter: 'all',\n      typeFilter: 'all',\n      sortBy: 'name',\n      searchPathogens: () => {},\n      filterByGramStatus: () => {},\n      filterByType: () => {},\n      setSortOrder: () => {},\n      selectPathogen: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      findSimilarPathogens: () => [],\n      isLoading: false\n    },\n    antibioticData: {\n      antibiotics: [],\n      selectedAntibiotic: null,\n      selectedAntibioticConditions: [],\n      drugClassStats: [],\n      availableDrugClasses: [],\n      antibioticStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      drugClassFilter: 'all',\n      sortBy: 'name',\n      searchAntibiotics: () => {},\n      filterByDrugClass: () => {},\n      setSortOrder: () => {},\n      selectAntibiotic: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      getAntibioticByName: () => null,\n      findAlternativeAntibiotics: () => [],\n      findCombinationTherapies: () => [],\n      getResistanceInfo: () => null,\n      isLoading: false\n    },\n    searchData: (items = []) => ({\n      searchTerm: '',\n      setSearchTerm: () => {},\n      filteredItems: items\n    })\n  };\n  return {\n    safeExecute,\n    withErrorHandling,\n    fallbacks\n  };\n};\n_s(useErrorHandler, \"dX2f8fg4w/J8vkPOvpOkWiXOgKk=\");\nexport default useErrorHandler;","map":{"version":3,"names":["useCallback","useErrorHandler","_s","safeExecute","fn","fallback","context","result","console","log","error","withErrorHandling","hook","hookName","fallbacks","quizProgress","stats","totalQuizzes","averageScore","improvementTrend","strongestCategory","weakestCategory","streakLength","recentQuizzes","clearHistory","submitQuiz","getDetailedStats","bookmarks","bookmarkedConditions","isBookmarked","toggleBookmark","pathogenData","pathogens","selectedPathogen","selectedPathogenConditions","selectedPathogenAntibiotics","pathogenStats","filteredStats","searchQuery","gramFilter","typeFilter","sortBy","searchPathogens","filterByGramStatus","filterByType","setSortOrder","selectPathogen","clearSelection","clearFilters","findSimilarPathogens","isLoading","antibioticData","antibiotics","selectedAntibiotic","selectedAntibioticConditions","drugClassStats","availableDrugClasses","antibioticStats","drugClassFilter","searchAntibiotics","filterByDrugClass","selectAntibiotic","getAntibioticByName","findAlternativeAntibiotics","findCombinationTherapies","getResistanceInfo","searchData","items","searchTerm","setSearchTerm","filteredItems"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/hooks/useErrorHandler.js"],"sourcesContent":["import { useCallback } from 'react';\n\n/**\n * Custom hook for centralized error handling\n * Provides consistent error handling patterns across the application\n */\nconst useErrorHandler = () => {\n  /**\n   * Safely executes a function and returns either the result or a fallback value\n   * @param {Function} fn - Function to execute\n   * @param {*} fallback - Fallback value if function fails\n   * @param {string} context - Context information for logging\n   * @returns {*} Function result or fallback value\n   */\n  const safeExecute = useCallback((fn, fallback, context = 'unknown') => {\n    try {\n      const result = fn();\n      console.log(`✅ ${context} hook success`);\n      return result;\n    } catch (error) {\n      console.error(`❌ ${context} hook failed:`, error);\n      return fallback;\n    }\n  }, []);\n\n  /**\n   * Creates a safe version of a hook with error handling\n   * @param {Function} hook - Hook function to wrap\n   * @param {*} fallback - Fallback value if hook fails\n   * @param {string} hookName - Name of the hook for logging\n   * @returns {*} Hook result or fallback value\n   */\n  const withErrorHandling = useCallback((hook, fallback, hookName) => {\n    return safeExecute(hook, fallback, hookName);\n  }, [safeExecute]);\n\n  /**\n   * Default fallback objects for common hook patterns\n   */\n  const fallbacks = {\n    quizProgress: {\n      stats: {\n        totalQuizzes: 0,\n        averageScore: 0,\n        improvementTrend: 'insufficient',\n        strongestCategory: 'None',\n        weakestCategory: 'None',\n        streakLength: 0\n      },\n      recentQuizzes: [],\n      clearHistory: () => {},\n      submitQuiz: () => {},\n      getDetailedStats: () => ({})\n    },\n    \n    bookmarks: {\n      bookmarkedConditions: [],\n      isBookmarked: () => false,\n      toggleBookmark: () => {}\n    },\n    \n    pathogenData: {\n      pathogens: [],\n      selectedPathogen: null,\n      selectedPathogenConditions: [],\n      selectedPathogenAntibiotics: [],\n      pathogenStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      gramFilter: 'all',\n      typeFilter: 'all',\n      sortBy: 'name',\n      searchPathogens: () => {},\n      filterByGramStatus: () => {},\n      filterByType: () => {},\n      setSortOrder: () => {},\n      selectPathogen: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      findSimilarPathogens: () => [],\n      isLoading: false\n    },\n    \n    antibioticData: {\n      antibiotics: [],\n      selectedAntibiotic: null,\n      selectedAntibioticConditions: [],\n      drugClassStats: [],\n      availableDrugClasses: [],\n      antibioticStats: null,\n      filteredStats: null,\n      searchQuery: '',\n      drugClassFilter: 'all',\n      sortBy: 'name',\n      searchAntibiotics: () => {},\n      filterByDrugClass: () => {},\n      setSortOrder: () => {},\n      selectAntibiotic: () => {},\n      clearSelection: () => {},\n      clearFilters: () => {},\n      getAntibioticByName: () => null,\n      findAlternativeAntibiotics: () => [],\n      findCombinationTherapies: () => [],\n      getResistanceInfo: () => null,\n      isLoading: false\n    },\n    \n    searchData: (items = []) => ({\n      searchTerm: '',\n      setSearchTerm: () => {},\n      filteredItems: items\n    })\n  };\n\n  return {\n    safeExecute,\n    withErrorHandling,\n    fallbacks\n  };\n};\n\nexport default useErrorHandler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}