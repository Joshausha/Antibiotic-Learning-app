{"ast":null,"code":"/**\n * PathogenConnectionExplorer Component\n * Interactive pathogen connection exploration with pathway tracing\n * Allows users to trace connections between pathogens and explore learning paths\n */import React,{useState,useEffect,useMemo}from'react';import{Route,Navigation,ArrowRight,ArrowLeft,Target,Zap,MapPin,Clock,BookOpen,RotateCcw,Play,Pause,ChevronRight,Star,TrendingUp,Filter,Search}from'lucide-react';import{findPathogenPaths,getPathogenRecommendations}from'../utils/dataIndexer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PathogenConnectionExplorer=_ref=>{var _selectedPathogen$con;let{indexes,selectedPathogen,targetPathogen,onSelectPathogen,onShowPathDetails,recentlyViewed=[],userPreferences={},className=''}=_ref;const[explorationMode,setExplorationMode]=useState('guided');// 'guided', 'freeform', 'recommendations'\nconst[currentPath,setCurrentPath]=useState([]);const[explorationHistory,setExplorationHistory]=useState([]);const[availablePaths,setAvailablePaths]=useState([]);const[isExploring,setIsExploring]=useState(false);const[explorationStep,setExplorationStep]=useState(0);const[pathFilter,setPathFilter]=useState('shortest');// 'shortest', 'strongest', 'most_diverse'\nconst[recommendations,setRecommendations]=useState([]);const[breadcrumbs,setBreadcrumbs]=useState([]);// Calculate available paths when target changes\nuseEffect(()=>{if(selectedPathogen&&targetPathogen&&indexes){const paths=findPathogenPaths(indexes,selectedPathogen.name,targetPathogen.name,4);setAvailablePaths(paths);if(paths.length>0){// Select best path based on filter\nlet selectedPath;switch(pathFilter){case'strongest':selectedPath=paths.reduce((best,current)=>current.score>best.score?current:best);break;case'most_diverse':selectedPath=paths.reduce((best,current)=>current.length>best.length?current:best);break;case'shortest':default:selectedPath=paths.reduce((best,current)=>current.length<best.length?current:best);}setCurrentPath(selectedPath.path);}}},[selectedPathogen,targetPathogen,indexes,pathFilter]);// Update recommendations when pathogen changes\nuseEffect(()=>{if(selectedPathogen&&indexes){const recs=getPathogenRecommendations(indexes,selectedPathogen.name,recentlyViewed,userPreferences);setRecommendations(recs);}},[selectedPathogen,indexes,recentlyViewed,userPreferences]);// Calculate exploration statistics\nconst explorationStats=useMemo(()=>{var _explorationHistory$;if(!explorationHistory.length)return null;const uniquePathogens=new Set(explorationHistory.map(h=>h.pathogen.name));const totalSimilarity=explorationHistory.reduce((sum,h)=>sum+(h.similarity||0),0);const avgSimilarity=totalSimilarity/explorationHistory.length;return{pathogensExplored:uniquePathogens.size,stepsTotal:explorationHistory.length,averageSimilarity:avgSimilarity,explorationTime:Date.now()-(((_explorationHistory$=explorationHistory[0])===null||_explorationHistory$===void 0?void 0:_explorationHistory$.timestamp)||Date.now())};},[explorationHistory]);const startExploration=function(){let mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'guided';setExplorationMode(mode);setIsExploring(true);setExplorationStep(0);if(selectedPathogen){const newHistory=[{pathogen:selectedPathogen,timestamp:Date.now(),step:0,reason:'Starting pathogen'}];setExplorationHistory(newHistory);setBreadcrumbs([selectedPathogen.name]);}};const addToExploration=function(pathogen){let reason=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';let similarity=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const newStep={pathogen,timestamp:Date.now(),step:explorationHistory.length,reason,similarity};setExplorationHistory(prev=>[...prev,newStep]);setBreadcrumbs(prev=>[...prev,pathogen.name]);setExplorationStep(prev=>prev+1);onSelectPathogen(pathogen);};const resetExploration=()=>{setIsExploring(false);setExplorationHistory([]);setCurrentPath([]);setExplorationStep(0);setBreadcrumbs([]);};const navigateToStep=stepIndex=>{if(stepIndex<explorationHistory.length){const targetStep=explorationHistory[stepIndex];setExplorationStep(stepIndex);onSelectPathogen(targetStep.pathogen);setBreadcrumbs(explorationHistory.slice(0,stepIndex+1).map(h=>h.pathogen.name));}};const renderPathVisualization=()=>{if(!currentPath||currentPath.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 bg-gradient-to-r from-blue-50 to-purple-50\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-900 mb-3 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Route,{size:18,className:\"text-blue-600\"}),\"Exploration Path (\",currentPath.length,\" steps)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-2 overflow-x-auto pb-2\",children:currentPath.map((pathogenName,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const pathogen=indexes.pathogens.find(p=>p.name===pathogenName);if(pathogen)addToExploration(pathogen,\"Path step \".concat(index+1));},className:\"flex-shrink-0 px-3 py-2 rounded-lg border font-medium text-sm transition-colors \".concat(explorationHistory.some(h=>h.pathogen.name===pathogenName)?'bg-blue-100 border-blue-300 text-blue-800':'bg-white border-gray-300 text-gray-700 hover:border-blue-300 hover:bg-blue-50'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[explorationHistory.some(h=>h.pathogen.name===pathogenName)&&/*#__PURE__*/_jsx(Star,{size:12,className:\"text-blue-600\"}),pathogenName.split(' ').slice(0,2).join(' ')]})}),index<currentPath.length-1&&/*#__PURE__*/_jsx(ArrowRight,{size:16,className:\"text-gray-400 flex-shrink-0\"})]},pathogenName))}),availablePaths.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 text-xs text-gray-600\",children:[availablePaths.length-1,\" alternative paths available\"]})]});};const renderExplorationHistory=()=>{if(!isExploring||explorationHistory.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-900 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Navigation,{size:18,className:\"text-green-600\"}),\"Exploration History\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetExploration,className:\"p-1 text-gray-500 hover:text-gray-700\",title:\"Reset exploration\",children:/*#__PURE__*/_jsx(RotateCcw,{size:16})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-64 overflow-y-auto\",children:explorationHistory.map((step,index)=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>navigateToStep(index),className:\"p-3 rounded-lg border cursor-pointer transition-colors \".concat(index===explorationStep?'border-blue-500 bg-blue-50':'border-gray-200 hover:border-gray-300 hover:bg-gray-50'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium text-gray-900\",children:[step.step+1,\". \",step.pathogen.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:step.reason}),step.similarity&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600 mt-1\",children:[\"Similarity: \",(step.similarity*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:new Date(step.timestamp).toLocaleTimeString()})]})},index))}),explorationStats&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 pt-3 border-t bg-gray-50 rounded-lg p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:explorationStats.pathogensExplored}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600\",children:\"Pathogens Explored\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:explorationStats.stepsTotal}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600\",children:\"Total Steps\"})]})]})})]});};const renderRecommendations=()=>{if(recommendations.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-900 mb-3 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(TrendingUp,{size:18,className:\"text-purple-600\"}),\"Recommended Next Steps\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:recommendations.slice(0,5).map((rec,index)=>{const pathogen=indexes.pathogens.find(p=>p.name===rec.pathogen);if(!pathogen)return null;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>addToExploration(pathogen,rec.reasoning,rec.weight),className:\"w-full p-3 text-left border rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:pathogen.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:rec.reasoning})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium text-blue-600\",children:[(rec.weight*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(ArrowRight,{size:14,className:\"text-gray-400\"})]})]})},index);})})]});};if(!selectedPathogen){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-xl shadow-sm border p-6 \".concat(className),children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-500\",children:[/*#__PURE__*/_jsx(Navigation,{size:48,className:\"mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a pathogen to start exploring connections\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-sm border \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Navigation,{className:\"text-blue-600\",size:20}),\"Connection Explorer\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1\",children:\"Discover pathogen relationships and learning pathways\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center gap-2\",children:!isExploring?/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startExploration('guided'),className:\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",children:[/*#__PURE__*/_jsx(Play,{size:16}),\"Start Exploring\"]}):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setIsExploring(false),className:\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",children:[/*#__PURE__*/_jsx(Pause,{size:16}),\"Pause\"]})})]}),breadcrumbs.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1 text-sm text-gray-600 mb-4\",children:[/*#__PURE__*/_jsx(MapPin,{size:14}),breadcrumbs.map((crumb,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateToStep(index),className:\"hover:text-blue-600 transition-colors\",children:crumb.split(' ').slice(0,2).join(' ')}),index<breadcrumbs.length-1&&/*#__PURE__*/_jsx(ChevronRight,{size:12,className:\"text-gray-400\"})]},index))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"Mode:\"}),['guided','freeform','recommendations'].map(mode=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setExplorationMode(mode),className:\"px-3 py-1 rounded-full text-sm font-medium transition-colors \".concat(explorationMode===mode?'bg-blue-100 text-blue-800':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:mode.charAt(0).toUpperCase()+mode.slice(1)},mode))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Currently Exploring\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-blue-600\",children:selectedPathogen.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Step \",explorationStep+1,\" \\u2022 \",((_selectedPathogen$con=selectedPathogen.conditions)===null||_selectedPathogen$con===void 0?void 0:_selectedPathogen$con.length)||0,\" conditions\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl\",children:\"\\uD83D\\uDD2C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:\"Active\"})]})]})}),explorationMode==='guided'&&targetPathogen&&renderPathVisualization(),explorationMode==='recommendations'&&renderRecommendations(),renderExplorationHistory(),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(recommendations.length>0){const randomRec=recommendations[Math.floor(Math.random()*recommendations.length)];const pathogen=indexes.pathogens.find(p=>p.name===randomRec.pathogen);if(pathogen)addToExploration(pathogen,'Random discovery',randomRec.weight);}},className:\"px-3 py-2 border rounded-lg text-sm hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsx(Zap,{size:14,className:\"inline mr-1\"}),\"Random Discovery\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{// Find the most connected pathogen not yet explored\nconst unexplored=indexes.pathogens.filter(p=>!explorationHistory.some(h=>h.pathogen.name===p.name));const mostConnected=unexplored.reduce((best,current)=>current.connections>((best===null||best===void 0?void 0:best.connections)||0)?current:best,null);if(mostConnected){addToExploration(mostConnected,'High connectivity target');}},className:\"px-3 py-2 border rounded-lg text-sm hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsx(Target,{size:14,className:\"inline mr-1\"}),\"Find Hub\"]})]})]})]});};export default PathogenConnectionExplorer;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Route","Navigation","ArrowRight","ArrowLeft","Target","Zap","MapPin","Clock","BookOpen","RotateCcw","Play","Pause","ChevronRight","Star","TrendingUp","Filter","Search","findPathogenPaths","getPathogenRecommendations","jsx","_jsx","jsxs","_jsxs","PathogenConnectionExplorer","_ref","_selectedPathogen$con","indexes","selectedPathogen","targetPathogen","onSelectPathogen","onShowPathDetails","recentlyViewed","userPreferences","className","explorationMode","setExplorationMode","currentPath","setCurrentPath","explorationHistory","setExplorationHistory","availablePaths","setAvailablePaths","isExploring","setIsExploring","explorationStep","setExplorationStep","pathFilter","setPathFilter","recommendations","setRecommendations","breadcrumbs","setBreadcrumbs","paths","name","length","selectedPath","reduce","best","current","score","path","recs","explorationStats","_explorationHistory$","uniquePathogens","Set","map","h","pathogen","totalSimilarity","sum","similarity","avgSimilarity","pathogensExplored","size","stepsTotal","averageSimilarity","explorationTime","Date","now","timestamp","startExploration","mode","arguments","undefined","newHistory","step","reason","addToExploration","newStep","prev","resetExploration","navigateToStep","stepIndex","targetStep","slice","renderPathVisualization","children","pathogenName","index","Fragment","onClick","pathogens","find","p","concat","some","split","join","renderExplorationHistory","title","toFixed","toLocaleTimeString","renderRecommendations","rec","reasoning","weight","crumb","charAt","toUpperCase","conditions","randomRec","Math","floor","random","unexplored","filter","mostConnected","connections"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/PathogenConnectionExplorer.js"],"sourcesContent":["/**\n * PathogenConnectionExplorer Component\n * Interactive pathogen connection exploration with pathway tracing\n * Allows users to trace connections between pathogens and explore learning paths\n */\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { \n  Route, Navigation, ArrowRight, ArrowLeft, Target, Zap, \n  MapPin, Clock, BookOpen, RotateCcw, Play, Pause,\n  ChevronRight, Star, TrendingUp, Filter, Search\n} from 'lucide-react';\nimport { findPathogenPaths, getPathogenRecommendations } from '../utils/dataIndexer';\n\nconst PathogenConnectionExplorer = ({\n  indexes,\n  selectedPathogen,\n  targetPathogen,\n  onSelectPathogen,\n  onShowPathDetails,\n  recentlyViewed = [],\n  userPreferences = {},\n  className = ''\n}) => {\n  const [explorationMode, setExplorationMode] = useState('guided'); // 'guided', 'freeform', 'recommendations'\n  const [currentPath, setCurrentPath] = useState([]);\n  const [explorationHistory, setExplorationHistory] = useState([]);\n  const [availablePaths, setAvailablePaths] = useState([]);\n  const [isExploring, setIsExploring] = useState(false);\n  const [explorationStep, setExplorationStep] = useState(0);\n  const [pathFilter, setPathFilter] = useState('shortest'); // 'shortest', 'strongest', 'most_diverse'\n  const [recommendations, setRecommendations] = useState([]);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n\n  // Calculate available paths when target changes\n  useEffect(() => {\n    if (selectedPathogen && targetPathogen && indexes) {\n      const paths = findPathogenPaths(indexes, selectedPathogen.name, targetPathogen.name, 4);\n      setAvailablePaths(paths);\n      \n      if (paths.length > 0) {\n        // Select best path based on filter\n        let selectedPath;\n        switch (pathFilter) {\n          case 'strongest':\n            selectedPath = paths.reduce((best, current) => \n              current.score > best.score ? current : best\n            );\n            break;\n          case 'most_diverse':\n            selectedPath = paths.reduce((best, current) => \n              current.length > best.length ? current : best\n            );\n            break;\n          case 'shortest':\n          default:\n            selectedPath = paths.reduce((best, current) => \n              current.length < best.length ? current : best\n            );\n        }\n        setCurrentPath(selectedPath.path);\n      }\n    }\n  }, [selectedPathogen, targetPathogen, indexes, pathFilter]);\n\n  // Update recommendations when pathogen changes\n  useEffect(() => {\n    if (selectedPathogen && indexes) {\n      const recs = getPathogenRecommendations(\n        indexes, \n        selectedPathogen.name, \n        recentlyViewed, \n        userPreferences\n      );\n      setRecommendations(recs);\n    }\n  }, [selectedPathogen, indexes, recentlyViewed, userPreferences]);\n\n  // Calculate exploration statistics\n  const explorationStats = useMemo(() => {\n    if (!explorationHistory.length) return null;\n    \n    const uniquePathogens = new Set(explorationHistory.map(h => h.pathogen.name));\n    const totalSimilarity = explorationHistory.reduce((sum, h) => sum + (h.similarity || 0), 0);\n    const avgSimilarity = totalSimilarity / explorationHistory.length;\n    \n    return {\n      pathogensExplored: uniquePathogens.size,\n      stepsTotal: explorationHistory.length,\n      averageSimilarity: avgSimilarity,\n      explorationTime: Date.now() - (explorationHistory[0]?.timestamp || Date.now())\n    };\n  }, [explorationHistory]);\n\n  const startExploration = (mode = 'guided') => {\n    setExplorationMode(mode);\n    setIsExploring(true);\n    setExplorationStep(0);\n    \n    if (selectedPathogen) {\n      const newHistory = [{\n        pathogen: selectedPathogen,\n        timestamp: Date.now(),\n        step: 0,\n        reason: 'Starting pathogen'\n      }];\n      setExplorationHistory(newHistory);\n      setBreadcrumbs([selectedPathogen.name]);\n    }\n  };\n\n  const addToExploration = (pathogen, reason = '', similarity = null) => {\n    const newStep = {\n      pathogen,\n      timestamp: Date.now(),\n      step: explorationHistory.length,\n      reason,\n      similarity\n    };\n    \n    setExplorationHistory(prev => [...prev, newStep]);\n    setBreadcrumbs(prev => [...prev, pathogen.name]);\n    setExplorationStep(prev => prev + 1);\n    \n    onSelectPathogen(pathogen);\n  };\n\n  const resetExploration = () => {\n    setIsExploring(false);\n    setExplorationHistory([]);\n    setCurrentPath([]);\n    setExplorationStep(0);\n    setBreadcrumbs([]);\n  };\n\n  const navigateToStep = (stepIndex) => {\n    if (stepIndex < explorationHistory.length) {\n      const targetStep = explorationHistory[stepIndex];\n      setExplorationStep(stepIndex);\n      onSelectPathogen(targetStep.pathogen);\n      setBreadcrumbs(explorationHistory.slice(0, stepIndex + 1).map(h => h.pathogen.name));\n    }\n  };\n\n  const renderPathVisualization = () => {\n    if (!currentPath || currentPath.length === 0) return null;\n\n    return (\n      <div className=\"border rounded-lg p-4 bg-gradient-to-r from-blue-50 to-purple-50\">\n        <h4 className=\"font-medium text-gray-900 mb-3 flex items-center gap-2\">\n          <Route size={18} className=\"text-blue-600\" />\n          Exploration Path ({currentPath.length} steps)\n        </h4>\n        \n        <div className=\"flex items-center gap-2 overflow-x-auto pb-2\">\n          {currentPath.map((pathogenName, index) => (\n            <React.Fragment key={pathogenName}>\n              <button\n                onClick={() => {\n                  const pathogen = indexes.pathogens.find(p => p.name === pathogenName);\n                  if (pathogen) addToExploration(pathogen, `Path step ${index + 1}`);\n                }}\n                className={`flex-shrink-0 px-3 py-2 rounded-lg border font-medium text-sm transition-colors ${\n                  explorationHistory.some(h => h.pathogen.name === pathogenName)\n                    ? 'bg-blue-100 border-blue-300 text-blue-800'\n                    : 'bg-white border-gray-300 text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n                }`}\n              >\n                <div className=\"flex items-center gap-1\">\n                  {explorationHistory.some(h => h.pathogen.name === pathogenName) && (\n                    <Star size={12} className=\"text-blue-600\" />\n                  )}\n                  {pathogenName.split(' ').slice(0, 2).join(' ')}\n                </div>\n              </button>\n              \n              {index < currentPath.length - 1 && (\n                <ArrowRight size={16} className=\"text-gray-400 flex-shrink-0\" />\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n        \n        {availablePaths.length > 1 && (\n          <div className=\"mt-3 text-xs text-gray-600\">\n            {availablePaths.length - 1} alternative paths available\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderExplorationHistory = () => {\n    if (!isExploring || explorationHistory.length === 0) return null;\n\n    return (\n      <div className=\"border rounded-lg p-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n            <Navigation size={18} className=\"text-green-600\" />\n            Exploration History\n          </h4>\n          <button\n            onClick={resetExploration}\n            className=\"p-1 text-gray-500 hover:text-gray-700\"\n            title=\"Reset exploration\"\n          >\n            <RotateCcw size={16} />\n          </button>\n        </div>\n\n        <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n          {explorationHistory.map((step, index) => (\n            <div\n              key={index}\n              onClick={() => navigateToStep(index)}\n              className={`p-3 rounded-lg border cursor-pointer transition-colors ${\n                index === explorationStep\n                  ? 'border-blue-500 bg-blue-50'\n                  : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n              }`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-gray-900\">\n                    {step.step + 1}. {step.pathogen.name}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">{step.reason}</div>\n                  {step.similarity && (\n                    <div className=\"text-xs text-blue-600 mt-1\">\n                      Similarity: {(step.similarity * 100).toFixed(0)}%\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  {new Date(step.timestamp).toLocaleTimeString()}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {explorationStats && (\n          <div className=\"mt-4 pt-3 border-t bg-gray-50 rounded-lg p-3\">\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <div className=\"font-medium text-gray-900\">{explorationStats.pathogensExplored}</div>\n                <div className=\"text-gray-600\">Pathogens Explored</div>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">{explorationStats.stepsTotal}</div>\n                <div className=\"text-gray-600\">Total Steps</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderRecommendations = () => {\n    if (recommendations.length === 0) return null;\n\n    return (\n      <div className=\"border rounded-lg p-4\">\n        <h4 className=\"font-medium text-gray-900 mb-3 flex items-center gap-2\">\n          <TrendingUp size={18} className=\"text-purple-600\" />\n          Recommended Next Steps\n        </h4>\n\n        <div className=\"space-y-2\">\n          {recommendations.slice(0, 5).map((rec, index) => {\n            const pathogen = indexes.pathogens.find(p => p.name === rec.pathogen);\n            if (!pathogen) return null;\n\n            return (\n              <button\n                key={index}\n                onClick={() => addToExploration(pathogen, rec.reasoning, rec.weight)}\n                className=\"w-full p-3 text-left border rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-gray-900\">{pathogen.name}</div>\n                    <div className=\"text-sm text-gray-600\">{rec.reasoning}</div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"text-sm font-medium text-blue-600\">\n                      {(rec.weight * 100).toFixed(0)}%\n                    </div>\n                    <ArrowRight size={14} className=\"text-gray-400\" />\n                  </div>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  if (!selectedPathogen) {\n    return (\n      <div className={`bg-white rounded-xl shadow-sm border p-6 ${className}`}>\n        <div className=\"text-center text-gray-500\">\n          <Navigation size={48} className=\"mx-auto mb-4 text-gray-300\" />\n          <p>Select a pathogen to start exploring connections</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-xl shadow-sm border ${className}`}>\n      <div className=\"p-6 border-b\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n              <Navigation className=\"text-blue-600\" size={20} />\n              Connection Explorer\n            </h3>\n            <p className=\"text-gray-600 mt-1\">\n              Discover pathogen relationships and learning pathways\n            </p>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {!isExploring ? (\n              <button\n                onClick={() => startExploration('guided')}\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                <Play size={16} />\n                Start Exploring\n              </button>\n            ) : (\n              <button\n                onClick={() => setIsExploring(false)}\n                className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n              >\n                <Pause size={16} />\n                Pause\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Breadcrumbs */}\n        {breadcrumbs.length > 0 && (\n          <div className=\"flex items-center gap-1 text-sm text-gray-600 mb-4\">\n            <MapPin size={14} />\n            {breadcrumbs.map((crumb, index) => (\n              <React.Fragment key={index}>\n                <button\n                  onClick={() => navigateToStep(index)}\n                  className=\"hover:text-blue-600 transition-colors\"\n                >\n                  {crumb.split(' ').slice(0, 2).join(' ')}\n                </button>\n                {index < breadcrumbs.length - 1 && (\n                  <ChevronRight size={12} className=\"text-gray-400\" />\n                )}\n              </React.Fragment>\n            ))}\n          </div>\n        )}\n\n        {/* Mode selector */}\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-600\">Mode:</span>\n          {['guided', 'freeform', 'recommendations'].map(mode => (\n            <button\n              key={mode}\n              onClick={() => setExplorationMode(mode)}\n              className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${\n                explorationMode === mode\n                  ? 'bg-blue-100 text-blue-800'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              {mode.charAt(0).toUpperCase() + mode.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"p-6 space-y-6\">\n        {/* Current pathogen info */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">Currently Exploring</h4>\n              <div className=\"text-lg font-bold text-blue-600\">{selectedPathogen.name}</div>\n              <div className=\"text-sm text-gray-600\">\n                Step {explorationStep + 1} • {selectedPathogen.conditions?.length || 0} conditions\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl\">🔬</div>\n              <div className=\"text-xs text-gray-500\">Active</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Path visualization */}\n        {explorationMode === 'guided' && targetPathogen && renderPathVisualization()}\n\n        {/* Recommendations */}\n        {explorationMode === 'recommendations' && renderRecommendations()}\n\n        {/* Exploration history */}\n        {renderExplorationHistory()}\n\n        {/* Quick actions */}\n        <div className=\"flex flex-wrap gap-2\">\n          <button\n            onClick={() => {\n              if (recommendations.length > 0) {\n                const randomRec = recommendations[Math.floor(Math.random() * recommendations.length)];\n                const pathogen = indexes.pathogens.find(p => p.name === randomRec.pathogen);\n                if (pathogen) addToExploration(pathogen, 'Random discovery', randomRec.weight);\n              }\n            }}\n            className=\"px-3 py-2 border rounded-lg text-sm hover:bg-gray-50 transition-colors\"\n          >\n            <Zap size={14} className=\"inline mr-1\" />\n            Random Discovery\n          </button>\n          \n          <button\n            onClick={() => {\n              // Find the most connected pathogen not yet explored\n              const unexplored = indexes.pathogens.filter(p => \n                !explorationHistory.some(h => h.pathogen.name === p.name)\n              );\n              const mostConnected = unexplored.reduce((best, current) => \n                current.connections > (best?.connections || 0) ? current : best\n              , null);\n              \n              if (mostConnected) {\n                addToExploration(mostConnected, 'High connectivity target');\n              }\n            }}\n            className=\"px-3 py-2 border rounded-lg text-sm hover:bg-gray-50 transition-colors\"\n          >\n            <Target size={14} className=\"inline mr-1\" />\n            Find Hub\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PathogenConnectionExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}