{"ast":null,"code":"var _jsxFileName = \"/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/PathogenNetworkVisualization.js\",\n  _s = $RefreshSig$();\n/**\n * PathogenNetworkVisualization Component\n * Interactive network visualization showing pathogen relationships and connections\n * Provides tactile exploration of pathogen data through clickable nodes and edges\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Microscope, Target, Info, Zap, Network, Filter, RotateCcw } from 'lucide-react';\nimport { defaultAnimationController } from '../utils/animations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PathogenNetworkVisualization = ({\n  network,\n  selectedPathogen,\n  onSelectPathogen,\n  onShowPathDetails,\n  className = ''\n}) => {\n  _s();\n  var _network$edges, _nodePositions$get, _nodePositions$get2;\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredEdge, setHoveredEdge] = useState(null);\n  const [nodePositions, setNodePositions] = useState(new Map());\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [connectionFilter, setConnectionFilter] = useState('all'); // 'all', 'strong', 'medium'\n  const [showLabels, setShowLabels] = useState(true);\n  const [highlightedPath, setHighlightedPath] = useState([]);\n\n  // Initialize node positions using force-directed layout simulation\n  const initializePositions = useCallback(() => {\n    if (!network || !network.nodes) return;\n    const {\n      width,\n      height\n    } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const positions = new Map();\n\n    // Place nodes in clusters based on gram status\n    const clusters = {\n      positive: {\n        x: centerX - 200,\n        y: centerY - 100,\n        nodes: []\n      },\n      negative: {\n        x: centerX + 200,\n        y: centerY - 100,\n        nodes: []\n      },\n      unknown: {\n        x: centerX,\n        y: centerY + 150,\n        nodes: []\n      }\n    };\n\n    // Group nodes by gram status\n    network.nodes.forEach(node => {\n      const gramStatus = node.clusterData.gramStatus;\n      if (clusters[gramStatus]) {\n        clusters[gramStatus].nodes.push(node);\n      } else {\n        clusters.unknown.nodes.push(node);\n      }\n    });\n\n    // Position nodes within their clusters\n    Object.entries(clusters).forEach(([status, cluster]) => {\n      const {\n        nodes\n      } = cluster;\n      const radius = Math.min(150, Math.max(50, nodes.length * 8));\n      nodes.forEach((node, index) => {\n        const angle = index / nodes.length * 2 * Math.PI;\n        const jitter = (Math.random() - 0.5) * 40; // Add some randomness\n\n        positions.set(node.id, {\n          x: cluster.x + Math.cos(angle) * radius + jitter,\n          y: cluster.y + Math.sin(angle) * radius + jitter,\n          vx: 0,\n          vy: 0\n        });\n      });\n    });\n    setNodePositions(positions);\n  }, [network, dimensions]);\n\n  // Simple force simulation for better positioning\n  const runForceSimulation = useCallback(() => {\n    if (!network || nodePositions.size === 0) return;\n    setIsAnimating(true);\n    const positions = new Map(nodePositions);\n    const iterations = 50;\n    for (let i = 0; i < iterations; i++) {\n      // Apply repulsion between nodes\n      positions.forEach((pos1, id1) => {\n        positions.forEach((pos2, id2) => {\n          if (id1 !== id2) {\n            const dx = pos1.x - pos2.x;\n            const dy = pos1.y - pos2.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            if (distance < 80 && distance > 0) {\n              const repulsion = 2000 / (distance * distance);\n              const fx = dx / distance * repulsion;\n              const fy = dy / distance * repulsion;\n              pos1.vx += fx * 0.1;\n              pos1.vy += fy * 0.1;\n            }\n          }\n        });\n      });\n\n      // Apply attraction along edges\n      network.edges.forEach(edge => {\n        const pos1 = positions.get(edge.source);\n        const pos2 = positions.get(edge.target);\n        if (pos1 && pos2) {\n          const dx = pos2.x - pos1.x;\n          const dy = pos2.y - pos1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance > 100) {\n            const attraction = edge.weight * 50;\n            const fx = dx / distance * attraction;\n            const fy = dy / distance * attraction;\n            pos1.vx += fx * 0.01;\n            pos1.vy += fy * 0.01;\n            pos2.vx -= fx * 0.01;\n            pos2.vy -= fy * 0.01;\n          }\n        }\n      });\n\n      // Update positions and apply damping\n      positions.forEach(pos => {\n        pos.x += pos.vx;\n        pos.y += pos.vy;\n        pos.vx *= 0.9;\n        pos.vy *= 0.9;\n\n        // Keep nodes within bounds\n        pos.x = Math.max(30, Math.min(dimensions.width - 30, pos.x));\n        pos.y = Math.max(30, Math.min(dimensions.height - 30, pos.y));\n      });\n    }\n    setNodePositions(positions);\n    setIsAnimating(false);\n  }, [network, nodePositions, dimensions]);\n\n  // Initialize positions when network changes\n  useEffect(() => {\n    initializePositions();\n  }, [initializePositions]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current) {\n        const rect = svgRef.current.parentElement.getBoundingClientRect();\n        setDimensions({\n          width: Math.max(600, rect.width - 40),\n          height: Math.max(400, rect.height - 40)\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Filter edges based on connection strength\n  const filteredEdges = (network === null || network === void 0 ? void 0 : (_network$edges = network.edges) === null || _network$edges === void 0 ? void 0 : _network$edges.filter(edge => {\n    if (connectionFilter === 'all') return true;\n    return edge.type === connectionFilter;\n  })) || [];\n\n  // Get node styling based on state\n  const getNodeStyle = node => {\n    const isSelected = (selectedPathogen === null || selectedPathogen === void 0 ? void 0 : selectedPathogen.name) === node.id;\n    const isHovered = (hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === node.id;\n    const isHighlighted = highlightedPath.includes(node.id);\n    const isConnectedToSelected = selectedPathogen && filteredEdges.some(e => e.source === selectedPathogen.name && e.target === node.id || e.target === selectedPathogen.name && e.source === node.id);\n    let fill = '#e5e7eb'; // default gray\n    let stroke = '#9ca3af';\n    let strokeWidth = 2;\n\n    // Color by gram status\n    if (node.clusterData.gramStatus === 'positive') {\n      fill = isSelected ? '#7c3aed' : '#a855f7';\n    } else if (node.clusterData.gramStatus === 'negative') {\n      fill = isSelected ? '#dc2626' : '#ef4444';\n    } else {\n      fill = isSelected ? '#059669' : '#10b981';\n    }\n    if (isHovered) {\n      strokeWidth = 4;\n      stroke = '#1f2937';\n    } else if (isConnectedToSelected) {\n      strokeWidth = 3;\n      stroke = '#3b82f6';\n    } else if (isHighlighted) {\n      strokeWidth = 3;\n      stroke = '#f59e0b';\n    }\n    return {\n      fill: isSelected ? fill : fill + 'dd',\n      stroke,\n      strokeWidth,\n      opacity: selectedPathogen && !isSelected && !isConnectedToSelected ? 0.4 : 1\n    };\n  };\n\n  // Get edge styling\n  const getEdgeStyle = edge => {\n    const isSelected = selectedPathogen && (edge.source === selectedPathogen.name || edge.target === selectedPathogen.name);\n    const isHovered = hoveredEdge === edge;\n    const isInPath = highlightedPath.includes(edge.source) && highlightedPath.includes(edge.target);\n    let stroke = '#9ca3af';\n    let strokeWidth = edge.weight * 4;\n    let opacity = 0.6;\n    if (edge.type === 'strong') {\n      stroke = '#059669';\n    } else if (edge.type === 'medium') {\n      stroke = '#3b82f6';\n    } else {\n      stroke = '#6b7280';\n    }\n    if (isHovered) {\n      strokeWidth = Math.max(strokeWidth * 1.5, 3);\n      opacity = 1;\n    } else if (isSelected) {\n      opacity = 0.8;\n    } else if (isInPath) {\n      stroke = '#f59e0b';\n      strokeWidth = Math.max(strokeWidth, 3);\n      opacity = 0.9;\n    } else if (selectedPathogen) {\n      opacity = isSelected ? 0.8 : 0.2;\n    }\n    return {\n      stroke,\n      strokeWidth,\n      opacity\n    };\n  };\n\n  // Handle node click with animation\n  const handleNodeClick = (node, event) => {\n    // Create ripple effect\n    if (event && event.target) {\n      defaultAnimationController.createRipple(event.target.parentElement, event);\n    }\n    onSelectPathogen(node.pathogen);\n    setHighlightedPath([]);\n\n    // Animate connected nodes\n    setTimeout(() => {\n      const connectedEdges = filteredEdges.filter(edge => edge.source === node.id || edge.target === node.id);\n      connectedEdges.forEach((edge, index) => {\n        setTimeout(() => {\n          setHighlightedPath(prev => [...prev, edge.source, edge.target]);\n        }, index * 100);\n      });\n    }, 200);\n  };\n\n  // Handle edge hover to show connection details\n  const handleEdgeHover = edge => {\n    setHoveredEdge(edge);\n    if (onShowPathDetails) {\n      onShowPathDetails(edge.similarity);\n    }\n  };\n\n  // Get node radius based on centrality\n  const getNodeRadius = node => {\n    const baseRadius = 8;\n    const centralityBonus = node.centralityScore * 10;\n    return Math.max(baseRadius, Math.min(20, baseRadius + centralityBonus));\n  };\n  if (!network || !network.nodes) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center justify-center h-64 ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"Loading network visualization...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-white rounded-xl shadow-sm border ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Network, {\n            className: \"text-blue-600\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Pathogen Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"(\", network.nodes.length, \" pathogens, \", filteredEdges.length, \" connections)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: runForceSimulation,\n            disabled: isAnimating,\n            className: \"p-2 rounded-lg border hover:bg-gray-50 transition-colors disabled:opacity-50\",\n            title: \"Reorganize layout\",\n            children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 16,\n              className: isAnimating ? 'animate-spin' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            size: 16,\n            className: \"text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionFilter,\n            onChange: e => setConnectionFilter(e.target.value),\n            className: \"border rounded px-2 py-1 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"strong\",\n              children: \"Strong Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weak\",\n              children: \"Weak Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showLabels,\n            onChange: e => setShowLabels(e.target.checked),\n            className: \"rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), \"Show Labels\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      style: {\n        height: dimensions.height + 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n            id: \"grid\",\n            width: \"20\",\n            height: \"20\",\n            patternUnits: \"userSpaceOnUse\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M 20 0 L 0 0 0 20\",\n              fill: \"none\",\n              stroke: \"#f3f4f6\",\n              strokeWidth: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          width: \"100%\",\n          height: \"100%\",\n          fill: \"url(#grid)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"edges\",\n          children: filteredEdges.map((edge, index) => {\n            const sourcePos = nodePositions.get(edge.source);\n            const targetPos = nodePositions.get(edge.target);\n            if (!sourcePos || !targetPos) return null;\n            const style = getEdgeStyle(edge);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: sourcePos.x,\n                y1: sourcePos.y,\n                x2: targetPos.x,\n                y2: targetPos.y,\n                stroke: style.stroke,\n                strokeWidth: style.strokeWidth,\n                opacity: style.opacity,\n                className: \"cursor-pointer transition-all duration-200\",\n                onMouseEnter: () => handleEdgeHover(edge),\n                onMouseLeave: () => setHoveredEdge(null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), edge.type === 'strong' && showLabels && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: (sourcePos.x + targetPos.x) / 2,\n                y: (sourcePos.y + targetPos.y) / 2,\n                textAnchor: \"middle\",\n                className: \"fill-gray-600 text-xs pointer-events-none\",\n                dy: \"-2\",\n                children: [(edge.weight * 100).toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"nodes\",\n          children: network.nodes.map(node => {\n            const pos = nodePositions.get(node.id);\n            if (!pos) return null;\n            const style = getNodeStyle(node);\n            const radius = getNodeRadius(node);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: pos.x,\n                cy: pos.y,\n                r: radius,\n                fill: style.fill,\n                stroke: style.stroke,\n                strokeWidth: style.strokeWidth,\n                opacity: style.opacity,\n                className: `cursor-pointer transition-all duration-200 hover:scale-110 ${isSelected ? 'animate-pulse' : ''} ${isHovered ? 'drop-shadow-lg' : ''}`,\n                onClick: e => handleNodeClick(node, e),\n                onMouseEnter: () => setHoveredNode(node),\n                onMouseLeave: () => setHoveredNode(null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), showLabels && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: pos.x,\n                y: pos.y + radius + 12,\n                textAnchor: \"middle\",\n                className: \"fill-gray-700 text-xs font-medium pointer-events-none\",\n                style: {\n                  fontSize: '10px'\n                },\n                children: node.pathogen.shortName || node.id.split(' ').slice(0, 2).join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this), node.connections > 3 && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: pos.x + radius - 4,\n                cy: pos.y - radius + 4,\n                r: \"6\",\n                fill: \"#3b82f6\",\n                className: \"pointer-events-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this)]\n            }, node.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), hoveredNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\",\n        style: {\n          left: Math.min(dimensions.width - 200, (((_nodePositions$get = nodePositions.get(hoveredNode.id)) === null || _nodePositions$get === void 0 ? void 0 : _nodePositions$get.x) || 0) + 20),\n          top: Math.max(20, (((_nodePositions$get2 = nodePositions.get(hoveredNode.id)) === null || _nodePositions$get2 === void 0 ? void 0 : _nodePositions$get2.y) || 0) - 60)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium text-gray-900\",\n          children: hoveredNode.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Gram \", hoveredNode.clusterData.gramStatus, \" \\u2022 \", hoveredNode.connections, \" connections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Centrality: \", (hoveredNode.centralityScore * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), hoveredEdge && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\",\n        style: {\n          left: 20,\n          top: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium text-gray-900\",\n          children: \"Connection Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [hoveredEdge.source, \" \\u2194 \", hoveredEdge.target]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Similarity: \", (hoveredEdge.weight * 100).toFixed(1), \"% (\", hoveredEdge.type, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), hoveredEdge.similarity.details.sharedConditionNames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-600 mt-1\",\n          children: [\"Shared: \", hoveredEdge.similarity.details.sharedConditionNames.slice(0, 2).join(', '), hoveredEdge.similarity.details.sharedConditionNames.length > 2 && '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 rounded-full bg-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Gram Positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 rounded-full bg-red-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Gram Negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 rounded-full bg-green-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Unknown/Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-1 bg-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Strong (>60%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(PathogenNetworkVisualization, \"Aqda5j3s4hCo1QgDA6Jerjd1MZs=\");\n_c = PathogenNetworkVisualization;\nexport default PathogenNetworkVisualization;\nvar _c;\n$RefreshReg$(_c, \"PathogenNetworkVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Microscope","Target","Info","Zap","Network","Filter","RotateCcw","defaultAnimationController","jsxDEV","_jsxDEV","PathogenNetworkVisualization","network","selectedPathogen","onSelectPathogen","onShowPathDetails","className","_s","_network$edges","_nodePositions$get","_nodePositions$get2","svgRef","dimensions","setDimensions","width","height","hoveredNode","setHoveredNode","hoveredEdge","setHoveredEdge","nodePositions","setNodePositions","Map","isAnimating","setIsAnimating","connectionFilter","setConnectionFilter","showLabels","setShowLabels","highlightedPath","setHighlightedPath","initializePositions","nodes","centerX","centerY","positions","clusters","positive","x","y","negative","unknown","forEach","node","gramStatus","clusterData","push","Object","entries","status","cluster","radius","Math","min","max","length","index","angle","PI","jitter","random","set","id","cos","sin","vx","vy","runForceSimulation","size","iterations","i","pos1","id1","pos2","id2","dx","dy","distance","sqrt","repulsion","fx","fy","edges","edge","get","source","target","attraction","weight","pos","handleResize","current","rect","parentElement","getBoundingClientRect","window","addEventListener","removeEventListener","filteredEdges","filter","type","getNodeStyle","isSelected","name","isHovered","isHighlighted","includes","isConnectedToSelected","some","e","fill","stroke","strokeWidth","opacity","getEdgeStyle","isInPath","handleNodeClick","event","createRipple","pathogen","setTimeout","connectedEdges","prev","handleEdgeHover","similarity","getNodeRadius","baseRadius","centralityBonus","centralityScore","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","value","onChange","checked","style","ref","patternUnits","d","map","sourcePos","targetPos","x1","y1","x2","y2","onMouseEnter","onMouseLeave","textAnchor","toFixed","cx","cy","r","fontSize","shortName","split","slice","join","connections","left","top","details","sharedConditionNames","_c","$RefreshReg$"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/components/PathogenNetworkVisualization.js"],"sourcesContent":["/**\n * PathogenNetworkVisualization Component\n * Interactive network visualization showing pathogen relationships and connections\n * Provides tactile exploration of pathogen data through clickable nodes and edges\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Microscope, Target, Info, Zap, Network, Filter, RotateCcw } from 'lucide-react';\nimport { defaultAnimationController } from '../utils/animations';\n\nconst PathogenNetworkVisualization = ({\n  network,\n  selectedPathogen,\n  onSelectPathogen,\n  onShowPathDetails,\n  className = ''\n}) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredEdge, setHoveredEdge] = useState(null);\n  const [nodePositions, setNodePositions] = useState(new Map());\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [connectionFilter, setConnectionFilter] = useState('all'); // 'all', 'strong', 'medium'\n  const [showLabels, setShowLabels] = useState(true);\n  const [highlightedPath, setHighlightedPath] = useState([]);\n\n  // Initialize node positions using force-directed layout simulation\n  const initializePositions = useCallback(() => {\n    if (!network || !network.nodes) return;\n\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const positions = new Map();\n\n    // Place nodes in clusters based on gram status\n    const clusters = {\n      positive: { x: centerX - 200, y: centerY - 100, nodes: [] },\n      negative: { x: centerX + 200, y: centerY - 100, nodes: [] },\n      unknown: { x: centerX, y: centerY + 150, nodes: [] }\n    };\n\n    // Group nodes by gram status\n    network.nodes.forEach(node => {\n      const gramStatus = node.clusterData.gramStatus;\n      if (clusters[gramStatus]) {\n        clusters[gramStatus].nodes.push(node);\n      } else {\n        clusters.unknown.nodes.push(node);\n      }\n    });\n\n    // Position nodes within their clusters\n    Object.entries(clusters).forEach(([status, cluster]) => {\n      const { nodes } = cluster;\n      const radius = Math.min(150, Math.max(50, nodes.length * 8));\n      \n      nodes.forEach((node, index) => {\n        const angle = (index / nodes.length) * 2 * Math.PI;\n        const jitter = (Math.random() - 0.5) * 40; // Add some randomness\n        \n        positions.set(node.id, {\n          x: cluster.x + Math.cos(angle) * radius + jitter,\n          y: cluster.y + Math.sin(angle) * radius + jitter,\n          vx: 0,\n          vy: 0\n        });\n      });\n    });\n\n    setNodePositions(positions);\n  }, [network, dimensions]);\n\n  // Simple force simulation for better positioning\n  const runForceSimulation = useCallback(() => {\n    if (!network || nodePositions.size === 0) return;\n\n    setIsAnimating(true);\n    const positions = new Map(nodePositions);\n    const iterations = 50;\n    \n    for (let i = 0; i < iterations; i++) {\n      // Apply repulsion between nodes\n      positions.forEach((pos1, id1) => {\n        positions.forEach((pos2, id2) => {\n          if (id1 !== id2) {\n            const dx = pos1.x - pos2.x;\n            const dy = pos1.y - pos2.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            \n            if (distance < 80 && distance > 0) {\n              const repulsion = 2000 / (distance * distance);\n              const fx = (dx / distance) * repulsion;\n              const fy = (dy / distance) * repulsion;\n              \n              pos1.vx += fx * 0.1;\n              pos1.vy += fy * 0.1;\n            }\n          }\n        });\n      });\n\n      // Apply attraction along edges\n      network.edges.forEach(edge => {\n        const pos1 = positions.get(edge.source);\n        const pos2 = positions.get(edge.target);\n        \n        if (pos1 && pos2) {\n          const dx = pos2.x - pos1.x;\n          const dy = pos2.y - pos1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance > 100) {\n            const attraction = edge.weight * 50;\n            const fx = (dx / distance) * attraction;\n            const fy = (dy / distance) * attraction;\n            \n            pos1.vx += fx * 0.01;\n            pos1.vy += fy * 0.01;\n            pos2.vx -= fx * 0.01;\n            pos2.vy -= fy * 0.01;\n          }\n        }\n      });\n\n      // Update positions and apply damping\n      positions.forEach(pos => {\n        pos.x += pos.vx;\n        pos.y += pos.vy;\n        pos.vx *= 0.9;\n        pos.vy *= 0.9;\n\n        // Keep nodes within bounds\n        pos.x = Math.max(30, Math.min(dimensions.width - 30, pos.x));\n        pos.y = Math.max(30, Math.min(dimensions.height - 30, pos.y));\n      });\n    }\n\n    setNodePositions(positions);\n    setIsAnimating(false);\n  }, [network, nodePositions, dimensions]);\n\n  // Initialize positions when network changes\n  useEffect(() => {\n    initializePositions();\n  }, [initializePositions]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current) {\n        const rect = svgRef.current.parentElement.getBoundingClientRect();\n        setDimensions({\n          width: Math.max(600, rect.width - 40),\n          height: Math.max(400, rect.height - 40)\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Filter edges based on connection strength\n  const filteredEdges = network?.edges?.filter(edge => {\n    if (connectionFilter === 'all') return true;\n    return edge.type === connectionFilter;\n  }) || [];\n\n  // Get node styling based on state\n  const getNodeStyle = (node) => {\n    const isSelected = selectedPathogen?.name === node.id;\n    const isHovered = hoveredNode?.id === node.id;\n    const isHighlighted = highlightedPath.includes(node.id);\n    const isConnectedToSelected = selectedPathogen && \n      filteredEdges.some(e => \n        (e.source === selectedPathogen.name && e.target === node.id) ||\n        (e.target === selectedPathogen.name && e.source === node.id)\n      );\n\n    let fill = '#e5e7eb'; // default gray\n    let stroke = '#9ca3af';\n    let strokeWidth = 2;\n\n    // Color by gram status\n    if (node.clusterData.gramStatus === 'positive') {\n      fill = isSelected ? '#7c3aed' : '#a855f7';\n    } else if (node.clusterData.gramStatus === 'negative') {\n      fill = isSelected ? '#dc2626' : '#ef4444';\n    } else {\n      fill = isSelected ? '#059669' : '#10b981';\n    }\n\n    if (isHovered) {\n      strokeWidth = 4;\n      stroke = '#1f2937';\n    } else if (isConnectedToSelected) {\n      strokeWidth = 3;\n      stroke = '#3b82f6';\n    } else if (isHighlighted) {\n      strokeWidth = 3;\n      stroke = '#f59e0b';\n    }\n\n    return {\n      fill: isSelected ? fill : fill + 'dd',\n      stroke,\n      strokeWidth,\n      opacity: selectedPathogen && !isSelected && !isConnectedToSelected ? 0.4 : 1\n    };\n  };\n\n  // Get edge styling\n  const getEdgeStyle = (edge) => {\n    const isSelected = selectedPathogen && \n      (edge.source === selectedPathogen.name || edge.target === selectedPathogen.name);\n    const isHovered = hoveredEdge === edge;\n    const isInPath = highlightedPath.includes(edge.source) && highlightedPath.includes(edge.target);\n\n    let stroke = '#9ca3af';\n    let strokeWidth = edge.weight * 4;\n    let opacity = 0.6;\n\n    if (edge.type === 'strong') {\n      stroke = '#059669';\n    } else if (edge.type === 'medium') {\n      stroke = '#3b82f6';\n    } else {\n      stroke = '#6b7280';\n    }\n\n    if (isHovered) {\n      strokeWidth = Math.max(strokeWidth * 1.5, 3);\n      opacity = 1;\n    } else if (isSelected) {\n      opacity = 0.8;\n    } else if (isInPath) {\n      stroke = '#f59e0b';\n      strokeWidth = Math.max(strokeWidth, 3);\n      opacity = 0.9;\n    } else if (selectedPathogen) {\n      opacity = isSelected ? 0.8 : 0.2;\n    }\n\n    return { stroke, strokeWidth, opacity };\n  };\n\n  // Handle node click with animation\n  const handleNodeClick = (node, event) => {\n    // Create ripple effect\n    if (event && event.target) {\n      defaultAnimationController.createRipple(event.target.parentElement, event);\n    }\n    \n    onSelectPathogen(node.pathogen);\n    setHighlightedPath([]);\n    \n    // Animate connected nodes\n    setTimeout(() => {\n      const connectedEdges = filteredEdges.filter(edge => \n        edge.source === node.id || edge.target === node.id\n      );\n      \n      connectedEdges.forEach((edge, index) => {\n        setTimeout(() => {\n          setHighlightedPath(prev => [...prev, edge.source, edge.target]);\n        }, index * 100);\n      });\n    }, 200);\n  };\n\n  // Handle edge hover to show connection details\n  const handleEdgeHover = (edge) => {\n    setHoveredEdge(edge);\n    if (onShowPathDetails) {\n      onShowPathDetails(edge.similarity);\n    }\n  };\n\n  // Get node radius based on centrality\n  const getNodeRadius = (node) => {\n    const baseRadius = 8;\n    const centralityBonus = node.centralityScore * 10;\n    return Math.max(baseRadius, Math.min(20, baseRadius + centralityBonus));\n  };\n\n  if (!network || !network.nodes) {\n    return (\n      <div className={`flex items-center justify-center h-64 ${className}`}>\n        <div className=\"text-gray-500\">Loading network visualization...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-xl shadow-sm border ${className}`}>\n      {/* Header with controls */}\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Network className=\"text-blue-600\" size={20} />\n            <h3 className=\"text-lg font-semibold\">Pathogen Network</h3>\n            <span className=\"text-sm text-gray-500\">\n              ({network.nodes.length} pathogens, {filteredEdges.length} connections)\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={runForceSimulation}\n              disabled={isAnimating}\n              className=\"p-2 rounded-lg border hover:bg-gray-50 transition-colors disabled:opacity-50\"\n              title=\"Reorganize layout\"\n            >\n              <RotateCcw size={16} className={isAnimating ? 'animate-spin' : ''} />\n            </button>\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex items-center gap-4 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <Filter size={16} className=\"text-gray-600\" />\n            <select\n              value={connectionFilter}\n              onChange={(e) => setConnectionFilter(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm\"\n            >\n              <option value=\"all\">All Connections</option>\n              <option value=\"strong\">Strong Only</option>\n              <option value=\"medium\">Medium Only</option>\n              <option value=\"weak\">Weak Only</option>\n            </select>\n          </div>\n\n          <label className=\"flex items-center gap-1\">\n            <input\n              type=\"checkbox\"\n              checked={showLabels}\n              onChange={(e) => setShowLabels(e.target.checked)}\n              className=\"rounded\"\n            />\n            Show Labels\n          </label>\n        </div>\n      </div>\n\n      {/* Visualization */}\n      <div className=\"p-4\" style={{ height: dimensions.height + 40 }}>\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          className=\"border rounded-lg bg-gray-50\"\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"1\"/>\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n\n          {/* Edges */}\n          <g className=\"edges\">\n            {filteredEdges.map((edge, index) => {\n              const sourcePos = nodePositions.get(edge.source);\n              const targetPos = nodePositions.get(edge.target);\n              \n              if (!sourcePos || !targetPos) return null;\n\n              const style = getEdgeStyle(edge);\n              \n              return (\n                <g key={index}>\n                  <line\n                    x1={sourcePos.x}\n                    y1={sourcePos.y}\n                    x2={targetPos.x}\n                    y2={targetPos.y}\n                    stroke={style.stroke}\n                    strokeWidth={style.strokeWidth}\n                    opacity={style.opacity}\n                    className=\"cursor-pointer transition-all duration-200\"\n                    onMouseEnter={() => handleEdgeHover(edge)}\n                    onMouseLeave={() => setHoveredEdge(null)}\n                  />\n                  \n                  {/* Edge label for strong connections */}\n                  {edge.type === 'strong' && showLabels && (\n                    <text\n                      x={(sourcePos.x + targetPos.x) / 2}\n                      y={(sourcePos.y + targetPos.y) / 2}\n                      textAnchor=\"middle\"\n                      className=\"fill-gray-600 text-xs pointer-events-none\"\n                      dy=\"-2\"\n                    >\n                      {(edge.weight * 100).toFixed(0)}%\n                    </text>\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          {/* Nodes */}\n          <g className=\"nodes\">\n            {network.nodes.map((node) => {\n              const pos = nodePositions.get(node.id);\n              if (!pos) return null;\n\n              const style = getNodeStyle(node);\n              const radius = getNodeRadius(node);\n              \n              return (\n                <g key={node.id}>\n                  <circle\n                    cx={pos.x}\n                    cy={pos.y}\n                    r={radius}\n                    fill={style.fill}\n                    stroke={style.stroke}\n                    strokeWidth={style.strokeWidth}\n                    opacity={style.opacity}\n                    className={`cursor-pointer transition-all duration-200 hover:scale-110 ${\n                      isSelected ? 'animate-pulse' : ''\n                    } ${isHovered ? 'drop-shadow-lg' : ''}`}\n                    onClick={(e) => handleNodeClick(node, e)}\n                    onMouseEnter={() => setHoveredNode(node)}\n                    onMouseLeave={() => setHoveredNode(null)}\n                  />\n                  \n                  {/* Node labels */}\n                  {showLabels && (\n                    <text\n                      x={pos.x}\n                      y={pos.y + radius + 12}\n                      textAnchor=\"middle\"\n                      className=\"fill-gray-700 text-xs font-medium pointer-events-none\"\n                      style={{ fontSize: '10px' }}\n                    >\n                      {node.pathogen.shortName || node.id.split(' ').slice(0, 2).join(' ')}\n                    </text>\n                  )}\n\n                  {/* Connection count indicator */}\n                  {node.connections > 3 && (\n                    <circle\n                      cx={pos.x + radius - 4}\n                      cy={pos.y - radius + 4}\n                      r=\"6\"\n                      fill=\"#3b82f6\"\n                      className=\"pointer-events-none\"\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n\n        {/* Hover tooltip */}\n        {hoveredNode && (\n          <div className=\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\"\n               style={{\n                 left: Math.min(dimensions.width - 200, (nodePositions.get(hoveredNode.id)?.x || 0) + 20),\n                 top: Math.max(20, (nodePositions.get(hoveredNode.id)?.y || 0) - 60)\n               }}>\n            <div className=\"font-medium text-gray-900\">{hoveredNode.id}</div>\n            <div className=\"text-sm text-gray-600\">\n              Gram {hoveredNode.clusterData.gramStatus} • {hoveredNode.connections} connections\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Centrality: {(hoveredNode.centralityScore * 100).toFixed(1)}%\n            </div>\n          </div>\n        )}\n\n        {/* Edge tooltip */}\n        {hoveredEdge && (\n          <div className=\"absolute bg-white border rounded-lg shadow-lg p-3 pointer-events-none z-10\"\n               style={{ left: 20, top: 20 }}>\n            <div className=\"font-medium text-gray-900\">Connection Details</div>\n            <div className=\"text-sm text-gray-600\">\n              {hoveredEdge.source} ↔ {hoveredEdge.target}\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Similarity: {(hoveredEdge.weight * 100).toFixed(1)}% ({hoveredEdge.type})\n            </div>\n            {hoveredEdge.similarity.details.sharedConditionNames.length > 0 && (\n              <div className=\"text-xs text-blue-600 mt-1\">\n                Shared: {hoveredEdge.similarity.details.sharedConditionNames.slice(0, 2).join(', ')}\n                {hoveredEdge.similarity.details.sharedConditionNames.length > 2 && '...'}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      <div className=\"p-4 border-t bg-gray-50\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-xs\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n            <span>Gram Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n            <span>Gram Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n            <span>Unknown/Other</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-1 bg-green-600\"></div>\n            <span>Strong (>60%)</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PathogenNetworkVisualization;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,cAAc;AACxF,SAASC,0BAA0B,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,4BAA4B,GAAGA,CAAC;EACpCC,OAAO;EACPC,gBAAgB;EAChBC,gBAAgB;EAChBC,iBAAiB;EACjBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,kBAAA,EAAAC,mBAAA;EACJ,MAAMC,MAAM,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC;IAAE2B,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACzE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,IAAImC,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM4C,mBAAmB,GAAGzC,WAAW,CAAC,MAAM;IAC5C,IAAI,CAACY,OAAO,IAAI,CAACA,OAAO,CAAC8B,KAAK,EAAE;IAEhC,MAAM;MAAElB,KAAK;MAAEC;IAAO,CAAC,GAAGH,UAAU;IACpC,MAAMqB,OAAO,GAAGnB,KAAK,GAAG,CAAC;IACzB,MAAMoB,OAAO,GAAGnB,MAAM,GAAG,CAAC;IAC1B,MAAMoB,SAAS,GAAG,IAAIb,GAAG,CAAC,CAAC;;IAE3B;IACA,MAAMc,QAAQ,GAAG;MACfC,QAAQ,EAAE;QAAEC,CAAC,EAAEL,OAAO,GAAG,GAAG;QAAEM,CAAC,EAAEL,OAAO,GAAG,GAAG;QAAEF,KAAK,EAAE;MAAG,CAAC;MAC3DQ,QAAQ,EAAE;QAAEF,CAAC,EAAEL,OAAO,GAAG,GAAG;QAAEM,CAAC,EAAEL,OAAO,GAAG,GAAG;QAAEF,KAAK,EAAE;MAAG,CAAC;MAC3DS,OAAO,EAAE;QAAEH,CAAC,EAAEL,OAAO;QAAEM,CAAC,EAAEL,OAAO,GAAG,GAAG;QAAEF,KAAK,EAAE;MAAG;IACrD,CAAC;;IAED;IACA9B,OAAO,CAAC8B,KAAK,CAACU,OAAO,CAACC,IAAI,IAAI;MAC5B,MAAMC,UAAU,GAAGD,IAAI,CAACE,WAAW,CAACD,UAAU;MAC9C,IAAIR,QAAQ,CAACQ,UAAU,CAAC,EAAE;QACxBR,QAAQ,CAACQ,UAAU,CAAC,CAACZ,KAAK,CAACc,IAAI,CAACH,IAAI,CAAC;MACvC,CAAC,MAAM;QACLP,QAAQ,CAACK,OAAO,CAACT,KAAK,CAACc,IAAI,CAACH,IAAI,CAAC;MACnC;IACF,CAAC,CAAC;;IAEF;IACAI,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAAC,CAACM,OAAO,CAAC,CAAC,CAACO,MAAM,EAAEC,OAAO,CAAC,KAAK;MACtD,MAAM;QAAElB;MAAM,CAAC,GAAGkB,OAAO;MACzB,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEtB,KAAK,CAACuB,MAAM,GAAG,CAAC,CAAC,CAAC;MAE5DvB,KAAK,CAACU,OAAO,CAAC,CAACC,IAAI,EAAEa,KAAK,KAAK;QAC7B,MAAMC,KAAK,GAAID,KAAK,GAAGxB,KAAK,CAACuB,MAAM,GAAI,CAAC,GAAGH,IAAI,CAACM,EAAE;QAClD,MAAMC,MAAM,GAAG,CAACP,IAAI,CAACQ,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;;QAE3CzB,SAAS,CAAC0B,GAAG,CAAClB,IAAI,CAACmB,EAAE,EAAE;UACrBxB,CAAC,EAAEY,OAAO,CAACZ,CAAC,GAAGc,IAAI,CAACW,GAAG,CAACN,KAAK,CAAC,GAAGN,MAAM,GAAGQ,MAAM;UAChDpB,CAAC,EAAEW,OAAO,CAACX,CAAC,GAAGa,IAAI,CAACY,GAAG,CAACP,KAAK,CAAC,GAAGN,MAAM,GAAGQ,MAAM;UAChDM,EAAE,EAAE,CAAC;UACLC,EAAE,EAAE;QACN,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF7C,gBAAgB,CAACc,SAAS,CAAC;EAC7B,CAAC,EAAE,CAACjC,OAAO,EAAEU,UAAU,CAAC,CAAC;;EAEzB;EACA,MAAMuD,kBAAkB,GAAG7E,WAAW,CAAC,MAAM;IAC3C,IAAI,CAACY,OAAO,IAAIkB,aAAa,CAACgD,IAAI,KAAK,CAAC,EAAE;IAE1C5C,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMW,SAAS,GAAG,IAAIb,GAAG,CAACF,aAAa,CAAC;IACxC,MAAMiD,UAAU,GAAG,EAAE;IAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,EAAEC,CAAC,EAAE,EAAE;MACnC;MACAnC,SAAS,CAACO,OAAO,CAAC,CAAC6B,IAAI,EAAEC,GAAG,KAAK;QAC/BrC,SAAS,CAACO,OAAO,CAAC,CAAC+B,IAAI,EAAEC,GAAG,KAAK;UAC/B,IAAIF,GAAG,KAAKE,GAAG,EAAE;YACf,MAAMC,EAAE,GAAGJ,IAAI,CAACjC,CAAC,GAAGmC,IAAI,CAACnC,CAAC;YAC1B,MAAMsC,EAAE,GAAGL,IAAI,CAAChC,CAAC,GAAGkC,IAAI,CAAClC,CAAC;YAC1B,MAAMsC,QAAQ,GAAGzB,IAAI,CAAC0B,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;YAE7C,IAAIC,QAAQ,GAAG,EAAE,IAAIA,QAAQ,GAAG,CAAC,EAAE;cACjC,MAAME,SAAS,GAAG,IAAI,IAAIF,QAAQ,GAAGA,QAAQ,CAAC;cAC9C,MAAMG,EAAE,GAAIL,EAAE,GAAGE,QAAQ,GAAIE,SAAS;cACtC,MAAME,EAAE,GAAIL,EAAE,GAAGC,QAAQ,GAAIE,SAAS;cAEtCR,IAAI,CAACN,EAAE,IAAIe,EAAE,GAAG,GAAG;cACnBT,IAAI,CAACL,EAAE,IAAIe,EAAE,GAAG,GAAG;YACrB;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA/E,OAAO,CAACgF,KAAK,CAACxC,OAAO,CAACyC,IAAI,IAAI;QAC5B,MAAMZ,IAAI,GAAGpC,SAAS,CAACiD,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC;QACvC,MAAMZ,IAAI,GAAGtC,SAAS,CAACiD,GAAG,CAACD,IAAI,CAACG,MAAM,CAAC;QAEvC,IAAIf,IAAI,IAAIE,IAAI,EAAE;UAChB,MAAME,EAAE,GAAGF,IAAI,CAACnC,CAAC,GAAGiC,IAAI,CAACjC,CAAC;UAC1B,MAAMsC,EAAE,GAAGH,IAAI,CAAClC,CAAC,GAAGgC,IAAI,CAAChC,CAAC;UAC1B,MAAMsC,QAAQ,GAAGzB,IAAI,CAAC0B,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;UAE7C,IAAIC,QAAQ,GAAG,GAAG,EAAE;YAClB,MAAMU,UAAU,GAAGJ,IAAI,CAACK,MAAM,GAAG,EAAE;YACnC,MAAMR,EAAE,GAAIL,EAAE,GAAGE,QAAQ,GAAIU,UAAU;YACvC,MAAMN,EAAE,GAAIL,EAAE,GAAGC,QAAQ,GAAIU,UAAU;YAEvChB,IAAI,CAACN,EAAE,IAAIe,EAAE,GAAG,IAAI;YACpBT,IAAI,CAACL,EAAE,IAAIe,EAAE,GAAG,IAAI;YACpBR,IAAI,CAACR,EAAE,IAAIe,EAAE,GAAG,IAAI;YACpBP,IAAI,CAACP,EAAE,IAAIe,EAAE,GAAG,IAAI;UACtB;QACF;MACF,CAAC,CAAC;;MAEF;MACA9C,SAAS,CAACO,OAAO,CAAC+C,GAAG,IAAI;QACvBA,GAAG,CAACnD,CAAC,IAAImD,GAAG,CAACxB,EAAE;QACfwB,GAAG,CAAClD,CAAC,IAAIkD,GAAG,CAACvB,EAAE;QACfuB,GAAG,CAACxB,EAAE,IAAI,GAAG;QACbwB,GAAG,CAACvB,EAAE,IAAI,GAAG;;QAEb;QACAuB,GAAG,CAACnD,CAAC,GAAGc,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEF,IAAI,CAACC,GAAG,CAACzC,UAAU,CAACE,KAAK,GAAG,EAAE,EAAE2E,GAAG,CAACnD,CAAC,CAAC,CAAC;QAC5DmD,GAAG,CAAClD,CAAC,GAAGa,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEF,IAAI,CAACC,GAAG,CAACzC,UAAU,CAACG,MAAM,GAAG,EAAE,EAAE0E,GAAG,CAAClD,CAAC,CAAC,CAAC;MAC/D,CAAC,CAAC;IACJ;IAEAlB,gBAAgB,CAACc,SAAS,CAAC;IAC3BX,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACtB,OAAO,EAAEkB,aAAa,EAAER,UAAU,CAAC,CAAC;;EAExC;EACAxB,SAAS,CAAC,MAAM;IACd2C,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;;EAEzB;EACA3C,SAAS,CAAC,MAAM;IACd,MAAMsG,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI/E,MAAM,CAACgF,OAAO,EAAE;QAClB,MAAMC,IAAI,GAAGjF,MAAM,CAACgF,OAAO,CAACE,aAAa,CAACC,qBAAqB,CAAC,CAAC;QACjEjF,aAAa,CAAC;UACZC,KAAK,EAAEsC,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEsC,IAAI,CAAC9E,KAAK,GAAG,EAAE,CAAC;UACrCC,MAAM,EAAEqC,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEsC,IAAI,CAAC7E,MAAM,GAAG,EAAE;QACxC,CAAC,CAAC;MACJ;IACF,CAAC;IAEDgF,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC;IAC/CA,YAAY,CAAC,CAAC;IAEd,OAAO,MAAMK,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,aAAa,GAAG,CAAAhG,OAAO,aAAPA,OAAO,wBAAAM,cAAA,GAAPN,OAAO,CAAEgF,KAAK,cAAA1E,cAAA,uBAAdA,cAAA,CAAgB2F,MAAM,CAAChB,IAAI,IAAI;IACnD,IAAI1D,gBAAgB,KAAK,KAAK,EAAE,OAAO,IAAI;IAC3C,OAAO0D,IAAI,CAACiB,IAAI,KAAK3E,gBAAgB;EACvC,CAAC,CAAC,KAAI,EAAE;;EAER;EACA,MAAM4E,YAAY,GAAI1D,IAAI,IAAK;IAC7B,MAAM2D,UAAU,GAAG,CAAAnG,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEoG,IAAI,MAAK5D,IAAI,CAACmB,EAAE;IACrD,MAAM0C,SAAS,GAAG,CAAAxF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE8C,EAAE,MAAKnB,IAAI,CAACmB,EAAE;IAC7C,MAAM2C,aAAa,GAAG5E,eAAe,CAAC6E,QAAQ,CAAC/D,IAAI,CAACmB,EAAE,CAAC;IACvD,MAAM6C,qBAAqB,GAAGxG,gBAAgB,IAC5C+F,aAAa,CAACU,IAAI,CAACC,CAAC,IACjBA,CAAC,CAACxB,MAAM,KAAKlF,gBAAgB,CAACoG,IAAI,IAAIM,CAAC,CAACvB,MAAM,KAAK3C,IAAI,CAACmB,EAAE,IAC1D+C,CAAC,CAACvB,MAAM,KAAKnF,gBAAgB,CAACoG,IAAI,IAAIM,CAAC,CAACxB,MAAM,KAAK1C,IAAI,CAACmB,EAC3D,CAAC;IAEH,IAAIgD,IAAI,GAAG,SAAS,CAAC,CAAC;IACtB,IAAIC,MAAM,GAAG,SAAS;IACtB,IAAIC,WAAW,GAAG,CAAC;;IAEnB;IACA,IAAIrE,IAAI,CAACE,WAAW,CAACD,UAAU,KAAK,UAAU,EAAE;MAC9CkE,IAAI,GAAGR,UAAU,GAAG,SAAS,GAAG,SAAS;IAC3C,CAAC,MAAM,IAAI3D,IAAI,CAACE,WAAW,CAACD,UAAU,KAAK,UAAU,EAAE;MACrDkE,IAAI,GAAGR,UAAU,GAAG,SAAS,GAAG,SAAS;IAC3C,CAAC,MAAM;MACLQ,IAAI,GAAGR,UAAU,GAAG,SAAS,GAAG,SAAS;IAC3C;IAEA,IAAIE,SAAS,EAAE;MACbQ,WAAW,GAAG,CAAC;MACfD,MAAM,GAAG,SAAS;IACpB,CAAC,MAAM,IAAIJ,qBAAqB,EAAE;MAChCK,WAAW,GAAG,CAAC;MACfD,MAAM,GAAG,SAAS;IACpB,CAAC,MAAM,IAAIN,aAAa,EAAE;MACxBO,WAAW,GAAG,CAAC;MACfD,MAAM,GAAG,SAAS;IACpB;IAEA,OAAO;MACLD,IAAI,EAAER,UAAU,GAAGQ,IAAI,GAAGA,IAAI,GAAG,IAAI;MACrCC,MAAM;MACNC,WAAW;MACXC,OAAO,EAAE9G,gBAAgB,IAAI,CAACmG,UAAU,IAAI,CAACK,qBAAqB,GAAG,GAAG,GAAG;IAC7E,CAAC;EACH,CAAC;;EAED;EACA,MAAMO,YAAY,GAAI/B,IAAI,IAAK;IAC7B,MAAMmB,UAAU,GAAGnG,gBAAgB,KAChCgF,IAAI,CAACE,MAAM,KAAKlF,gBAAgB,CAACoG,IAAI,IAAIpB,IAAI,CAACG,MAAM,KAAKnF,gBAAgB,CAACoG,IAAI,CAAC;IAClF,MAAMC,SAAS,GAAGtF,WAAW,KAAKiE,IAAI;IACtC,MAAMgC,QAAQ,GAAGtF,eAAe,CAAC6E,QAAQ,CAACvB,IAAI,CAACE,MAAM,CAAC,IAAIxD,eAAe,CAAC6E,QAAQ,CAACvB,IAAI,CAACG,MAAM,CAAC;IAE/F,IAAIyB,MAAM,GAAG,SAAS;IACtB,IAAIC,WAAW,GAAG7B,IAAI,CAACK,MAAM,GAAG,CAAC;IACjC,IAAIyB,OAAO,GAAG,GAAG;IAEjB,IAAI9B,IAAI,CAACiB,IAAI,KAAK,QAAQ,EAAE;MAC1BW,MAAM,GAAG,SAAS;IACpB,CAAC,MAAM,IAAI5B,IAAI,CAACiB,IAAI,KAAK,QAAQ,EAAE;MACjCW,MAAM,GAAG,SAAS;IACpB,CAAC,MAAM;MACLA,MAAM,GAAG,SAAS;IACpB;IAEA,IAAIP,SAAS,EAAE;MACbQ,WAAW,GAAG5D,IAAI,CAACE,GAAG,CAAC0D,WAAW,GAAG,GAAG,EAAE,CAAC,CAAC;MAC5CC,OAAO,GAAG,CAAC;IACb,CAAC,MAAM,IAAIX,UAAU,EAAE;MACrBW,OAAO,GAAG,GAAG;IACf,CAAC,MAAM,IAAIE,QAAQ,EAAE;MACnBJ,MAAM,GAAG,SAAS;MAClBC,WAAW,GAAG5D,IAAI,CAACE,GAAG,CAAC0D,WAAW,EAAE,CAAC,CAAC;MACtCC,OAAO,GAAG,GAAG;IACf,CAAC,MAAM,IAAI9G,gBAAgB,EAAE;MAC3B8G,OAAO,GAAGX,UAAU,GAAG,GAAG,GAAG,GAAG;IAClC;IAEA,OAAO;MAAES,MAAM;MAAEC,WAAW;MAAEC;IAAQ,CAAC;EACzC,CAAC;;EAED;EACA,MAAMG,eAAe,GAAGA,CAACzE,IAAI,EAAE0E,KAAK,KAAK;IACvC;IACA,IAAIA,KAAK,IAAIA,KAAK,CAAC/B,MAAM,EAAE;MACzBxF,0BAA0B,CAACwH,YAAY,CAACD,KAAK,CAAC/B,MAAM,CAACO,aAAa,EAAEwB,KAAK,CAAC;IAC5E;IAEAjH,gBAAgB,CAACuC,IAAI,CAAC4E,QAAQ,CAAC;IAC/BzF,kBAAkB,CAAC,EAAE,CAAC;;IAEtB;IACA0F,UAAU,CAAC,MAAM;MACf,MAAMC,cAAc,GAAGvB,aAAa,CAACC,MAAM,CAAChB,IAAI,IAC9CA,IAAI,CAACE,MAAM,KAAK1C,IAAI,CAACmB,EAAE,IAAIqB,IAAI,CAACG,MAAM,KAAK3C,IAAI,CAACmB,EAClD,CAAC;MAED2D,cAAc,CAAC/E,OAAO,CAAC,CAACyC,IAAI,EAAE3B,KAAK,KAAK;QACtCgE,UAAU,CAAC,MAAM;UACf1F,kBAAkB,CAAC4F,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEvC,IAAI,CAACE,MAAM,EAAEF,IAAI,CAACG,MAAM,CAAC,CAAC;QACjE,CAAC,EAAE9B,KAAK,GAAG,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACA,MAAMmE,eAAe,GAAIxC,IAAI,IAAK;IAChChE,cAAc,CAACgE,IAAI,CAAC;IACpB,IAAI9E,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC8E,IAAI,CAACyC,UAAU,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIlF,IAAI,IAAK;IAC9B,MAAMmF,UAAU,GAAG,CAAC;IACpB,MAAMC,eAAe,GAAGpF,IAAI,CAACqF,eAAe,GAAG,EAAE;IACjD,OAAO5E,IAAI,CAACE,GAAG,CAACwE,UAAU,EAAE1E,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEyE,UAAU,GAAGC,eAAe,CAAC,CAAC;EACzE,CAAC;EAED,IAAI,CAAC7H,OAAO,IAAI,CAACA,OAAO,CAAC8B,KAAK,EAAE;IAC9B,oBACEhC,OAAA;MAAKM,SAAS,EAAE,yCAAyCA,SAAS,EAAG;MAAA2H,QAAA,eACnEjI,OAAA;QAAKM,SAAS,EAAC,eAAe;QAAA2H,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAEV;EAEA,oBACErI,OAAA;IAAKM,SAAS,EAAE,wCAAwCA,SAAS,EAAG;IAAA2H,QAAA,gBAElEjI,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAA2H,QAAA,gBAC3BjI,OAAA;QAAKM,SAAS,EAAC,wCAAwC;QAAA2H,QAAA,gBACrDjI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA,CAACL,OAAO;YAACW,SAAS,EAAC,eAAe;YAAC8D,IAAI,EAAE;UAAG;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/CrI,OAAA;YAAIM,SAAS,EAAC,uBAAuB;YAAA2H,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DrI,OAAA;YAAMM,SAAS,EAAC,uBAAuB;YAAA2H,QAAA,GAAC,GACrC,EAAC/H,OAAO,CAAC8B,KAAK,CAACuB,MAAM,EAAC,cAAY,EAAC2C,aAAa,CAAC3C,MAAM,EAAC,eAC3D;UAAA;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENrI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,eACtCjI,OAAA;YACEsI,OAAO,EAAEnE,kBAAmB;YAC5BoE,QAAQ,EAAEhH,WAAY;YACtBjB,SAAS,EAAC,8EAA8E;YACxFkI,KAAK,EAAC,mBAAmB;YAAAP,QAAA,eAEzBjI,OAAA,CAACH,SAAS;cAACuE,IAAI,EAAE,EAAG;cAAC9D,SAAS,EAAEiB,WAAW,GAAG,cAAc,GAAG;YAAG;cAAA2G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNrI,OAAA;QAAKM,SAAS,EAAC,iCAAiC;QAAA2H,QAAA,gBAC9CjI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA,CAACJ,MAAM;YAACwE,IAAI,EAAE,EAAG;YAAC9D,SAAS,EAAC;UAAe;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9CrI,OAAA;YACEyI,KAAK,EAAEhH,gBAAiB;YACxBiH,QAAQ,EAAG7B,CAAC,IAAKnF,mBAAmB,CAACmF,CAAC,CAACvB,MAAM,CAACmD,KAAK,CAAE;YACrDnI,SAAS,EAAC,kCAAkC;YAAA2H,QAAA,gBAE5CjI,OAAA;cAAQyI,KAAK,EAAC,KAAK;cAAAR,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC5CrI,OAAA;cAAQyI,KAAK,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3CrI,OAAA;cAAQyI,KAAK,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3CrI,OAAA;cAAQyI,KAAK,EAAC,MAAM;cAAAR,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENrI,OAAA;UAAOM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACxCjI,OAAA;YACEoG,IAAI,EAAC,UAAU;YACfuC,OAAO,EAAEhH,UAAW;YACpB+G,QAAQ,EAAG7B,CAAC,IAAKjF,aAAa,CAACiF,CAAC,CAACvB,MAAM,CAACqD,OAAO,CAAE;YACjDrI,SAAS,EAAC;UAAS;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNrI,OAAA;MAAKM,SAAS,EAAC,KAAK;MAACsI,KAAK,EAAE;QAAE7H,MAAM,EAAEH,UAAU,CAACG,MAAM,GAAG;MAAG,CAAE;MAAAkH,QAAA,gBAC7DjI,OAAA;QACE6I,GAAG,EAAElI,MAAO;QACZG,KAAK,EAAEF,UAAU,CAACE,KAAM;QACxBC,MAAM,EAAEH,UAAU,CAACG,MAAO;QAC1BT,SAAS,EAAC,8BAA8B;QAAA2H,QAAA,gBAGxCjI,OAAA;UAAAiI,QAAA,eACEjI,OAAA;YAAS8D,EAAE,EAAC,MAAM;YAAChD,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAAC+H,YAAY,EAAC,gBAAgB;YAAAb,QAAA,eACrEjI,OAAA;cAAM+I,CAAC,EAAC,mBAAmB;cAACjC,IAAI,EAAC,MAAM;cAACC,MAAM,EAAC,SAAS;cAACC,WAAW,EAAC;YAAG;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACPrI,OAAA;UAAMc,KAAK,EAAC,MAAM;UAACC,MAAM,EAAC,MAAM;UAAC+F,IAAI,EAAC;QAAY;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGrDrI,OAAA;UAAGM,SAAS,EAAC,OAAO;UAAA2H,QAAA,EACjB/B,aAAa,CAAC8C,GAAG,CAAC,CAAC7D,IAAI,EAAE3B,KAAK,KAAK;YAClC,MAAMyF,SAAS,GAAG7H,aAAa,CAACgE,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC;YAChD,MAAM6D,SAAS,GAAG9H,aAAa,CAACgE,GAAG,CAACD,IAAI,CAACG,MAAM,CAAC;YAEhD,IAAI,CAAC2D,SAAS,IAAI,CAACC,SAAS,EAAE,OAAO,IAAI;YAEzC,MAAMN,KAAK,GAAG1B,YAAY,CAAC/B,IAAI,CAAC;YAEhC,oBACEnF,OAAA;cAAAiI,QAAA,gBACEjI,OAAA;gBACEmJ,EAAE,EAAEF,SAAS,CAAC3G,CAAE;gBAChB8G,EAAE,EAAEH,SAAS,CAAC1G,CAAE;gBAChB8G,EAAE,EAAEH,SAAS,CAAC5G,CAAE;gBAChBgH,EAAE,EAAEJ,SAAS,CAAC3G,CAAE;gBAChBwE,MAAM,EAAE6B,KAAK,CAAC7B,MAAO;gBACrBC,WAAW,EAAE4B,KAAK,CAAC5B,WAAY;gBAC/BC,OAAO,EAAE2B,KAAK,CAAC3B,OAAQ;gBACvB3G,SAAS,EAAC,4CAA4C;gBACtDiJ,YAAY,EAAEA,CAAA,KAAM5B,eAAe,CAACxC,IAAI,CAAE;gBAC1CqE,YAAY,EAAEA,CAAA,KAAMrI,cAAc,CAAC,IAAI;cAAE;gBAAA+G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,EAGDlD,IAAI,CAACiB,IAAI,KAAK,QAAQ,IAAIzE,UAAU,iBACnC3B,OAAA;gBACEsC,CAAC,EAAE,CAAC2G,SAAS,CAAC3G,CAAC,GAAG4G,SAAS,CAAC5G,CAAC,IAAI,CAAE;gBACnCC,CAAC,EAAE,CAAC0G,SAAS,CAAC1G,CAAC,GAAG2G,SAAS,CAAC3G,CAAC,IAAI,CAAE;gBACnCkH,UAAU,EAAC,QAAQ;gBACnBnJ,SAAS,EAAC,2CAA2C;gBACrDsE,EAAE,EAAC,IAAI;gBAAAqD,QAAA,GAEN,CAAC9C,IAAI,CAACK,MAAM,GAAG,GAAG,EAAEkE,OAAO,CAAC,CAAC,CAAC,EAAC,GAClC;cAAA;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACP;YAAA,GAzBK7E,KAAK;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0BV,CAAC;UAER,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGJrI,OAAA;UAAGM,SAAS,EAAC,OAAO;UAAA2H,QAAA,EACjB/H,OAAO,CAAC8B,KAAK,CAACgH,GAAG,CAAErG,IAAI,IAAK;YAC3B,MAAM8C,GAAG,GAAGrE,aAAa,CAACgE,GAAG,CAACzC,IAAI,CAACmB,EAAE,CAAC;YACtC,IAAI,CAAC2B,GAAG,EAAE,OAAO,IAAI;YAErB,MAAMmD,KAAK,GAAGvC,YAAY,CAAC1D,IAAI,CAAC;YAChC,MAAMQ,MAAM,GAAG0E,aAAa,CAAClF,IAAI,CAAC;YAElC,oBACE3C,OAAA;cAAAiI,QAAA,gBACEjI,OAAA;gBACE2J,EAAE,EAAElE,GAAG,CAACnD,CAAE;gBACVsH,EAAE,EAAEnE,GAAG,CAAClD,CAAE;gBACVsH,CAAC,EAAE1G,MAAO;gBACV2D,IAAI,EAAE8B,KAAK,CAAC9B,IAAK;gBACjBC,MAAM,EAAE6B,KAAK,CAAC7B,MAAO;gBACrBC,WAAW,EAAE4B,KAAK,CAAC5B,WAAY;gBAC/BC,OAAO,EAAE2B,KAAK,CAAC3B,OAAQ;gBACvB3G,SAAS,EAAE,8DACTgG,UAAU,GAAG,eAAe,GAAG,EAAE,IAC/BE,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAAG;gBACxC8B,OAAO,EAAGzB,CAAC,IAAKO,eAAe,CAACzE,IAAI,EAAEkE,CAAC,CAAE;gBACzC0C,YAAY,EAAEA,CAAA,KAAMtI,cAAc,CAAC0B,IAAI,CAAE;gBACzC6G,YAAY,EAAEA,CAAA,KAAMvI,cAAc,CAAC,IAAI;cAAE;gBAAAiH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,EAGD1G,UAAU,iBACT3B,OAAA;gBACEsC,CAAC,EAAEmD,GAAG,CAACnD,CAAE;gBACTC,CAAC,EAAEkD,GAAG,CAAClD,CAAC,GAAGY,MAAM,GAAG,EAAG;gBACvBsG,UAAU,EAAC,QAAQ;gBACnBnJ,SAAS,EAAC,uDAAuD;gBACjEsI,KAAK,EAAE;kBAAEkB,QAAQ,EAAE;gBAAO,CAAE;gBAAA7B,QAAA,EAE3BtF,IAAI,CAAC4E,QAAQ,CAACwC,SAAS,IAAIpH,IAAI,CAACmB,EAAE,CAACkG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG;cAAC;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChE,CACP,EAGA1F,IAAI,CAACwH,WAAW,GAAG,CAAC,iBACnBnK,OAAA;gBACE2J,EAAE,EAAElE,GAAG,CAACnD,CAAC,GAAGa,MAAM,GAAG,CAAE;gBACvByG,EAAE,EAAEnE,GAAG,CAAClD,CAAC,GAAGY,MAAM,GAAG,CAAE;gBACvB0G,CAAC,EAAC,GAAG;gBACL/C,IAAI,EAAC,SAAS;gBACdxG,SAAS,EAAC;cAAqB;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CACF;YAAA,GAvCK1F,IAAI,CAACmB,EAAE;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwCZ,CAAC;UAER,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAGLrH,WAAW,iBACVhB,OAAA;QAAKM,SAAS,EAAC,4EAA4E;QACtFsI,KAAK,EAAE;UACLwB,IAAI,EAAEhH,IAAI,CAACC,GAAG,CAACzC,UAAU,CAACE,KAAK,GAAG,GAAG,EAAE,CAAC,EAAAL,kBAAA,GAAAW,aAAa,CAACgE,GAAG,CAACpE,WAAW,CAAC8C,EAAE,CAAC,cAAArD,kBAAA,uBAAjCA,kBAAA,CAAmC6B,CAAC,KAAI,CAAC,IAAI,EAAE,CAAC;UACxF+H,GAAG,EAAEjH,IAAI,CAACE,GAAG,CAAC,EAAE,EAAE,CAAC,EAAA5C,mBAAA,GAAAU,aAAa,CAACgE,GAAG,CAACpE,WAAW,CAAC8C,EAAE,CAAC,cAAApD,mBAAA,uBAAjCA,mBAAA,CAAmC6B,CAAC,KAAI,CAAC,IAAI,EAAE;QACpE,CAAE;QAAA0F,QAAA,gBACLjI,OAAA;UAAKM,SAAS,EAAC,2BAA2B;UAAA2H,QAAA,EAAEjH,WAAW,CAAC8C;QAAE;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjErI,OAAA;UAAKM,SAAS,EAAC,uBAAuB;UAAA2H,QAAA,GAAC,OAChC,EAACjH,WAAW,CAAC6B,WAAW,CAACD,UAAU,EAAC,UAAG,EAAC5B,WAAW,CAACmJ,WAAW,EAAC,cACvE;QAAA;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNrI,OAAA;UAAKM,SAAS,EAAC,4BAA4B;UAAA2H,QAAA,GAAC,cAC9B,EAAC,CAACjH,WAAW,CAACgH,eAAe,GAAG,GAAG,EAAE0B,OAAO,CAAC,CAAC,CAAC,EAAC,GAC9D;QAAA;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGAnH,WAAW,iBACVlB,OAAA;QAAKM,SAAS,EAAC,4EAA4E;QACtFsI,KAAK,EAAE;UAAEwB,IAAI,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAG,CAAE;QAAApC,QAAA,gBAChCjI,OAAA;UAAKM,SAAS,EAAC,2BAA2B;UAAA2H,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnErI,OAAA;UAAKM,SAAS,EAAC,uBAAuB;UAAA2H,QAAA,GACnC/G,WAAW,CAACmE,MAAM,EAAC,UAAG,EAACnE,WAAW,CAACoE,MAAM;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACNrI,OAAA;UAAKM,SAAS,EAAC,4BAA4B;UAAA2H,QAAA,GAAC,cAC9B,EAAC,CAAC/G,WAAW,CAACsE,MAAM,GAAG,GAAG,EAAEkE,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG,EAACxI,WAAW,CAACkF,IAAI,EAAC,GAC1E;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLnH,WAAW,CAAC0G,UAAU,CAAC0C,OAAO,CAACC,oBAAoB,CAAChH,MAAM,GAAG,CAAC,iBAC7DvD,OAAA;UAAKM,SAAS,EAAC,4BAA4B;UAAA2H,QAAA,GAAC,UAClC,EAAC/G,WAAW,CAAC0G,UAAU,CAAC0C,OAAO,CAACC,oBAAoB,CAACN,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAClFhJ,WAAW,CAAC0G,UAAU,CAAC0C,OAAO,CAACC,oBAAoB,CAAChH,MAAM,GAAG,CAAC,IAAI,KAAK;QAAA;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNrI,OAAA;MAAKM,SAAS,EAAC,yBAAyB;MAAA2H,QAAA,eACtCjI,OAAA;QAAKM,SAAS,EAAC,+CAA+C;QAAA2H,QAAA,gBAC5DjI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA;YAAKM,SAAS,EAAC;UAAoC;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1DrI,OAAA;YAAAiI,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNrI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA;YAAKM,SAAS,EAAC;UAAiC;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvDrI,OAAA;YAAAiI,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNrI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA;YAAKM,SAAS,EAAC;UAAmC;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzDrI,OAAA;YAAAiI,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNrI,OAAA;UAAKM,SAAS,EAAC,yBAAyB;UAAA2H,QAAA,gBACtCjI,OAAA;YAAKM,SAAS,EAAC;UAAsB;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrI,OAAA;YAAAiI,QAAA,EAAM;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9H,EAAA,CAngBIN,4BAA4B;AAAAuK,EAAA,GAA5BvK,4BAA4B;AAqgBlC,eAAeA,4BAA4B;AAAC,IAAAuK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}