name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
  
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production bundle
      run: npm run build
    
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -sb build/static/js/*.js | awk '{sum+=$1} END {print sum}')
        echo "Bundle size: $BUNDLE_SIZE bytes"
        # Target: 65-70 kB = 66560-71680 bytes
        if [ $BUNDLE_SIZE -gt 71680 ]; then
          echo "❌ Bundle size too large: $BUNDLE_SIZE bytes (target: <70 kB)"
          exit 1
        else
          echo "✅ Bundle size within limits: $BUNDLE_SIZE bytes"
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: build/
        retention-days: 7

  content-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas matplotlib seaborn
    
    - name: Run content validation
      run: |
        if [ -f "content_tester.py" ]; then
          python content_tester.py
        else
          echo "Content tester not found, skipping validation"
        fi
    
    - name: Run data validation
      run: |
        if [ -f "data_validator.py" ]; then
          python data_validator.py
        else
          echo "Data validator not found, skipping validation"
        fi
    
    - name: Check content quality
      run: |
        if [ -f "comprehensive_test_report.txt" ]; then
          PASS_RATE=$(grep -o "Total Passed: [0-9]* ([0-9.]*%)" comprehensive_test_report.txt | grep -o "[0-9.]*%" | head -1 | sed 's/%//')
          echo "Content quality pass rate: $PASS_RATE%"
          
          # Target: >90% pass rate
          if (( $(echo "$PASS_RATE < 90" | bc -l) )); then
            echo "❌ Content quality below threshold: $PASS_RATE% (target: >90%)"
            exit 1
          else
            echo "✅ Content quality meets standards: $PASS_RATE%"
          fi
        else
          echo "No test report found, skipping quality check"
        fi

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint src/ --ext .js,.jsx --max-warnings 0
    
    - name: Check code formatting
      run: |
        # Check if prettier is available
        if command -v prettier &> /dev/null; then
          npx prettier --check src/
        else
          echo "Prettier not configured, skipping format check"
        fi

  accessibility:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for accessibility testing
      run: npm run build
    
    - name: Install accessibility testing tools
      run: npm install -g @axe-core/cli serve
    
    - name: Serve application
      run: serve -s build -l 3000 &
    
    - name: Wait for server
      run: sleep 5
    
    - name: Run accessibility tests
      run: axe http://localhost:3000 --exit