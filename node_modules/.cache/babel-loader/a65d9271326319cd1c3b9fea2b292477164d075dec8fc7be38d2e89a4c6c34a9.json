{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * useResponsive Hook\n * Custom hook to handle responsive design logic\n * Detects screen size changes and returns whether the current screen is mobile\n * \n * Returns:\n * - isMobile: boolean - true if screen width is less than 768px\n */\n\nimport { useState, useEffect } from 'react';\nconst useResponsive = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    // Function to check if screen is mobile size\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    // Check on initial load\n    checkMobile();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkMobile);\n\n    // Cleanup event listener on component unmount\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n  return isMobile;\n};\n_s(useResponsive, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\nexport default useResponsive;","map":{"version":3,"names":["useState","useEffect","useResponsive","_s","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/joshpankin/My Drive/Obsidian/1. Projects/Antibiotic Learning app/src/hooks/useResponsive.js"],"sourcesContent":["/**\n * useResponsive Hook\n * Custom hook to handle responsive design logic\n * Detects screen size changes and returns whether the current screen is mobile\n * \n * Returns:\n * - isMobile: boolean - true if screen width is less than 768px\n */\n\nimport { useState, useEffect } from 'react';\n\nconst useResponsive = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    // Function to check if screen is mobile size\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    // Check on initial load\n    checkMobile();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkMobile);\n\n    // Cleanup event listener on component unmount\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  return isMobile;\n};\n\nexport default useResponsive;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACxBD,WAAW,CAACE,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;IACtC,CAAC;;IAED;IACAF,WAAW,CAAC,CAAC;;IAEb;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,WAAW,CAAC;;IAE9C;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,QAAQ;AACjB,CAAC;AAACD,EAAA,CApBID,aAAa;AAsBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}